{"version":3,"sources":["webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/object.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/signature.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/index.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/hash.js","webpack:///./node_modules/bnc-onboard/node_modules/bn.js/lib/bn.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/externals.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/bytes.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/account.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/constants.js","webpack:///./node_modules/bnc-onboard/node_modules/ethereumjs-util/dist/helpers.js"],"names":["Object","defineProperty","exports","value","defineProperties","ethjsUtil","assert","rlp","bytes_1","self","fields","data","raw","_fields","toJSON","label","obj_1","forEach","field","toString","baToJSON","serialize","encode","i","getter","setter","v","toBuffer","allowZero","Buffer","allocUnsafe","allowLess","length","unpadBuffer","name","push","enumerable","configurable","get","set","default","alias","from","stripHexPrefix","isBuffer","decode","Array","isArray","Error","d","keys_1","keys","indexOf","hashPersonalMessage","isValidSignature","fromRpcSig","toRpcSig","ecrecover","ecsign","_a","ecdsaSign","ecdsaRecover","publicKeyConvert","BN","hash_1","helpers_1","calculateSigRecovery","chainId","isValidSigRecovery","recovery","msgHash","privateKey","sig","recid","ret","r","signature","slice","s","concat","setLengthLeft","senderPubKey","bufferToHex","buf","homesteadOrLater","SECP256K1_N_DIV_2","SECP256K1_N","rBN","sBN","isZero","gt","cmp","message","assertIsBuffer","prefix","keccak","__createBinding","this","create","o","m","k","k2","undefined","__exportStar","p","hasOwnProperty","rlphash","ripemd160FromArray","ripemd160FromString","ripemd160","sha256FromArray","sha256FromString","sha256","keccakFromArray","keccakFromHexString","keccakFromString","keccak256","keccak224","keccak384","k256","keccak512","createHash","a","bits","assertIsString","assertIsHexString","assertIsArray","_sha256","update","digest","padded","_ripemd160","hash","val","msg","inherits","ctor","superCtor","super_","TempCtor","prototype","constructor","number","base","endian","isBN","negative","words","red","_init","module","wordSize","e","parseHex","str","start","end","len","Math","min","z","b","c","charCodeAt","parseBase","mul","move","dest","src","inspect","num","max","left","right","_initNumber","_initArray","replace","_parseHex","_parseBase","_strip","toArray","ceil","j","w","off","limbLen","limbPow","total","mod","word","imuln","_iaddn","pow","copy","_move","clone","_expand","size","_normSign","Symbol","for","zeros","groupSizes","groupBases","padding","out","carry","groupSize","groupBase","modrn","idivn","toNumber","toArrayLike","allocate","ArrayType","toBitArray","bitLength","bit","wbit","smallMulTo","lo","ncarry","rword","maxJ","byteLength","reqLength","res","postfix","_toArrayLikeLE","position","shift","_toArrayLikeBE","clz32","_countBits","t","_zeroBits","hi","zeroBits","toTwos","width","abs","inotn","iaddn","fromTwos","testn","notn","ineg","isNeg","neg","iuor","ior","or","uor","iuand","iand","and","uand","iuxor","ixor","xor","uxor","bytesNeeded","bitsLeft","setn","iadd","isub","add","sub","comb10MulTo","mid","a0","al0","ah0","a1","al1","ah1","a2","al2","ah2","a3","al3","ah3","a4","al4","ah4","a5","al5","ah5","a6","al6","ah6","a7","al7","ah7","a8","al8","ah8","a9","al9","ah9","b0","bl0","bh0","b1","bl1","bh1","b2","bl2","bh2","b3","bl3","bh3","b4","bl4","bh4","b5","bl5","bh5","b6","bl6","bh6","b7","bl7","bh7","b8","bl8","bh8","b9","bl9","bh9","imul","w0","w1","w2","w3","w4","w5","w6","w7","w8","w9","w10","w11","w12","w13","w14","w15","w16","w17","w18","bigMulTo","hncarry","jumboMulTo","FFTM","x","y","mulTo","makeRBT","N","l","revBin","rb","permute","rbt","rws","iws","rtws","itws","transform","rtwdf","cos","PI","itwdf","sin","rtwdf_","itwdf_","re","ie","ro","io","rx","guessLen13b","n","odd","conjugate","normalize13b","ws","round","convert13b","stub","ph","mulp","_","rwst","iwst","nrws","nrwst","niwst","rmws","mulf","isNegNum","muln","sqr","isqr","q","iushln","carryMask","newCarry","ishln","iushrn","hint","extended","h","mask","maskedWords","ishrn","shln","ushln","shrn","ushrn","imaskn","maskn","isubn","addn","subn","iabs","_ishlnsubmul","_wordDiv","mode","bhi","bhiBits","diff","qj","div","divmod","positive","divn","umod","divRound","dm","half","r2","andln","acc","modn","egcd","A","B","C","D","g","isEven","yp","xp","im","isOdd","jm","gcd","_invmp","x1","x2","delta","cmpn","invm","bincn","ucmp","gtn","gten","gte","ltn","lt","lten","lte","eqn","eq","Red","toRed","ctx","convertTo","_forceRed","fromRed","convertFrom","forceRed","redAdd","redIAdd","redSub","redISub","redShl","shl","redMul","_verify2","redIMul","redSqr","_verify1","redISqr","redSqrt","sqrt","redInvm","redNeg","redPow","primes","p224","p192","p25519","MPrime","tmp","_tmp","K256","call","P224","P192","P25519","prime","_prime","Mont","imod","rinv","minv","ireduce","rlen","split","imulK","strip","input","output","outLen","prev","next","mod3","one","nOne","lpow","inv","windowSize","wnd","current","currentLen","mont","u","addHexPrefix","toUnsigned","fromSigned","bufferToInt","unpadHexString","unpadArray","setLengthRight","bytes","fill","setLength","stripZeros","first","Uint8Array","isHexString","padToEven","intToBuffer","isHexPrefixed","ba","array","importPublic","privateToPublic","privateToAddress","publicToAddress","pubToAddress","isValidPublic","isValidPrivate","generateAddress2","generateAddress","isValidChecksumAddress","toChecksumAddress","isZeroAddress","isValidAddress","zeroAddress","privateKeyVerify","publicKeyCreate","publicKeyVerify","addressLength","addr","hexAddress","test","zeroAddr","eip1191ChainId","address","toLowerCase","parseInt","toUpperCase","nonce","nonceBN","salt","initCode","publicKey","sanitize","pubKey","KECCAK256_RLP","KECCAK256_RLP_S","KECCAK256_RLP_ARRAY","KECCAK256_RLP_ARRAY_S","KECCAK256_NULL","KECCAK256_NULL_S","TWO_POW256","MAX_INTEGER"],"mappings":"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","file":"js/chunk-64ea2b25.ff6416fa.js","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.defineProperties = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar assert = require(\"assert\");\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\n/**\n * Defines properties on a `Object`. It make the assumption that underlying data is binary.\n * @param self the `Object` to define properties on\n * @param fields an array fields to define. Fields can contain:\n * * `name` - the name of the properties\n * * `length` - the number of bytes the field can have\n * * `allowLess` - if the field can be less than the length\n * * `allowEmpty`\n * @param data data to be validated against the definitions\n * @deprecated\n */\nexports.defineProperties = function (self, fields, data) {\n    self.raw = [];\n    self._fields = [];\n    // attach the `toJSON`\n    self.toJSON = function (label) {\n        if (label === void 0) { label = false; }\n        if (label) {\n            var obj_1 = {};\n            self._fields.forEach(function (field) {\n                obj_1[field] = \"0x\" + self[field].toString('hex');\n            });\n            return obj_1;\n        }\n        return bytes_1.baToJSON(self.raw);\n    };\n    self.serialize = function serialize() {\n        return rlp.encode(self.raw);\n    };\n    fields.forEach(function (field, i) {\n        self._fields.push(field.name);\n        function getter() {\n            return self.raw[i];\n        }\n        function setter(v) {\n            v = bytes_1.toBuffer(v);\n            if (v.toString('hex') === '00' && !field.allowZero) {\n                v = Buffer.allocUnsafe(0);\n            }\n            if (field.allowLess && field.length) {\n                v = bytes_1.unpadBuffer(v);\n                assert(field.length >= v.length, \"The field \" + field.name + \" must not have more \" + field.length + \" bytes\");\n            }\n            else if (!(field.allowZero && v.length === 0) && field.length) {\n                assert(field.length === v.length, \"The field \" + field.name + \" must have byte length of \" + field.length);\n            }\n            self.raw[i] = v;\n        }\n        Object.defineProperty(self, field.name, {\n            enumerable: true,\n            configurable: true,\n            get: getter,\n            set: setter,\n        });\n        if (field.default) {\n            self[field.name] = field.default;\n        }\n        // attach alias\n        if (field.alias) {\n            Object.defineProperty(self, field.alias, {\n                enumerable: false,\n                configurable: true,\n                set: setter,\n                get: getter,\n            });\n        }\n    });\n    // if the constuctor is passed data\n    if (data) {\n        if (typeof data === 'string') {\n            data = Buffer.from(ethjsUtil.stripHexPrefix(data), 'hex');\n        }\n        if (Buffer.isBuffer(data)) {\n            data = rlp.decode(data);\n        }\n        if (Array.isArray(data)) {\n            if (data.length > self._fields.length) {\n                throw new Error('wrong number of fields in data');\n            }\n            // make sure all the items are buffers\n            data.forEach(function (d, i) {\n                self[self._fields[i]] = bytes_1.toBuffer(d);\n            });\n        }\n        else if (typeof data === 'object') {\n            var keys_1 = Object.keys(data);\n            fields.forEach(function (field) {\n                if (keys_1.indexOf(field.name) !== -1)\n                    self[field.name] = data[field.name];\n                if (keys_1.indexOf(field.alias) !== -1)\n                    self[field.alias] = data[field.alias];\n            });\n        }\n        else {\n            throw new Error('invalid data');\n        }\n    }\n};\n//# sourceMappingURL=object.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.hashPersonalMessage = exports.isValidSignature = exports.fromRpcSig = exports.toRpcSig = exports.ecrecover = exports.ecsign = void 0;\nvar _a = require('ethereum-cryptography/secp256k1'), ecdsaSign = _a.ecdsaSign, ecdsaRecover = _a.ecdsaRecover, publicKeyConvert = _a.publicKeyConvert;\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns the ECDSA signature of a message hash.\n */\nexports.ecsign = function (msgHash, privateKey, chainId) {\n    var sig = ecdsaSign(msgHash, privateKey);\n    var recovery = sig.recid;\n    var ret = {\n        r: Buffer.from(sig.signature.slice(0, 32)),\n        s: Buffer.from(sig.signature.slice(32, 64)),\n        v: chainId ? recovery + (chainId * 2 + 35) : recovery + 27,\n    };\n    return ret;\n};\n/**\n * ECDSA public key recovery from signature.\n * @returns Recovered public key\n */\nexports.ecrecover = function (msgHash, v, r, s, chainId) {\n    var signature = Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32)], 64);\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    var senderPubKey = ecdsaRecover(signature, recovery, msgHash);\n    return Buffer.from(publicKeyConvert(senderPubKey, false).slice(1));\n};\n/**\n * Convert signature parameters into the format of `eth_sign` RPC method.\n * @returns Signature\n */\nexports.toRpcSig = function (v, r, s, chainId) {\n    var recovery = calculateSigRecovery(v, chainId);\n    if (!isValidSigRecovery(recovery)) {\n        throw new Error('Invalid signature v value');\n    }\n    // geth (and the RPC eth_sign method) uses the 65 byte format used by Bitcoin\n    return bytes_1.bufferToHex(Buffer.concat([bytes_1.setLengthLeft(r, 32), bytes_1.setLengthLeft(s, 32), bytes_1.toBuffer(v)]));\n};\n/**\n * Convert signature format of the `eth_sign` RPC method to signature parameters\n * NOTE: all because of a bug in geth: https://github.com/ethereum/go-ethereum/issues/2053\n */\nexports.fromRpcSig = function (sig) {\n    var buf = bytes_1.toBuffer(sig);\n    // NOTE: with potential introduction of chainId this might need to be updated\n    if (buf.length !== 65) {\n        throw new Error('Invalid signature length');\n    }\n    var v = buf[64];\n    // support both versions of `eth_sign` responses\n    if (v < 27) {\n        v += 27;\n    }\n    return {\n        v: v,\n        r: buf.slice(0, 32),\n        s: buf.slice(32, 64),\n    };\n};\n/**\n * Validate a ECDSA signature.\n * @param homesteadOrLater Indicates whether this is being used on either the homestead hardfork or a later one\n */\nexports.isValidSignature = function (v, r, s, homesteadOrLater, chainId) {\n    if (homesteadOrLater === void 0) { homesteadOrLater = true; }\n    var SECP256K1_N_DIV_2 = new BN('7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0', 16);\n    var SECP256K1_N = new BN('fffffffffffffffffffffffffffffffebaaedce6af48a03bbfd25e8cd0364141', 16);\n    if (r.length !== 32 || s.length !== 32) {\n        return false;\n    }\n    if (!isValidSigRecovery(calculateSigRecovery(v, chainId))) {\n        return false;\n    }\n    var rBN = new BN(r);\n    var sBN = new BN(s);\n    if (rBN.isZero() || rBN.gt(SECP256K1_N) || sBN.isZero() || sBN.gt(SECP256K1_N)) {\n        return false;\n    }\n    if (homesteadOrLater && sBN.cmp(SECP256K1_N_DIV_2) === 1) {\n        return false;\n    }\n    return true;\n};\n/**\n * Returns the keccak-256 hash of `message`, prefixed with the header used by the `eth_sign` RPC call.\n * The output of this function can be fed into `ecsign` to produce the same signature as the `eth_sign`\n * call for a given `message`, or fed to `ecrecover` along with a signature to recover the public key\n * used to produce the signature.\n */\nexports.hashPersonalMessage = function (message) {\n    helpers_1.assertIsBuffer(message);\n    var prefix = Buffer.from(\"\\u0019Ethereum Signed Message:\\n\" + message.length.toString(), 'utf-8');\n    return hash_1.keccak(Buffer.concat([prefix, message]));\n};\nfunction calculateSigRecovery(v, chainId) {\n    return chainId ? v - (2 * chainId + 35) : v - 27;\n}\nfunction isValidSigRecovery(recovery) {\n    return recovery === 0 || recovery === 1;\n}\n//# sourceMappingURL=signature.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/// <reference path=\"./@types/ethjs-util/index.ts\"/>\n/**\n * Constants\n */\n__exportStar(require(\"./constants\"), exports);\n/**\n * Public-key cryptography (secp256k1) and addresses\n */\n__exportStar(require(\"./account\"), exports);\n/**\n * Hash functions\n */\n__exportStar(require(\"./hash\"), exports);\n/**\n * ECDSA signature\n */\n__exportStar(require(\"./signature\"), exports);\n/**\n * Utilities for manipulating Buffers, byte arrays, etc.\n */\n__exportStar(require(\"./bytes\"), exports);\n/**\n * Function for definining properties on an object\n */\n__exportStar(require(\"./object\"), exports);\n/**\n * External exports (BN, rlp, secp256k1)\n */\n__exportStar(require(\"./externals\"), exports);\n/**\n * Export ethjs-util methods\n */\n__exportStar(require(\"ethjs-util\"), exports);\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlphash = exports.ripemd160FromArray = exports.ripemd160FromString = exports.ripemd160 = exports.sha256FromArray = exports.sha256FromString = exports.sha256 = exports.keccakFromArray = exports.keccakFromHexString = exports.keccakFromString = exports.keccak256 = exports.keccak = void 0;\nvar _a = require('ethereum-cryptography/keccak'), keccak224 = _a.keccak224, keccak384 = _a.keccak384, k256 = _a.keccak256, keccak512 = _a.keccak512;\nvar createHash = require('create-hash');\nvar rlp = require(\"rlp\");\nvar bytes_1 = require(\"./bytes\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Creates Keccak hash of a Buffer input\n * @param a The input data (Buffer)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccak = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsBuffer(a);\n    switch (bits) {\n        case 224: {\n            return keccak224(a);\n        }\n        case 256: {\n            return k256(a);\n        }\n        case 384: {\n            return keccak384(a);\n        }\n        case 512: {\n            return keccak512(a);\n        }\n        default: {\n            throw new Error(\"Invald algorithm: keccak\" + bits);\n        }\n    }\n};\n/**\n * Creates Keccak-256 hash of the input, alias for keccak(a, 256).\n * @param a The input data (Buffer)\n */\nexports.keccak256 = function (a) {\n    return exports.keccak(a);\n};\n/**\n * Creates Keccak hash of a utf-8 string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsString(a);\n    var buf = Buffer.from(a, 'utf8');\n    return exports.keccak(buf, bits);\n};\n/**\n * Creates Keccak hash of an 0x-prefixed string input\n * @param a The input data (String)\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromHexString = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsHexString(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates Keccak hash of a number array input\n * @param a The input data (number[])\n * @param bits (number = 256) The Keccak width\n */\nexports.keccakFromArray = function (a, bits) {\n    if (bits === void 0) { bits = 256; }\n    helpers_1.assertIsArray(a);\n    return exports.keccak(bytes_1.toBuffer(a), bits);\n};\n/**\n * Creates SHA256 hash of a Buffer input.\n * @param a The input data (Buffer)\n */\nexports.sha256 = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a string input.\n * @param a The input data (string)\n */\nexports.sha256FromString = function (a) {\n    helpers_1.assertIsString(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of a number[] input.\n * @param a The input data (number[])\n */\nexports.sha256FromArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return _sha256(a);\n};\n/**\n * Creates SHA256 hash of an input.\n * @param  a The input data (Buffer|Array|String)\n */\nvar _sha256 = function (a) {\n    a = bytes_1.toBuffer(a);\n    return createHash('sha256')\n        .update(a)\n        .digest();\n};\n/**\n * Creates RIPEMD160 hash of a Buffer input.\n * @param a The input data (Buffer)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160 = function (a, padded) {\n    helpers_1.assertIsBuffer(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a string input.\n * @param a The input data (String)\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromString = function (a, padded) {\n    helpers_1.assertIsString(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of a number[] input.\n * @param a The input data (number[])\n * @param padded Whether it should be padded to 256 bits or not\n */\nexports.ripemd160FromArray = function (a, padded) {\n    helpers_1.assertIsArray(a);\n    return _ripemd160(a, padded);\n};\n/**\n * Creates RIPEMD160 hash of the input.\n * @param a The input data (Buffer|Array|String|Number)\n * @param padded Whether it should be padded to 256 bits or not\n */\nvar _ripemd160 = function (a, padded) {\n    a = bytes_1.toBuffer(a);\n    var hash = createHash('rmd160')\n        .update(a)\n        .digest();\n    if (padded === true) {\n        return bytes_1.setLengthLeft(hash, 32);\n    }\n    else {\n        return hash;\n    }\n};\n/**\n * Creates SHA-3 hash of the RLP encoded version of the input.\n * @param a The input data\n */\nexports.rlphash = function (a) {\n    return exports.keccak(rlp.encode(a));\n};\n//# sourceMappingURL=hash.js.map","(function (module, exports) {\n  'use strict';\n\n  // Utils\n  function assert (val, msg) {\n    if (!val) throw new Error(msg || 'Assertion failed');\n  }\n\n  // Could use `inherits` module, but don't want to move from single file\n  // architecture yet.\n  function inherits (ctor, superCtor) {\n    ctor.super_ = superCtor;\n    var TempCtor = function () {};\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  }\n\n  // BN\n\n  function BN (number, base, endian) {\n    if (BN.isBN(number)) {\n      return number;\n    }\n\n    this.negative = 0;\n    this.words = null;\n    this.length = 0;\n\n    // Reduction context\n    this.red = null;\n\n    if (number !== null) {\n      if (base === 'le' || base === 'be') {\n        endian = base;\n        base = 10;\n      }\n\n      this._init(number || 0, base || 10, endian || 'be');\n    }\n  }\n  if (typeof module === 'object') {\n    module.exports = BN;\n  } else {\n    exports.BN = BN;\n  }\n\n  BN.BN = BN;\n  BN.wordSize = 26;\n\n  var Buffer;\n  try {\n    Buffer = require('buffer').Buffer;\n  } catch (e) {\n  }\n\n  BN.isBN = function isBN (num) {\n    if (num instanceof BN) {\n      return true;\n    }\n\n    return num !== null && typeof num === 'object' &&\n      num.constructor.wordSize === BN.wordSize && Array.isArray(num.words);\n  };\n\n  BN.max = function max (left, right) {\n    if (left.cmp(right) > 0) return left;\n    return right;\n  };\n\n  BN.min = function min (left, right) {\n    if (left.cmp(right) < 0) return left;\n    return right;\n  };\n\n  BN.prototype._init = function init (number, base, endian) {\n    if (typeof number === 'number') {\n      return this._initNumber(number, base, endian);\n    }\n\n    if (typeof number === 'object') {\n      return this._initArray(number, base, endian);\n    }\n\n    if (base === 'hex') {\n      base = 16;\n    }\n    assert(base === (base | 0) && base >= 2 && base <= 36);\n\n    number = number.toString().replace(/\\s+/g, '');\n    var start = 0;\n    if (number[0] === '-') {\n      start++;\n    }\n\n    if (base === 16) {\n      this._parseHex(number, start);\n    } else {\n      this._parseBase(number, base, start);\n    }\n\n    if (number[0] === '-') {\n      this.negative = 1;\n    }\n\n    this._strip();\n\n    if (endian !== 'le') return;\n\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initNumber = function _initNumber (number, base, endian) {\n    if (number < 0) {\n      this.negative = 1;\n      number = -number;\n    }\n    if (number < 0x4000000) {\n      this.words = [number & 0x3ffffff];\n      this.length = 1;\n    } else if (number < 0x10000000000000) {\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff\n      ];\n      this.length = 2;\n    } else {\n      assert(number < 0x20000000000000); // 2 ^ 53 (unsafe)\n      this.words = [\n        number & 0x3ffffff,\n        (number / 0x4000000) & 0x3ffffff,\n        1\n      ];\n      this.length = 3;\n    }\n\n    if (endian !== 'le') return;\n\n    // Reverse the bytes\n    this._initArray(this.toArray(), base, endian);\n  };\n\n  BN.prototype._initArray = function _initArray (number, base, endian) {\n    // Perhaps a Uint8Array\n    assert(typeof number.length === 'number');\n    if (number.length <= 0) {\n      this.words = [0];\n      this.length = 1;\n      return this;\n    }\n\n    this.length = Math.ceil(number.length / 3);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    var off = 0;\n    if (endian === 'be') {\n      for (i = number.length - 1, j = 0; i >= 0; i -= 3) {\n        w = number[i] | (number[i - 1] << 8) | (number[i - 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    } else if (endian === 'le') {\n      for (i = 0, j = 0; i < number.length; i += 3) {\n        w = number[i] | (number[i + 1] << 8) | (number[i + 2] << 16);\n        this.words[j] |= (w << off) & 0x3ffffff;\n        this.words[j + 1] = (w >>> (26 - off)) & 0x3ffffff;\n        off += 24;\n        if (off >= 26) {\n          off -= 26;\n          j++;\n        }\n      }\n    }\n    return this._strip();\n  };\n\n  function parseHex (str, start, end) {\n    var r = 0;\n    var len = Math.min(str.length, end);\n    var z = 0;\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r <<= 4;\n\n      var b;\n\n      // 'a' - 'f'\n      if (c >= 49 && c <= 54) {\n        b = c - 49 + 0xa;\n\n      // 'A' - 'F'\n      } else if (c >= 17 && c <= 22) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n\n      r |= b;\n      z |= b;\n    }\n\n    assert(!(z & 0xf0), 'Invalid character in ' + str);\n    return r;\n  }\n\n  BN.prototype._parseHex = function _parseHex (number, start) {\n    // Create possibly bigger array to ensure that it fits the number\n    this.length = Math.ceil((number.length - start) / 6);\n    this.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      this.words[i] = 0;\n    }\n\n    var j, w;\n    // Scan 24-bit chunks and add them to the number\n    var off = 0;\n    for (i = number.length - 6, j = 0; i >= start; i -= 6) {\n      w = parseHex(number, i, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      // NOTE: `0x3fffff` is intentional here, 26bits max shift + 24bit hex limb\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n      off += 24;\n      if (off >= 26) {\n        off -= 26;\n        j++;\n      }\n    }\n    if (i + 6 !== start) {\n      w = parseHex(number, start, i + 6);\n      this.words[j] |= (w << off) & 0x3ffffff;\n      this.words[j + 1] |= w >>> (26 - off) & 0x3fffff;\n    }\n    this._strip();\n  };\n\n  function parseBase (str, start, end, mul) {\n    var r = 0;\n    var b = 0;\n    var len = Math.min(str.length, end);\n    for (var i = start; i < len; i++) {\n      var c = str.charCodeAt(i) - 48;\n\n      r *= mul;\n\n      // 'a'\n      if (c >= 49) {\n        b = c - 49 + 0xa;\n\n      // 'A'\n      } else if (c >= 17) {\n        b = c - 17 + 0xa;\n\n      // '0' - '9'\n      } else {\n        b = c;\n      }\n      assert(c >= 0 && b < mul, 'Invalid character');\n      r += b;\n    }\n    return r;\n  }\n\n  BN.prototype._parseBase = function _parseBase (number, base, start) {\n    // Initialize as zero\n    this.words = [0];\n    this.length = 1;\n\n    // Find length of limb in base\n    for (var limbLen = 0, limbPow = 1; limbPow <= 0x3ffffff; limbPow *= base) {\n      limbLen++;\n    }\n    limbLen--;\n    limbPow = (limbPow / base) | 0;\n\n    var total = number.length - start;\n    var mod = total % limbLen;\n    var end = Math.min(total, total - mod) + start;\n\n    var word = 0;\n    for (var i = start; i < end; i += limbLen) {\n      word = parseBase(number, i, i + limbLen, base);\n\n      this.imuln(limbPow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n\n    if (mod !== 0) {\n      var pow = 1;\n      word = parseBase(number, i, number.length, base);\n\n      for (i = 0; i < mod; i++) {\n        pow *= base;\n      }\n\n      this.imuln(pow);\n      if (this.words[0] + word < 0x4000000) {\n        this.words[0] += word;\n      } else {\n        this._iaddn(word);\n      }\n    }\n  };\n\n  BN.prototype.copy = function copy (dest) {\n    dest.words = new Array(this.length);\n    for (var i = 0; i < this.length; i++) {\n      dest.words[i] = this.words[i];\n    }\n    dest.length = this.length;\n    dest.negative = this.negative;\n    dest.red = this.red;\n  };\n\n  function move (dest, src) {\n    dest.words = src.words;\n    dest.length = src.length;\n    dest.negative = src.negative;\n    dest.red = src.red;\n  }\n\n  BN.prototype._move = function _move (dest) {\n    move(dest, this);\n  };\n\n  BN.prototype.clone = function clone () {\n    var r = new BN(null);\n    this.copy(r);\n    return r;\n  };\n\n  BN.prototype._expand = function _expand (size) {\n    while (this.length < size) {\n      this.words[this.length++] = 0;\n    }\n    return this;\n  };\n\n  // Remove leading `0` from `this`\n  BN.prototype._strip = function strip () {\n    while (this.length > 1 && this.words[this.length - 1] === 0) {\n      this.length--;\n    }\n    return this._normSign();\n  };\n\n  BN.prototype._normSign = function _normSign () {\n    // -0 = 0\n    if (this.length === 1 && this.words[0] === 0) {\n      this.negative = 0;\n    }\n    return this;\n  };\n\n  // Check Symbol.for because not everywhere where Symbol defined\n  // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol#Browser_compatibility\n  if (typeof Symbol !== 'undefined' && typeof Symbol.for === 'function') {\n    BN.prototype[Symbol.for('nodejs.util.inspect.custom')] = inspect;\n  } else {\n    BN.prototype.inspect = inspect;\n  }\n\n  function inspect () {\n    return (this.red ? '<BN-R: ' : '<BN: ') + this.toString(16) + '>';\n  }\n\n  /*\n\n  var zeros = [];\n  var groupSizes = [];\n  var groupBases = [];\n\n  var s = '';\n  var i = -1;\n  while (++i < BN.wordSize) {\n    zeros[i] = s;\n    s += '0';\n  }\n  groupSizes[0] = 0;\n  groupSizes[1] = 0;\n  groupBases[0] = 0;\n  groupBases[1] = 0;\n  var base = 2 - 1;\n  while (++base < 36 + 1) {\n    var groupSize = 0;\n    var groupBase = 1;\n    while (groupBase < (1 << BN.wordSize) / base) {\n      groupBase *= base;\n      groupSize += 1;\n    }\n    groupSizes[base] = groupSize;\n    groupBases[base] = groupBase;\n  }\n\n  */\n\n  var zeros = [\n    '',\n    '0',\n    '00',\n    '000',\n    '0000',\n    '00000',\n    '000000',\n    '0000000',\n    '00000000',\n    '000000000',\n    '0000000000',\n    '00000000000',\n    '000000000000',\n    '0000000000000',\n    '00000000000000',\n    '000000000000000',\n    '0000000000000000',\n    '00000000000000000',\n    '000000000000000000',\n    '0000000000000000000',\n    '00000000000000000000',\n    '000000000000000000000',\n    '0000000000000000000000',\n    '00000000000000000000000',\n    '000000000000000000000000',\n    '0000000000000000000000000'\n  ];\n\n  var groupSizes = [\n    0, 0,\n    25, 16, 12, 11, 10, 9, 8,\n    8, 7, 7, 7, 7, 6, 6,\n    6, 6, 6, 6, 6, 5, 5,\n    5, 5, 5, 5, 5, 5, 5,\n    5, 5, 5, 5, 5, 5, 5\n  ];\n\n  var groupBases = [\n    0, 0,\n    33554432, 43046721, 16777216, 48828125, 60466176, 40353607, 16777216,\n    43046721, 10000000, 19487171, 35831808, 62748517, 7529536, 11390625,\n    16777216, 24137569, 34012224, 47045881, 64000000, 4084101, 5153632,\n    6436343, 7962624, 9765625, 11881376, 14348907, 17210368, 20511149,\n    24300000, 28629151, 33554432, 39135393, 45435424, 52521875, 60466176\n  ];\n\n  BN.prototype.toString = function toString (base, padding) {\n    base = base || 10;\n    padding = padding | 0 || 1;\n\n    var out;\n    if (base === 16 || base === 'hex') {\n      out = '';\n      var off = 0;\n      var carry = 0;\n      for (var i = 0; i < this.length; i++) {\n        var w = this.words[i];\n        var word = (((w << off) | carry) & 0xffffff).toString(16);\n        carry = (w >>> (24 - off)) & 0xffffff;\n        if (carry !== 0 || i !== this.length - 1) {\n          out = zeros[6 - word.length] + word + out;\n        } else {\n          out = word + out;\n        }\n        off += 2;\n        if (off >= 26) {\n          off -= 26;\n          i--;\n        }\n      }\n      if (carry !== 0) {\n        out = carry.toString(16) + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    if (base === (base | 0) && base >= 2 && base <= 36) {\n      // var groupSize = Math.floor(BN.wordSize * Math.LN2 / Math.log(base));\n      var groupSize = groupSizes[base];\n      // var groupBase = Math.pow(base, groupSize);\n      var groupBase = groupBases[base];\n      out = '';\n      var c = this.clone();\n      c.negative = 0;\n      while (!c.isZero()) {\n        var r = c.modrn(groupBase).toString(base);\n        c = c.idivn(groupBase);\n\n        if (!c.isZero()) {\n          out = zeros[groupSize - r.length] + r + out;\n        } else {\n          out = r + out;\n        }\n      }\n      if (this.isZero()) {\n        out = '0' + out;\n      }\n      while (out.length % padding !== 0) {\n        out = '0' + out;\n      }\n      if (this.negative !== 0) {\n        out = '-' + out;\n      }\n      return out;\n    }\n\n    assert(false, 'Base should be between 2 and 36');\n  };\n\n  BN.prototype.toNumber = function toNumber () {\n    var ret = this.words[0];\n    if (this.length === 2) {\n      ret += this.words[1] * 0x4000000;\n    } else if (this.length === 3 && this.words[2] === 0x01) {\n      // NOTE: at this stage it is known that the top bit is set\n      ret += 0x10000000000000 + (this.words[1] * 0x4000000);\n    } else if (this.length > 2) {\n      assert(false, 'Number can only safely store up to 53 bits');\n    }\n    return (this.negative !== 0) ? -ret : ret;\n  };\n\n  BN.prototype.toJSON = function toJSON () {\n    return this.toString(16, 2);\n  };\n\n  if (Buffer) {\n    BN.prototype.toBuffer = function toBuffer (endian, length) {\n      return this.toArrayLike(Buffer, endian, length);\n    };\n  }\n\n  BN.prototype.toArray = function toArray (endian, length) {\n    return this.toArrayLike(Array, endian, length);\n  };\n\n  var allocate = function allocate (ArrayType, size) {\n    if (ArrayType.allocUnsafe) {\n      return ArrayType.allocUnsafe(size);\n    }\n    return new ArrayType(size);\n  };\n\n  BN.prototype.toArrayLike = function toArrayLike (ArrayType, endian, length) {\n    this._strip();\n\n    var byteLength = this.byteLength();\n    var reqLength = length || Math.max(1, byteLength);\n    assert(byteLength <= reqLength, 'byte array longer than desired length');\n    assert(reqLength > 0, 'Requested array length <= 0');\n\n    var res = allocate(ArrayType, reqLength);\n    var postfix = endian === 'le' ? 'LE' : 'BE';\n    this['_toArrayLike' + postfix](res, byteLength);\n    return res;\n  };\n\n  BN.prototype._toArrayLikeLE = function _toArrayLikeLE (res, byteLength) {\n    var position = 0;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position++] = word & 0xff;\n      if (position < res.length) {\n        res[position++] = (word >> 8) & 0xff;\n      }\n      if (position < res.length) {\n        res[position++] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position < res.length) {\n          res[position++] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position < res.length) {\n      res[position++] = carry;\n\n      while (position < res.length) {\n        res[position++] = 0;\n      }\n    }\n  };\n\n  BN.prototype._toArrayLikeBE = function _toArrayLikeBE (res, byteLength) {\n    var position = res.length - 1;\n    var carry = 0;\n\n    for (var i = 0, shift = 0; i < this.length; i++) {\n      var word = (this.words[i] << shift) | carry;\n\n      res[position--] = word & 0xff;\n      if (position >= 0) {\n        res[position--] = (word >> 8) & 0xff;\n      }\n      if (position >= 0) {\n        res[position--] = (word >> 16) & 0xff;\n      }\n\n      if (shift === 6) {\n        if (position >= 0) {\n          res[position--] = (word >> 24) & 0xff;\n        }\n        carry = 0;\n        shift = 0;\n      } else {\n        carry = word >>> 24;\n        shift += 2;\n      }\n    }\n\n    if (position >= 0) {\n      res[position--] = carry;\n\n      while (position >= 0) {\n        res[position--] = 0;\n      }\n    }\n  };\n\n  if (Math.clz32) {\n    BN.prototype._countBits = function _countBits (w) {\n      return 32 - Math.clz32(w);\n    };\n  } else {\n    BN.prototype._countBits = function _countBits (w) {\n      var t = w;\n      var r = 0;\n      if (t >= 0x1000) {\n        r += 13;\n        t >>>= 13;\n      }\n      if (t >= 0x40) {\n        r += 7;\n        t >>>= 7;\n      }\n      if (t >= 0x8) {\n        r += 4;\n        t >>>= 4;\n      }\n      if (t >= 0x02) {\n        r += 2;\n        t >>>= 2;\n      }\n      return r + t;\n    };\n  }\n\n  BN.prototype._zeroBits = function _zeroBits (w) {\n    // Short-cut\n    if (w === 0) return 26;\n\n    var t = w;\n    var r = 0;\n    if ((t & 0x1fff) === 0) {\n      r += 13;\n      t >>>= 13;\n    }\n    if ((t & 0x7f) === 0) {\n      r += 7;\n      t >>>= 7;\n    }\n    if ((t & 0xf) === 0) {\n      r += 4;\n      t >>>= 4;\n    }\n    if ((t & 0x3) === 0) {\n      r += 2;\n      t >>>= 2;\n    }\n    if ((t & 0x1) === 0) {\n      r++;\n    }\n    return r;\n  };\n\n  // Return number of used bits in a BN\n  BN.prototype.bitLength = function bitLength () {\n    var w = this.words[this.length - 1];\n    var hi = this._countBits(w);\n    return (this.length - 1) * 26 + hi;\n  };\n\n  function toBitArray (num) {\n    var w = new Array(num.bitLength());\n\n    for (var bit = 0; bit < w.length; bit++) {\n      var off = (bit / 26) | 0;\n      var wbit = bit % 26;\n\n      w[bit] = (num.words[off] >>> wbit) & 0x01;\n    }\n\n    return w;\n  }\n\n  // Number of trailing zero bits\n  BN.prototype.zeroBits = function zeroBits () {\n    if (this.isZero()) return 0;\n\n    var r = 0;\n    for (var i = 0; i < this.length; i++) {\n      var b = this._zeroBits(this.words[i]);\n      r += b;\n      if (b !== 26) break;\n    }\n    return r;\n  };\n\n  BN.prototype.byteLength = function byteLength () {\n    return Math.ceil(this.bitLength() / 8);\n  };\n\n  BN.prototype.toTwos = function toTwos (width) {\n    if (this.negative !== 0) {\n      return this.abs().inotn(width).iaddn(1);\n    }\n    return this.clone();\n  };\n\n  BN.prototype.fromTwos = function fromTwos (width) {\n    if (this.testn(width - 1)) {\n      return this.notn(width).iaddn(1).ineg();\n    }\n    return this.clone();\n  };\n\n  BN.prototype.isNeg = function isNeg () {\n    return this.negative !== 0;\n  };\n\n  // Return negative clone of `this`\n  BN.prototype.neg = function neg () {\n    return this.clone().ineg();\n  };\n\n  BN.prototype.ineg = function ineg () {\n    if (!this.isZero()) {\n      this.negative ^= 1;\n    }\n\n    return this;\n  };\n\n  // Or `num` with `this` in-place\n  BN.prototype.iuor = function iuor (num) {\n    while (this.length < num.length) {\n      this.words[this.length++] = 0;\n    }\n\n    for (var i = 0; i < num.length; i++) {\n      this.words[i] = this.words[i] | num.words[i];\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ior = function ior (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuor(num);\n  };\n\n  // Or `num` with `this`\n  BN.prototype.or = function or (num) {\n    if (this.length > num.length) return this.clone().ior(num);\n    return num.clone().ior(this);\n  };\n\n  BN.prototype.uor = function uor (num) {\n    if (this.length > num.length) return this.clone().iuor(num);\n    return num.clone().iuor(this);\n  };\n\n  // And `num` with `this` in-place\n  BN.prototype.iuand = function iuand (num) {\n    // b = min-length(num, this)\n    var b;\n    if (this.length > num.length) {\n      b = num;\n    } else {\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = this.words[i] & num.words[i];\n    }\n\n    this.length = b.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.iand = function iand (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuand(num);\n  };\n\n  // And `num` with `this`\n  BN.prototype.and = function and (num) {\n    if (this.length > num.length) return this.clone().iand(num);\n    return num.clone().iand(this);\n  };\n\n  BN.prototype.uand = function uand (num) {\n    if (this.length > num.length) return this.clone().iuand(num);\n    return num.clone().iuand(this);\n  };\n\n  // Xor `num` with `this` in-place\n  BN.prototype.iuxor = function iuxor (num) {\n    // a.length > b.length\n    var a;\n    var b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    for (var i = 0; i < b.length; i++) {\n      this.words[i] = a.words[i] ^ b.words[i];\n    }\n\n    if (this !== a) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = a.length;\n\n    return this._strip();\n  };\n\n  BN.prototype.ixor = function ixor (num) {\n    assert((this.negative | num.negative) === 0);\n    return this.iuxor(num);\n  };\n\n  // Xor `num` with `this`\n  BN.prototype.xor = function xor (num) {\n    if (this.length > num.length) return this.clone().ixor(num);\n    return num.clone().ixor(this);\n  };\n\n  BN.prototype.uxor = function uxor (num) {\n    if (this.length > num.length) return this.clone().iuxor(num);\n    return num.clone().iuxor(this);\n  };\n\n  // Not ``this`` with ``width`` bitwidth\n  BN.prototype.inotn = function inotn (width) {\n    assert(typeof width === 'number' && width >= 0);\n\n    var bytesNeeded = Math.ceil(width / 26) | 0;\n    var bitsLeft = width % 26;\n\n    // Extend the buffer with leading zeroes\n    this._expand(bytesNeeded);\n\n    if (bitsLeft > 0) {\n      bytesNeeded--;\n    }\n\n    // Handle complete words\n    for (var i = 0; i < bytesNeeded; i++) {\n      this.words[i] = ~this.words[i] & 0x3ffffff;\n    }\n\n    // Handle the residue\n    if (bitsLeft > 0) {\n      this.words[i] = ~this.words[i] & (0x3ffffff >> (26 - bitsLeft));\n    }\n\n    // And remove leading zeroes\n    return this._strip();\n  };\n\n  BN.prototype.notn = function notn (width) {\n    return this.clone().inotn(width);\n  };\n\n  // Set `bit` of `this`\n  BN.prototype.setn = function setn (bit, val) {\n    assert(typeof bit === 'number' && bit >= 0);\n\n    var off = (bit / 26) | 0;\n    var wbit = bit % 26;\n\n    this._expand(off + 1);\n\n    if (val) {\n      this.words[off] = this.words[off] | (1 << wbit);\n    } else {\n      this.words[off] = this.words[off] & ~(1 << wbit);\n    }\n\n    return this._strip();\n  };\n\n  // Add `num` to `this` in-place\n  BN.prototype.iadd = function iadd (num) {\n    var r;\n\n    // negative + positive\n    if (this.negative !== 0 && num.negative === 0) {\n      this.negative = 0;\n      r = this.isub(num);\n      this.negative ^= 1;\n      return this._normSign();\n\n    // positive + negative\n    } else if (this.negative === 0 && num.negative !== 0) {\n      num.negative = 0;\n      r = this.isub(num);\n      num.negative = 1;\n      return r._normSign();\n    }\n\n    // a.length > b.length\n    var a, b;\n    if (this.length > num.length) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) + (b.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      this.words[i] = r & 0x3ffffff;\n      carry = r >>> 26;\n    }\n\n    this.length = a.length;\n    if (carry !== 0) {\n      this.words[this.length] = carry;\n      this.length++;\n    // Copy the rest of the words\n    } else if (a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    return this;\n  };\n\n  // Add `num` to `this`\n  BN.prototype.add = function add (num) {\n    var res;\n    if (num.negative !== 0 && this.negative === 0) {\n      num.negative = 0;\n      res = this.sub(num);\n      num.negative ^= 1;\n      return res;\n    } else if (num.negative === 0 && this.negative !== 0) {\n      this.negative = 0;\n      res = num.sub(this);\n      this.negative = 1;\n      return res;\n    }\n\n    if (this.length > num.length) return this.clone().iadd(num);\n\n    return num.clone().iadd(this);\n  };\n\n  // Subtract `num` from `this` in-place\n  BN.prototype.isub = function isub (num) {\n    // this - (-num) = this + num\n    if (num.negative !== 0) {\n      num.negative = 0;\n      var r = this.iadd(num);\n      num.negative = 1;\n      return r._normSign();\n\n    // -this - num = -(this + num)\n    } else if (this.negative !== 0) {\n      this.negative = 0;\n      this.iadd(num);\n      this.negative = 1;\n      return this._normSign();\n    }\n\n    // At this point both numbers are positive\n    var cmp = this.cmp(num);\n\n    // Optimization - zeroify\n    if (cmp === 0) {\n      this.negative = 0;\n      this.length = 1;\n      this.words[0] = 0;\n      return this;\n    }\n\n    // a > b\n    var a, b;\n    if (cmp > 0) {\n      a = this;\n      b = num;\n    } else {\n      a = num;\n      b = this;\n    }\n\n    var carry = 0;\n    for (var i = 0; i < b.length; i++) {\n      r = (a.words[i] | 0) - (b.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n    for (; carry !== 0 && i < a.length; i++) {\n      r = (a.words[i] | 0) + carry;\n      carry = r >> 26;\n      this.words[i] = r & 0x3ffffff;\n    }\n\n    // Copy rest of the words\n    if (carry === 0 && i < a.length && a !== this) {\n      for (; i < a.length; i++) {\n        this.words[i] = a.words[i];\n      }\n    }\n\n    this.length = Math.max(this.length, i);\n\n    if (a !== this) {\n      this.negative = 1;\n    }\n\n    return this._strip();\n  };\n\n  // Subtract `num` from `this`\n  BN.prototype.sub = function sub (num) {\n    return this.clone().isub(num);\n  };\n\n  function smallMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    var len = (self.length + num.length) | 0;\n    out.length = len;\n    len = (len - 1) | 0;\n\n    // Peel one iteration (compiler can't do it, because of code complexity)\n    var a = self.words[0] | 0;\n    var b = num.words[0] | 0;\n    var r = a * b;\n\n    var lo = r & 0x3ffffff;\n    var carry = (r / 0x4000000) | 0;\n    out.words[0] = lo;\n\n    for (var k = 1; k < len; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = carry >>> 26;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = (k - j) | 0;\n        a = self.words[i] | 0;\n        b = num.words[j] | 0;\n        r = a * b + rword;\n        ncarry += (r / 0x4000000) | 0;\n        rword = r & 0x3ffffff;\n      }\n      out.words[k] = rword | 0;\n      carry = ncarry | 0;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry | 0;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  // TODO(indutny): it may be reasonable to omit it for users who don't need\n  // to work with 256-bit numbers, otherwise it gives 20% improvement for 256-bit\n  // multiplication (like elliptic secp256k1).\n  var comb10MulTo = function comb10MulTo (self, num, out) {\n    var a = self.words;\n    var b = num.words;\n    var o = out.words;\n    var c = 0;\n    var lo;\n    var mid;\n    var hi;\n    var a0 = a[0] | 0;\n    var al0 = a0 & 0x1fff;\n    var ah0 = a0 >>> 13;\n    var a1 = a[1] | 0;\n    var al1 = a1 & 0x1fff;\n    var ah1 = a1 >>> 13;\n    var a2 = a[2] | 0;\n    var al2 = a2 & 0x1fff;\n    var ah2 = a2 >>> 13;\n    var a3 = a[3] | 0;\n    var al3 = a3 & 0x1fff;\n    var ah3 = a3 >>> 13;\n    var a4 = a[4] | 0;\n    var al4 = a4 & 0x1fff;\n    var ah4 = a4 >>> 13;\n    var a5 = a[5] | 0;\n    var al5 = a5 & 0x1fff;\n    var ah5 = a5 >>> 13;\n    var a6 = a[6] | 0;\n    var al6 = a6 & 0x1fff;\n    var ah6 = a6 >>> 13;\n    var a7 = a[7] | 0;\n    var al7 = a7 & 0x1fff;\n    var ah7 = a7 >>> 13;\n    var a8 = a[8] | 0;\n    var al8 = a8 & 0x1fff;\n    var ah8 = a8 >>> 13;\n    var a9 = a[9] | 0;\n    var al9 = a9 & 0x1fff;\n    var ah9 = a9 >>> 13;\n    var b0 = b[0] | 0;\n    var bl0 = b0 & 0x1fff;\n    var bh0 = b0 >>> 13;\n    var b1 = b[1] | 0;\n    var bl1 = b1 & 0x1fff;\n    var bh1 = b1 >>> 13;\n    var b2 = b[2] | 0;\n    var bl2 = b2 & 0x1fff;\n    var bh2 = b2 >>> 13;\n    var b3 = b[3] | 0;\n    var bl3 = b3 & 0x1fff;\n    var bh3 = b3 >>> 13;\n    var b4 = b[4] | 0;\n    var bl4 = b4 & 0x1fff;\n    var bh4 = b4 >>> 13;\n    var b5 = b[5] | 0;\n    var bl5 = b5 & 0x1fff;\n    var bh5 = b5 >>> 13;\n    var b6 = b[6] | 0;\n    var bl6 = b6 & 0x1fff;\n    var bh6 = b6 >>> 13;\n    var b7 = b[7] | 0;\n    var bl7 = b7 & 0x1fff;\n    var bh7 = b7 >>> 13;\n    var b8 = b[8] | 0;\n    var bl8 = b8 & 0x1fff;\n    var bh8 = b8 >>> 13;\n    var b9 = b[9] | 0;\n    var bl9 = b9 & 0x1fff;\n    var bh9 = b9 >>> 13;\n\n    out.negative = self.negative ^ num.negative;\n    out.length = 19;\n    /* k = 0 */\n    lo = Math.imul(al0, bl0);\n    mid = Math.imul(al0, bh0);\n    mid = (mid + Math.imul(ah0, bl0)) | 0;\n    hi = Math.imul(ah0, bh0);\n    var w0 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w0 >>> 26)) | 0;\n    w0 &= 0x3ffffff;\n    /* k = 1 */\n    lo = Math.imul(al1, bl0);\n    mid = Math.imul(al1, bh0);\n    mid = (mid + Math.imul(ah1, bl0)) | 0;\n    hi = Math.imul(ah1, bh0);\n    lo = (lo + Math.imul(al0, bl1)) | 0;\n    mid = (mid + Math.imul(al0, bh1)) | 0;\n    mid = (mid + Math.imul(ah0, bl1)) | 0;\n    hi = (hi + Math.imul(ah0, bh1)) | 0;\n    var w1 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w1 >>> 26)) | 0;\n    w1 &= 0x3ffffff;\n    /* k = 2 */\n    lo = Math.imul(al2, bl0);\n    mid = Math.imul(al2, bh0);\n    mid = (mid + Math.imul(ah2, bl0)) | 0;\n    hi = Math.imul(ah2, bh0);\n    lo = (lo + Math.imul(al1, bl1)) | 0;\n    mid = (mid + Math.imul(al1, bh1)) | 0;\n    mid = (mid + Math.imul(ah1, bl1)) | 0;\n    hi = (hi + Math.imul(ah1, bh1)) | 0;\n    lo = (lo + Math.imul(al0, bl2)) | 0;\n    mid = (mid + Math.imul(al0, bh2)) | 0;\n    mid = (mid + Math.imul(ah0, bl2)) | 0;\n    hi = (hi + Math.imul(ah0, bh2)) | 0;\n    var w2 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w2 >>> 26)) | 0;\n    w2 &= 0x3ffffff;\n    /* k = 3 */\n    lo = Math.imul(al3, bl0);\n    mid = Math.imul(al3, bh0);\n    mid = (mid + Math.imul(ah3, bl0)) | 0;\n    hi = Math.imul(ah3, bh0);\n    lo = (lo + Math.imul(al2, bl1)) | 0;\n    mid = (mid + Math.imul(al2, bh1)) | 0;\n    mid = (mid + Math.imul(ah2, bl1)) | 0;\n    hi = (hi + Math.imul(ah2, bh1)) | 0;\n    lo = (lo + Math.imul(al1, bl2)) | 0;\n    mid = (mid + Math.imul(al1, bh2)) | 0;\n    mid = (mid + Math.imul(ah1, bl2)) | 0;\n    hi = (hi + Math.imul(ah1, bh2)) | 0;\n    lo = (lo + Math.imul(al0, bl3)) | 0;\n    mid = (mid + Math.imul(al0, bh3)) | 0;\n    mid = (mid + Math.imul(ah0, bl3)) | 0;\n    hi = (hi + Math.imul(ah0, bh3)) | 0;\n    var w3 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w3 >>> 26)) | 0;\n    w3 &= 0x3ffffff;\n    /* k = 4 */\n    lo = Math.imul(al4, bl0);\n    mid = Math.imul(al4, bh0);\n    mid = (mid + Math.imul(ah4, bl0)) | 0;\n    hi = Math.imul(ah4, bh0);\n    lo = (lo + Math.imul(al3, bl1)) | 0;\n    mid = (mid + Math.imul(al3, bh1)) | 0;\n    mid = (mid + Math.imul(ah3, bl1)) | 0;\n    hi = (hi + Math.imul(ah3, bh1)) | 0;\n    lo = (lo + Math.imul(al2, bl2)) | 0;\n    mid = (mid + Math.imul(al2, bh2)) | 0;\n    mid = (mid + Math.imul(ah2, bl2)) | 0;\n    hi = (hi + Math.imul(ah2, bh2)) | 0;\n    lo = (lo + Math.imul(al1, bl3)) | 0;\n    mid = (mid + Math.imul(al1, bh3)) | 0;\n    mid = (mid + Math.imul(ah1, bl3)) | 0;\n    hi = (hi + Math.imul(ah1, bh3)) | 0;\n    lo = (lo + Math.imul(al0, bl4)) | 0;\n    mid = (mid + Math.imul(al0, bh4)) | 0;\n    mid = (mid + Math.imul(ah0, bl4)) | 0;\n    hi = (hi + Math.imul(ah0, bh4)) | 0;\n    var w4 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w4 >>> 26)) | 0;\n    w4 &= 0x3ffffff;\n    /* k = 5 */\n    lo = Math.imul(al5, bl0);\n    mid = Math.imul(al5, bh0);\n    mid = (mid + Math.imul(ah5, bl0)) | 0;\n    hi = Math.imul(ah5, bh0);\n    lo = (lo + Math.imul(al4, bl1)) | 0;\n    mid = (mid + Math.imul(al4, bh1)) | 0;\n    mid = (mid + Math.imul(ah4, bl1)) | 0;\n    hi = (hi + Math.imul(ah4, bh1)) | 0;\n    lo = (lo + Math.imul(al3, bl2)) | 0;\n    mid = (mid + Math.imul(al3, bh2)) | 0;\n    mid = (mid + Math.imul(ah3, bl2)) | 0;\n    hi = (hi + Math.imul(ah3, bh2)) | 0;\n    lo = (lo + Math.imul(al2, bl3)) | 0;\n    mid = (mid + Math.imul(al2, bh3)) | 0;\n    mid = (mid + Math.imul(ah2, bl3)) | 0;\n    hi = (hi + Math.imul(ah2, bh3)) | 0;\n    lo = (lo + Math.imul(al1, bl4)) | 0;\n    mid = (mid + Math.imul(al1, bh4)) | 0;\n    mid = (mid + Math.imul(ah1, bl4)) | 0;\n    hi = (hi + Math.imul(ah1, bh4)) | 0;\n    lo = (lo + Math.imul(al0, bl5)) | 0;\n    mid = (mid + Math.imul(al0, bh5)) | 0;\n    mid = (mid + Math.imul(ah0, bl5)) | 0;\n    hi = (hi + Math.imul(ah0, bh5)) | 0;\n    var w5 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w5 >>> 26)) | 0;\n    w5 &= 0x3ffffff;\n    /* k = 6 */\n    lo = Math.imul(al6, bl0);\n    mid = Math.imul(al6, bh0);\n    mid = (mid + Math.imul(ah6, bl0)) | 0;\n    hi = Math.imul(ah6, bh0);\n    lo = (lo + Math.imul(al5, bl1)) | 0;\n    mid = (mid + Math.imul(al5, bh1)) | 0;\n    mid = (mid + Math.imul(ah5, bl1)) | 0;\n    hi = (hi + Math.imul(ah5, bh1)) | 0;\n    lo = (lo + Math.imul(al4, bl2)) | 0;\n    mid = (mid + Math.imul(al4, bh2)) | 0;\n    mid = (mid + Math.imul(ah4, bl2)) | 0;\n    hi = (hi + Math.imul(ah4, bh2)) | 0;\n    lo = (lo + Math.imul(al3, bl3)) | 0;\n    mid = (mid + Math.imul(al3, bh3)) | 0;\n    mid = (mid + Math.imul(ah3, bl3)) | 0;\n    hi = (hi + Math.imul(ah3, bh3)) | 0;\n    lo = (lo + Math.imul(al2, bl4)) | 0;\n    mid = (mid + Math.imul(al2, bh4)) | 0;\n    mid = (mid + Math.imul(ah2, bl4)) | 0;\n    hi = (hi + Math.imul(ah2, bh4)) | 0;\n    lo = (lo + Math.imul(al1, bl5)) | 0;\n    mid = (mid + Math.imul(al1, bh5)) | 0;\n    mid = (mid + Math.imul(ah1, bl5)) | 0;\n    hi = (hi + Math.imul(ah1, bh5)) | 0;\n    lo = (lo + Math.imul(al0, bl6)) | 0;\n    mid = (mid + Math.imul(al0, bh6)) | 0;\n    mid = (mid + Math.imul(ah0, bl6)) | 0;\n    hi = (hi + Math.imul(ah0, bh6)) | 0;\n    var w6 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w6 >>> 26)) | 0;\n    w6 &= 0x3ffffff;\n    /* k = 7 */\n    lo = Math.imul(al7, bl0);\n    mid = Math.imul(al7, bh0);\n    mid = (mid + Math.imul(ah7, bl0)) | 0;\n    hi = Math.imul(ah7, bh0);\n    lo = (lo + Math.imul(al6, bl1)) | 0;\n    mid = (mid + Math.imul(al6, bh1)) | 0;\n    mid = (mid + Math.imul(ah6, bl1)) | 0;\n    hi = (hi + Math.imul(ah6, bh1)) | 0;\n    lo = (lo + Math.imul(al5, bl2)) | 0;\n    mid = (mid + Math.imul(al5, bh2)) | 0;\n    mid = (mid + Math.imul(ah5, bl2)) | 0;\n    hi = (hi + Math.imul(ah5, bh2)) | 0;\n    lo = (lo + Math.imul(al4, bl3)) | 0;\n    mid = (mid + Math.imul(al4, bh3)) | 0;\n    mid = (mid + Math.imul(ah4, bl3)) | 0;\n    hi = (hi + Math.imul(ah4, bh3)) | 0;\n    lo = (lo + Math.imul(al3, bl4)) | 0;\n    mid = (mid + Math.imul(al3, bh4)) | 0;\n    mid = (mid + Math.imul(ah3, bl4)) | 0;\n    hi = (hi + Math.imul(ah3, bh4)) | 0;\n    lo = (lo + Math.imul(al2, bl5)) | 0;\n    mid = (mid + Math.imul(al2, bh5)) | 0;\n    mid = (mid + Math.imul(ah2, bl5)) | 0;\n    hi = (hi + Math.imul(ah2, bh5)) | 0;\n    lo = (lo + Math.imul(al1, bl6)) | 0;\n    mid = (mid + Math.imul(al1, bh6)) | 0;\n    mid = (mid + Math.imul(ah1, bl6)) | 0;\n    hi = (hi + Math.imul(ah1, bh6)) | 0;\n    lo = (lo + Math.imul(al0, bl7)) | 0;\n    mid = (mid + Math.imul(al0, bh7)) | 0;\n    mid = (mid + Math.imul(ah0, bl7)) | 0;\n    hi = (hi + Math.imul(ah0, bh7)) | 0;\n    var w7 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w7 >>> 26)) | 0;\n    w7 &= 0x3ffffff;\n    /* k = 8 */\n    lo = Math.imul(al8, bl0);\n    mid = Math.imul(al8, bh0);\n    mid = (mid + Math.imul(ah8, bl0)) | 0;\n    hi = Math.imul(ah8, bh0);\n    lo = (lo + Math.imul(al7, bl1)) | 0;\n    mid = (mid + Math.imul(al7, bh1)) | 0;\n    mid = (mid + Math.imul(ah7, bl1)) | 0;\n    hi = (hi + Math.imul(ah7, bh1)) | 0;\n    lo = (lo + Math.imul(al6, bl2)) | 0;\n    mid = (mid + Math.imul(al6, bh2)) | 0;\n    mid = (mid + Math.imul(ah6, bl2)) | 0;\n    hi = (hi + Math.imul(ah6, bh2)) | 0;\n    lo = (lo + Math.imul(al5, bl3)) | 0;\n    mid = (mid + Math.imul(al5, bh3)) | 0;\n    mid = (mid + Math.imul(ah5, bl3)) | 0;\n    hi = (hi + Math.imul(ah5, bh3)) | 0;\n    lo = (lo + Math.imul(al4, bl4)) | 0;\n    mid = (mid + Math.imul(al4, bh4)) | 0;\n    mid = (mid + Math.imul(ah4, bl4)) | 0;\n    hi = (hi + Math.imul(ah4, bh4)) | 0;\n    lo = (lo + Math.imul(al3, bl5)) | 0;\n    mid = (mid + Math.imul(al3, bh5)) | 0;\n    mid = (mid + Math.imul(ah3, bl5)) | 0;\n    hi = (hi + Math.imul(ah3, bh5)) | 0;\n    lo = (lo + Math.imul(al2, bl6)) | 0;\n    mid = (mid + Math.imul(al2, bh6)) | 0;\n    mid = (mid + Math.imul(ah2, bl6)) | 0;\n    hi = (hi + Math.imul(ah2, bh6)) | 0;\n    lo = (lo + Math.imul(al1, bl7)) | 0;\n    mid = (mid + Math.imul(al1, bh7)) | 0;\n    mid = (mid + Math.imul(ah1, bl7)) | 0;\n    hi = (hi + Math.imul(ah1, bh7)) | 0;\n    lo = (lo + Math.imul(al0, bl8)) | 0;\n    mid = (mid + Math.imul(al0, bh8)) | 0;\n    mid = (mid + Math.imul(ah0, bl8)) | 0;\n    hi = (hi + Math.imul(ah0, bh8)) | 0;\n    var w8 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w8 >>> 26)) | 0;\n    w8 &= 0x3ffffff;\n    /* k = 9 */\n    lo = Math.imul(al9, bl0);\n    mid = Math.imul(al9, bh0);\n    mid = (mid + Math.imul(ah9, bl0)) | 0;\n    hi = Math.imul(ah9, bh0);\n    lo = (lo + Math.imul(al8, bl1)) | 0;\n    mid = (mid + Math.imul(al8, bh1)) | 0;\n    mid = (mid + Math.imul(ah8, bl1)) | 0;\n    hi = (hi + Math.imul(ah8, bh1)) | 0;\n    lo = (lo + Math.imul(al7, bl2)) | 0;\n    mid = (mid + Math.imul(al7, bh2)) | 0;\n    mid = (mid + Math.imul(ah7, bl2)) | 0;\n    hi = (hi + Math.imul(ah7, bh2)) | 0;\n    lo = (lo + Math.imul(al6, bl3)) | 0;\n    mid = (mid + Math.imul(al6, bh3)) | 0;\n    mid = (mid + Math.imul(ah6, bl3)) | 0;\n    hi = (hi + Math.imul(ah6, bh3)) | 0;\n    lo = (lo + Math.imul(al5, bl4)) | 0;\n    mid = (mid + Math.imul(al5, bh4)) | 0;\n    mid = (mid + Math.imul(ah5, bl4)) | 0;\n    hi = (hi + Math.imul(ah5, bh4)) | 0;\n    lo = (lo + Math.imul(al4, bl5)) | 0;\n    mid = (mid + Math.imul(al4, bh5)) | 0;\n    mid = (mid + Math.imul(ah4, bl5)) | 0;\n    hi = (hi + Math.imul(ah4, bh5)) | 0;\n    lo = (lo + Math.imul(al3, bl6)) | 0;\n    mid = (mid + Math.imul(al3, bh6)) | 0;\n    mid = (mid + Math.imul(ah3, bl6)) | 0;\n    hi = (hi + Math.imul(ah3, bh6)) | 0;\n    lo = (lo + Math.imul(al2, bl7)) | 0;\n    mid = (mid + Math.imul(al2, bh7)) | 0;\n    mid = (mid + Math.imul(ah2, bl7)) | 0;\n    hi = (hi + Math.imul(ah2, bh7)) | 0;\n    lo = (lo + Math.imul(al1, bl8)) | 0;\n    mid = (mid + Math.imul(al1, bh8)) | 0;\n    mid = (mid + Math.imul(ah1, bl8)) | 0;\n    hi = (hi + Math.imul(ah1, bh8)) | 0;\n    lo = (lo + Math.imul(al0, bl9)) | 0;\n    mid = (mid + Math.imul(al0, bh9)) | 0;\n    mid = (mid + Math.imul(ah0, bl9)) | 0;\n    hi = (hi + Math.imul(ah0, bh9)) | 0;\n    var w9 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w9 >>> 26)) | 0;\n    w9 &= 0x3ffffff;\n    /* k = 10 */\n    lo = Math.imul(al9, bl1);\n    mid = Math.imul(al9, bh1);\n    mid = (mid + Math.imul(ah9, bl1)) | 0;\n    hi = Math.imul(ah9, bh1);\n    lo = (lo + Math.imul(al8, bl2)) | 0;\n    mid = (mid + Math.imul(al8, bh2)) | 0;\n    mid = (mid + Math.imul(ah8, bl2)) | 0;\n    hi = (hi + Math.imul(ah8, bh2)) | 0;\n    lo = (lo + Math.imul(al7, bl3)) | 0;\n    mid = (mid + Math.imul(al7, bh3)) | 0;\n    mid = (mid + Math.imul(ah7, bl3)) | 0;\n    hi = (hi + Math.imul(ah7, bh3)) | 0;\n    lo = (lo + Math.imul(al6, bl4)) | 0;\n    mid = (mid + Math.imul(al6, bh4)) | 0;\n    mid = (mid + Math.imul(ah6, bl4)) | 0;\n    hi = (hi + Math.imul(ah6, bh4)) | 0;\n    lo = (lo + Math.imul(al5, bl5)) | 0;\n    mid = (mid + Math.imul(al5, bh5)) | 0;\n    mid = (mid + Math.imul(ah5, bl5)) | 0;\n    hi = (hi + Math.imul(ah5, bh5)) | 0;\n    lo = (lo + Math.imul(al4, bl6)) | 0;\n    mid = (mid + Math.imul(al4, bh6)) | 0;\n    mid = (mid + Math.imul(ah4, bl6)) | 0;\n    hi = (hi + Math.imul(ah4, bh6)) | 0;\n    lo = (lo + Math.imul(al3, bl7)) | 0;\n    mid = (mid + Math.imul(al3, bh7)) | 0;\n    mid = (mid + Math.imul(ah3, bl7)) | 0;\n    hi = (hi + Math.imul(ah3, bh7)) | 0;\n    lo = (lo + Math.imul(al2, bl8)) | 0;\n    mid = (mid + Math.imul(al2, bh8)) | 0;\n    mid = (mid + Math.imul(ah2, bl8)) | 0;\n    hi = (hi + Math.imul(ah2, bh8)) | 0;\n    lo = (lo + Math.imul(al1, bl9)) | 0;\n    mid = (mid + Math.imul(al1, bh9)) | 0;\n    mid = (mid + Math.imul(ah1, bl9)) | 0;\n    hi = (hi + Math.imul(ah1, bh9)) | 0;\n    var w10 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w10 >>> 26)) | 0;\n    w10 &= 0x3ffffff;\n    /* k = 11 */\n    lo = Math.imul(al9, bl2);\n    mid = Math.imul(al9, bh2);\n    mid = (mid + Math.imul(ah9, bl2)) | 0;\n    hi = Math.imul(ah9, bh2);\n    lo = (lo + Math.imul(al8, bl3)) | 0;\n    mid = (mid + Math.imul(al8, bh3)) | 0;\n    mid = (mid + Math.imul(ah8, bl3)) | 0;\n    hi = (hi + Math.imul(ah8, bh3)) | 0;\n    lo = (lo + Math.imul(al7, bl4)) | 0;\n    mid = (mid + Math.imul(al7, bh4)) | 0;\n    mid = (mid + Math.imul(ah7, bl4)) | 0;\n    hi = (hi + Math.imul(ah7, bh4)) | 0;\n    lo = (lo + Math.imul(al6, bl5)) | 0;\n    mid = (mid + Math.imul(al6, bh5)) | 0;\n    mid = (mid + Math.imul(ah6, bl5)) | 0;\n    hi = (hi + Math.imul(ah6, bh5)) | 0;\n    lo = (lo + Math.imul(al5, bl6)) | 0;\n    mid = (mid + Math.imul(al5, bh6)) | 0;\n    mid = (mid + Math.imul(ah5, bl6)) | 0;\n    hi = (hi + Math.imul(ah5, bh6)) | 0;\n    lo = (lo + Math.imul(al4, bl7)) | 0;\n    mid = (mid + Math.imul(al4, bh7)) | 0;\n    mid = (mid + Math.imul(ah4, bl7)) | 0;\n    hi = (hi + Math.imul(ah4, bh7)) | 0;\n    lo = (lo + Math.imul(al3, bl8)) | 0;\n    mid = (mid + Math.imul(al3, bh8)) | 0;\n    mid = (mid + Math.imul(ah3, bl8)) | 0;\n    hi = (hi + Math.imul(ah3, bh8)) | 0;\n    lo = (lo + Math.imul(al2, bl9)) | 0;\n    mid = (mid + Math.imul(al2, bh9)) | 0;\n    mid = (mid + Math.imul(ah2, bl9)) | 0;\n    hi = (hi + Math.imul(ah2, bh9)) | 0;\n    var w11 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w11 >>> 26)) | 0;\n    w11 &= 0x3ffffff;\n    /* k = 12 */\n    lo = Math.imul(al9, bl3);\n    mid = Math.imul(al9, bh3);\n    mid = (mid + Math.imul(ah9, bl3)) | 0;\n    hi = Math.imul(ah9, bh3);\n    lo = (lo + Math.imul(al8, bl4)) | 0;\n    mid = (mid + Math.imul(al8, bh4)) | 0;\n    mid = (mid + Math.imul(ah8, bl4)) | 0;\n    hi = (hi + Math.imul(ah8, bh4)) | 0;\n    lo = (lo + Math.imul(al7, bl5)) | 0;\n    mid = (mid + Math.imul(al7, bh5)) | 0;\n    mid = (mid + Math.imul(ah7, bl5)) | 0;\n    hi = (hi + Math.imul(ah7, bh5)) | 0;\n    lo = (lo + Math.imul(al6, bl6)) | 0;\n    mid = (mid + Math.imul(al6, bh6)) | 0;\n    mid = (mid + Math.imul(ah6, bl6)) | 0;\n    hi = (hi + Math.imul(ah6, bh6)) | 0;\n    lo = (lo + Math.imul(al5, bl7)) | 0;\n    mid = (mid + Math.imul(al5, bh7)) | 0;\n    mid = (mid + Math.imul(ah5, bl7)) | 0;\n    hi = (hi + Math.imul(ah5, bh7)) | 0;\n    lo = (lo + Math.imul(al4, bl8)) | 0;\n    mid = (mid + Math.imul(al4, bh8)) | 0;\n    mid = (mid + Math.imul(ah4, bl8)) | 0;\n    hi = (hi + Math.imul(ah4, bh8)) | 0;\n    lo = (lo + Math.imul(al3, bl9)) | 0;\n    mid = (mid + Math.imul(al3, bh9)) | 0;\n    mid = (mid + Math.imul(ah3, bl9)) | 0;\n    hi = (hi + Math.imul(ah3, bh9)) | 0;\n    var w12 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w12 >>> 26)) | 0;\n    w12 &= 0x3ffffff;\n    /* k = 13 */\n    lo = Math.imul(al9, bl4);\n    mid = Math.imul(al9, bh4);\n    mid = (mid + Math.imul(ah9, bl4)) | 0;\n    hi = Math.imul(ah9, bh4);\n    lo = (lo + Math.imul(al8, bl5)) | 0;\n    mid = (mid + Math.imul(al8, bh5)) | 0;\n    mid = (mid + Math.imul(ah8, bl5)) | 0;\n    hi = (hi + Math.imul(ah8, bh5)) | 0;\n    lo = (lo + Math.imul(al7, bl6)) | 0;\n    mid = (mid + Math.imul(al7, bh6)) | 0;\n    mid = (mid + Math.imul(ah7, bl6)) | 0;\n    hi = (hi + Math.imul(ah7, bh6)) | 0;\n    lo = (lo + Math.imul(al6, bl7)) | 0;\n    mid = (mid + Math.imul(al6, bh7)) | 0;\n    mid = (mid + Math.imul(ah6, bl7)) | 0;\n    hi = (hi + Math.imul(ah6, bh7)) | 0;\n    lo = (lo + Math.imul(al5, bl8)) | 0;\n    mid = (mid + Math.imul(al5, bh8)) | 0;\n    mid = (mid + Math.imul(ah5, bl8)) | 0;\n    hi = (hi + Math.imul(ah5, bh8)) | 0;\n    lo = (lo + Math.imul(al4, bl9)) | 0;\n    mid = (mid + Math.imul(al4, bh9)) | 0;\n    mid = (mid + Math.imul(ah4, bl9)) | 0;\n    hi = (hi + Math.imul(ah4, bh9)) | 0;\n    var w13 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w13 >>> 26)) | 0;\n    w13 &= 0x3ffffff;\n    /* k = 14 */\n    lo = Math.imul(al9, bl5);\n    mid = Math.imul(al9, bh5);\n    mid = (mid + Math.imul(ah9, bl5)) | 0;\n    hi = Math.imul(ah9, bh5);\n    lo = (lo + Math.imul(al8, bl6)) | 0;\n    mid = (mid + Math.imul(al8, bh6)) | 0;\n    mid = (mid + Math.imul(ah8, bl6)) | 0;\n    hi = (hi + Math.imul(ah8, bh6)) | 0;\n    lo = (lo + Math.imul(al7, bl7)) | 0;\n    mid = (mid + Math.imul(al7, bh7)) | 0;\n    mid = (mid + Math.imul(ah7, bl7)) | 0;\n    hi = (hi + Math.imul(ah7, bh7)) | 0;\n    lo = (lo + Math.imul(al6, bl8)) | 0;\n    mid = (mid + Math.imul(al6, bh8)) | 0;\n    mid = (mid + Math.imul(ah6, bl8)) | 0;\n    hi = (hi + Math.imul(ah6, bh8)) | 0;\n    lo = (lo + Math.imul(al5, bl9)) | 0;\n    mid = (mid + Math.imul(al5, bh9)) | 0;\n    mid = (mid + Math.imul(ah5, bl9)) | 0;\n    hi = (hi + Math.imul(ah5, bh9)) | 0;\n    var w14 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w14 >>> 26)) | 0;\n    w14 &= 0x3ffffff;\n    /* k = 15 */\n    lo = Math.imul(al9, bl6);\n    mid = Math.imul(al9, bh6);\n    mid = (mid + Math.imul(ah9, bl6)) | 0;\n    hi = Math.imul(ah9, bh6);\n    lo = (lo + Math.imul(al8, bl7)) | 0;\n    mid = (mid + Math.imul(al8, bh7)) | 0;\n    mid = (mid + Math.imul(ah8, bl7)) | 0;\n    hi = (hi + Math.imul(ah8, bh7)) | 0;\n    lo = (lo + Math.imul(al7, bl8)) | 0;\n    mid = (mid + Math.imul(al7, bh8)) | 0;\n    mid = (mid + Math.imul(ah7, bl8)) | 0;\n    hi = (hi + Math.imul(ah7, bh8)) | 0;\n    lo = (lo + Math.imul(al6, bl9)) | 0;\n    mid = (mid + Math.imul(al6, bh9)) | 0;\n    mid = (mid + Math.imul(ah6, bl9)) | 0;\n    hi = (hi + Math.imul(ah6, bh9)) | 0;\n    var w15 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w15 >>> 26)) | 0;\n    w15 &= 0x3ffffff;\n    /* k = 16 */\n    lo = Math.imul(al9, bl7);\n    mid = Math.imul(al9, bh7);\n    mid = (mid + Math.imul(ah9, bl7)) | 0;\n    hi = Math.imul(ah9, bh7);\n    lo = (lo + Math.imul(al8, bl8)) | 0;\n    mid = (mid + Math.imul(al8, bh8)) | 0;\n    mid = (mid + Math.imul(ah8, bl8)) | 0;\n    hi = (hi + Math.imul(ah8, bh8)) | 0;\n    lo = (lo + Math.imul(al7, bl9)) | 0;\n    mid = (mid + Math.imul(al7, bh9)) | 0;\n    mid = (mid + Math.imul(ah7, bl9)) | 0;\n    hi = (hi + Math.imul(ah7, bh9)) | 0;\n    var w16 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w16 >>> 26)) | 0;\n    w16 &= 0x3ffffff;\n    /* k = 17 */\n    lo = Math.imul(al9, bl8);\n    mid = Math.imul(al9, bh8);\n    mid = (mid + Math.imul(ah9, bl8)) | 0;\n    hi = Math.imul(ah9, bh8);\n    lo = (lo + Math.imul(al8, bl9)) | 0;\n    mid = (mid + Math.imul(al8, bh9)) | 0;\n    mid = (mid + Math.imul(ah8, bl9)) | 0;\n    hi = (hi + Math.imul(ah8, bh9)) | 0;\n    var w17 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w17 >>> 26)) | 0;\n    w17 &= 0x3ffffff;\n    /* k = 18 */\n    lo = Math.imul(al9, bl9);\n    mid = Math.imul(al9, bh9);\n    mid = (mid + Math.imul(ah9, bl9)) | 0;\n    hi = Math.imul(ah9, bh9);\n    var w18 = (((c + lo) | 0) + ((mid & 0x1fff) << 13)) | 0;\n    c = (((hi + (mid >>> 13)) | 0) + (w18 >>> 26)) | 0;\n    w18 &= 0x3ffffff;\n    o[0] = w0;\n    o[1] = w1;\n    o[2] = w2;\n    o[3] = w3;\n    o[4] = w4;\n    o[5] = w5;\n    o[6] = w6;\n    o[7] = w7;\n    o[8] = w8;\n    o[9] = w9;\n    o[10] = w10;\n    o[11] = w11;\n    o[12] = w12;\n    o[13] = w13;\n    o[14] = w14;\n    o[15] = w15;\n    o[16] = w16;\n    o[17] = w17;\n    o[18] = w18;\n    if (c !== 0) {\n      o[19] = c;\n      out.length++;\n    }\n    return out;\n  };\n\n  // Polyfill comb\n  if (!Math.imul) {\n    comb10MulTo = smallMulTo;\n  }\n\n  function bigMulTo (self, num, out) {\n    out.negative = num.negative ^ self.negative;\n    out.length = self.length + num.length;\n\n    var carry = 0;\n    var hncarry = 0;\n    for (var k = 0; k < out.length - 1; k++) {\n      // Sum all words with the same `i + j = k` and accumulate `ncarry`,\n      // note that ncarry could be >= 0x3ffffff\n      var ncarry = hncarry;\n      hncarry = 0;\n      var rword = carry & 0x3ffffff;\n      var maxJ = Math.min(k, num.length - 1);\n      for (var j = Math.max(0, k - self.length + 1); j <= maxJ; j++) {\n        var i = k - j;\n        var a = self.words[i] | 0;\n        var b = num.words[j] | 0;\n        var r = a * b;\n\n        var lo = r & 0x3ffffff;\n        ncarry = (ncarry + ((r / 0x4000000) | 0)) | 0;\n        lo = (lo + rword) | 0;\n        rword = lo & 0x3ffffff;\n        ncarry = (ncarry + (lo >>> 26)) | 0;\n\n        hncarry += ncarry >>> 26;\n        ncarry &= 0x3ffffff;\n      }\n      out.words[k] = rword;\n      carry = ncarry;\n      ncarry = hncarry;\n    }\n    if (carry !== 0) {\n      out.words[k] = carry;\n    } else {\n      out.length--;\n    }\n\n    return out._strip();\n  }\n\n  function jumboMulTo (self, num, out) {\n    // Temporary disable, see https://github.com/indutny/bn.js/issues/211\n    // var fftm = new FFTM();\n    // return fftm.mulp(self, num, out);\n    return bigMulTo(self, num, out);\n  }\n\n  BN.prototype.mulTo = function mulTo (num, out) {\n    var res;\n    var len = this.length + num.length;\n    if (this.length === 10 && num.length === 10) {\n      res = comb10MulTo(this, num, out);\n    } else if (len < 63) {\n      res = smallMulTo(this, num, out);\n    } else if (len < 1024) {\n      res = bigMulTo(this, num, out);\n    } else {\n      res = jumboMulTo(this, num, out);\n    }\n\n    return res;\n  };\n\n  // Cooley-Tukey algorithm for FFT\n  // slightly revisited to rely on looping instead of recursion\n\n  function FFTM (x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  FFTM.prototype.makeRBT = function makeRBT (N) {\n    var t = new Array(N);\n    var l = BN.prototype._countBits(N) - 1;\n    for (var i = 0; i < N; i++) {\n      t[i] = this.revBin(i, l, N);\n    }\n\n    return t;\n  };\n\n  // Returns binary-reversed representation of `x`\n  FFTM.prototype.revBin = function revBin (x, l, N) {\n    if (x === 0 || x === N - 1) return x;\n\n    var rb = 0;\n    for (var i = 0; i < l; i++) {\n      rb |= (x & 1) << (l - i - 1);\n      x >>= 1;\n    }\n\n    return rb;\n  };\n\n  // Performs \"tweedling\" phase, therefore 'emulating'\n  // behaviour of the recursive algorithm\n  FFTM.prototype.permute = function permute (rbt, rws, iws, rtws, itws, N) {\n    for (var i = 0; i < N; i++) {\n      rtws[i] = rws[rbt[i]];\n      itws[i] = iws[rbt[i]];\n    }\n  };\n\n  FFTM.prototype.transform = function transform (rws, iws, rtws, itws, N, rbt) {\n    this.permute(rbt, rws, iws, rtws, itws, N);\n\n    for (var s = 1; s < N; s <<= 1) {\n      var l = s << 1;\n\n      var rtwdf = Math.cos(2 * Math.PI / l);\n      var itwdf = Math.sin(2 * Math.PI / l);\n\n      for (var p = 0; p < N; p += l) {\n        var rtwdf_ = rtwdf;\n        var itwdf_ = itwdf;\n\n        for (var j = 0; j < s; j++) {\n          var re = rtws[p + j];\n          var ie = itws[p + j];\n\n          var ro = rtws[p + j + s];\n          var io = itws[p + j + s];\n\n          var rx = rtwdf_ * ro - itwdf_ * io;\n\n          io = rtwdf_ * io + itwdf_ * ro;\n          ro = rx;\n\n          rtws[p + j] = re + ro;\n          itws[p + j] = ie + io;\n\n          rtws[p + j + s] = re - ro;\n          itws[p + j + s] = ie - io;\n\n          /* jshint maxdepth : false */\n          if (j !== l) {\n            rx = rtwdf * rtwdf_ - itwdf * itwdf_;\n\n            itwdf_ = rtwdf * itwdf_ + itwdf * rtwdf_;\n            rtwdf_ = rx;\n          }\n        }\n      }\n    }\n  };\n\n  FFTM.prototype.guessLen13b = function guessLen13b (n, m) {\n    var N = Math.max(m, n) | 1;\n    var odd = N & 1;\n    var i = 0;\n    for (N = N / 2 | 0; N; N = N >>> 1) {\n      i++;\n    }\n\n    return 1 << i + 1 + odd;\n  };\n\n  FFTM.prototype.conjugate = function conjugate (rws, iws, N) {\n    if (N <= 1) return;\n\n    for (var i = 0; i < N / 2; i++) {\n      var t = rws[i];\n\n      rws[i] = rws[N - i - 1];\n      rws[N - i - 1] = t;\n\n      t = iws[i];\n\n      iws[i] = -iws[N - i - 1];\n      iws[N - i - 1] = -t;\n    }\n  };\n\n  FFTM.prototype.normalize13b = function normalize13b (ws, N) {\n    var carry = 0;\n    for (var i = 0; i < N / 2; i++) {\n      var w = Math.round(ws[2 * i + 1] / N) * 0x2000 +\n        Math.round(ws[2 * i] / N) +\n        carry;\n\n      ws[i] = w & 0x3ffffff;\n\n      if (w < 0x4000000) {\n        carry = 0;\n      } else {\n        carry = w / 0x4000000 | 0;\n      }\n    }\n\n    return ws;\n  };\n\n  FFTM.prototype.convert13b = function convert13b (ws, len, rws, N) {\n    var carry = 0;\n    for (var i = 0; i < len; i++) {\n      carry = carry + (ws[i] | 0);\n\n      rws[2 * i] = carry & 0x1fff; carry = carry >>> 13;\n      rws[2 * i + 1] = carry & 0x1fff; carry = carry >>> 13;\n    }\n\n    // Pad with zeroes\n    for (i = 2 * len; i < N; ++i) {\n      rws[i] = 0;\n    }\n\n    assert(carry === 0);\n    assert((carry & ~0x1fff) === 0);\n  };\n\n  FFTM.prototype.stub = function stub (N) {\n    var ph = new Array(N);\n    for (var i = 0; i < N; i++) {\n      ph[i] = 0;\n    }\n\n    return ph;\n  };\n\n  FFTM.prototype.mulp = function mulp (x, y, out) {\n    var N = 2 * this.guessLen13b(x.length, y.length);\n\n    var rbt = this.makeRBT(N);\n\n    var _ = this.stub(N);\n\n    var rws = new Array(N);\n    var rwst = new Array(N);\n    var iwst = new Array(N);\n\n    var nrws = new Array(N);\n    var nrwst = new Array(N);\n    var niwst = new Array(N);\n\n    var rmws = out.words;\n    rmws.length = N;\n\n    this.convert13b(x.words, x.length, rws, N);\n    this.convert13b(y.words, y.length, nrws, N);\n\n    this.transform(rws, _, rwst, iwst, N, rbt);\n    this.transform(nrws, _, nrwst, niwst, N, rbt);\n\n    for (var i = 0; i < N; i++) {\n      var rx = rwst[i] * nrwst[i] - iwst[i] * niwst[i];\n      iwst[i] = rwst[i] * niwst[i] + iwst[i] * nrwst[i];\n      rwst[i] = rx;\n    }\n\n    this.conjugate(rwst, iwst, N);\n    this.transform(rwst, iwst, rmws, _, N, rbt);\n    this.conjugate(rmws, _, N);\n    this.normalize13b(rmws, N);\n\n    out.negative = x.negative ^ y.negative;\n    out.length = x.length + y.length;\n    return out._strip();\n  };\n\n  // Multiply `this` by `num`\n  BN.prototype.mul = function mul (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return this.mulTo(num, out);\n  };\n\n  // Multiply employing FFT\n  BN.prototype.mulf = function mulf (num) {\n    var out = new BN(null);\n    out.words = new Array(this.length + num.length);\n    return jumboMulTo(this, num, out);\n  };\n\n  // In-place Multiplication\n  BN.prototype.imul = function imul (num) {\n    return this.clone().mulTo(num, this);\n  };\n\n  BN.prototype.imuln = function imuln (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n\n    // Carry\n    var carry = 0;\n    for (var i = 0; i < this.length; i++) {\n      var w = (this.words[i] | 0) * num;\n      var lo = (w & 0x3ffffff) + (carry & 0x3ffffff);\n      carry >>= 26;\n      carry += (w / 0x4000000) | 0;\n      // NOTE: lo is 27bit maximum\n      carry += lo >>> 26;\n      this.words[i] = lo & 0x3ffffff;\n    }\n\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.muln = function muln (num) {\n    return this.clone().imuln(num);\n  };\n\n  // `this` * `this`\n  BN.prototype.sqr = function sqr () {\n    return this.mul(this);\n  };\n\n  // `this` * `this` in-place\n  BN.prototype.isqr = function isqr () {\n    return this.imul(this.clone());\n  };\n\n  // Math.pow(`this`, `num`)\n  BN.prototype.pow = function pow (num) {\n    var w = toBitArray(num);\n    if (w.length === 0) return new BN(1);\n\n    // Skip leading zeroes\n    var res = this;\n    for (var i = 0; i < w.length; i++, res = res.sqr()) {\n      if (w[i] !== 0) break;\n    }\n\n    if (++i < w.length) {\n      for (var q = res.sqr(); i < w.length; i++, q = q.sqr()) {\n        if (w[i] === 0) continue;\n\n        res = res.mul(q);\n      }\n    }\n\n    return res;\n  };\n\n  // Shift-left in-place\n  BN.prototype.iushln = function iushln (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n    var carryMask = (0x3ffffff >>> (26 - r)) << (26 - r);\n    var i;\n\n    if (r !== 0) {\n      var carry = 0;\n\n      for (i = 0; i < this.length; i++) {\n        var newCarry = this.words[i] & carryMask;\n        var c = ((this.words[i] | 0) - newCarry) << r;\n        this.words[i] = c | carry;\n        carry = newCarry >>> (26 - r);\n      }\n\n      if (carry) {\n        this.words[i] = carry;\n        this.length++;\n      }\n    }\n\n    if (s !== 0) {\n      for (i = this.length - 1; i >= 0; i--) {\n        this.words[i + s] = this.words[i];\n      }\n\n      for (i = 0; i < s; i++) {\n        this.words[i] = 0;\n      }\n\n      this.length += s;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishln = function ishln (bits) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushln(bits);\n  };\n\n  // Shift-right in-place\n  // NOTE: `hint` is a lowest bit before trailing zeroes\n  // NOTE: if `extended` is present - it will be filled with destroyed bits\n  BN.prototype.iushrn = function iushrn (bits, hint, extended) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var h;\n    if (hint) {\n      h = (hint - (hint % 26)) / 26;\n    } else {\n      h = 0;\n    }\n\n    var r = bits % 26;\n    var s = Math.min((bits - r) / 26, this.length);\n    var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n    var maskedWords = extended;\n\n    h -= s;\n    h = Math.max(0, h);\n\n    // Extended mode, copy masked part\n    if (maskedWords) {\n      for (var i = 0; i < s; i++) {\n        maskedWords.words[i] = this.words[i];\n      }\n      maskedWords.length = s;\n    }\n\n    if (s === 0) {\n      // No-op, we should not move anything at all\n    } else if (this.length > s) {\n      this.length -= s;\n      for (i = 0; i < this.length; i++) {\n        this.words[i] = this.words[i + s];\n      }\n    } else {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    var carry = 0;\n    for (i = this.length - 1; i >= 0 && (carry !== 0 || i >= h); i--) {\n      var word = this.words[i] | 0;\n      this.words[i] = (carry << (26 - r)) | (word >>> r);\n      carry = word & mask;\n    }\n\n    // Push carried bits as a mask\n    if (maskedWords && carry !== 0) {\n      maskedWords.words[maskedWords.length++] = carry;\n    }\n\n    if (this.length === 0) {\n      this.words[0] = 0;\n      this.length = 1;\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.ishrn = function ishrn (bits, hint, extended) {\n    // TODO(indutny): implement me\n    assert(this.negative === 0);\n    return this.iushrn(bits, hint, extended);\n  };\n\n  // Shift-left\n  BN.prototype.shln = function shln (bits) {\n    return this.clone().ishln(bits);\n  };\n\n  BN.prototype.ushln = function ushln (bits) {\n    return this.clone().iushln(bits);\n  };\n\n  // Shift-right\n  BN.prototype.shrn = function shrn (bits) {\n    return this.clone().ishrn(bits);\n  };\n\n  BN.prototype.ushrn = function ushrn (bits) {\n    return this.clone().iushrn(bits);\n  };\n\n  // Test if n bit is set\n  BN.prototype.testn = function testn (bit) {\n    assert(typeof bit === 'number' && bit >= 0);\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) return false;\n\n    // Check bit and return\n    var w = this.words[s];\n\n    return !!(w & q);\n  };\n\n  // Return only lowers bits of number (in-place)\n  BN.prototype.imaskn = function imaskn (bits) {\n    assert(typeof bits === 'number' && bits >= 0);\n    var r = bits % 26;\n    var s = (bits - r) / 26;\n\n    assert(this.negative === 0, 'imaskn works only with positive numbers');\n\n    if (this.length <= s) {\n      return this;\n    }\n\n    if (r !== 0) {\n      s++;\n    }\n    this.length = Math.min(s, this.length);\n\n    if (r !== 0) {\n      var mask = 0x3ffffff ^ ((0x3ffffff >>> r) << r);\n      this.words[this.length - 1] &= mask;\n    }\n\n    return this._strip();\n  };\n\n  // Return only lowers bits of number\n  BN.prototype.maskn = function maskn (bits) {\n    return this.clone().imaskn(bits);\n  };\n\n  // Add plain number `num` to `this`\n  BN.prototype.iaddn = function iaddn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.isubn(-num);\n\n    // Possible sign change\n    if (this.negative !== 0) {\n      if (this.length === 1 && (this.words[0] | 0) <= num) {\n        this.words[0] = num - (this.words[0] | 0);\n        this.negative = 0;\n        return this;\n      }\n\n      this.negative = 0;\n      this.isubn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    // Add without checks\n    return this._iaddn(num);\n  };\n\n  BN.prototype._iaddn = function _iaddn (num) {\n    this.words[0] += num;\n\n    // Carry\n    for (var i = 0; i < this.length && this.words[i] >= 0x4000000; i++) {\n      this.words[i] -= 0x4000000;\n      if (i === this.length - 1) {\n        this.words[i + 1] = 1;\n      } else {\n        this.words[i + 1]++;\n      }\n    }\n    this.length = Math.max(this.length, i + 1);\n\n    return this;\n  };\n\n  // Subtract plain number `num` from `this`\n  BN.prototype.isubn = function isubn (num) {\n    assert(typeof num === 'number');\n    assert(num < 0x4000000);\n    if (num < 0) return this.iaddn(-num);\n\n    if (this.negative !== 0) {\n      this.negative = 0;\n      this.iaddn(num);\n      this.negative = 1;\n      return this;\n    }\n\n    this.words[0] -= num;\n\n    if (this.length === 1 && this.words[0] < 0) {\n      this.words[0] = -this.words[0];\n      this.negative = 1;\n    } else {\n      // Carry\n      for (var i = 0; i < this.length && this.words[i] < 0; i++) {\n        this.words[i] += 0x4000000;\n        this.words[i + 1] -= 1;\n      }\n    }\n\n    return this._strip();\n  };\n\n  BN.prototype.addn = function addn (num) {\n    return this.clone().iaddn(num);\n  };\n\n  BN.prototype.subn = function subn (num) {\n    return this.clone().isubn(num);\n  };\n\n  BN.prototype.iabs = function iabs () {\n    this.negative = 0;\n\n    return this;\n  };\n\n  BN.prototype.abs = function abs () {\n    return this.clone().iabs();\n  };\n\n  BN.prototype._ishlnsubmul = function _ishlnsubmul (num, mul, shift) {\n    var len = num.length + shift;\n    var i;\n\n    this._expand(len);\n\n    var w;\n    var carry = 0;\n    for (i = 0; i < num.length; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      var right = (num.words[i] | 0) * mul;\n      w -= right & 0x3ffffff;\n      carry = (w >> 26) - ((right / 0x4000000) | 0);\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n    for (; i < this.length - shift; i++) {\n      w = (this.words[i + shift] | 0) + carry;\n      carry = w >> 26;\n      this.words[i + shift] = w & 0x3ffffff;\n    }\n\n    if (carry === 0) return this._strip();\n\n    // Subtraction overflow\n    assert(carry === -1);\n    carry = 0;\n    for (i = 0; i < this.length; i++) {\n      w = -(this.words[i] | 0) + carry;\n      carry = w >> 26;\n      this.words[i] = w & 0x3ffffff;\n    }\n    this.negative = 1;\n\n    return this._strip();\n  };\n\n  BN.prototype._wordDiv = function _wordDiv (num, mode) {\n    var shift = this.length - num.length;\n\n    var a = this.clone();\n    var b = num;\n\n    // Normalize\n    var bhi = b.words[b.length - 1] | 0;\n    var bhiBits = this._countBits(bhi);\n    shift = 26 - bhiBits;\n    if (shift !== 0) {\n      b = b.ushln(shift);\n      a.iushln(shift);\n      bhi = b.words[b.length - 1] | 0;\n    }\n\n    // Initialize quotient\n    var m = a.length - b.length;\n    var q;\n\n    if (mode !== 'mod') {\n      q = new BN(null);\n      q.length = m + 1;\n      q.words = new Array(q.length);\n      for (var i = 0; i < q.length; i++) {\n        q.words[i] = 0;\n      }\n    }\n\n    var diff = a.clone()._ishlnsubmul(b, 1, m);\n    if (diff.negative === 0) {\n      a = diff;\n      if (q) {\n        q.words[m] = 1;\n      }\n    }\n\n    for (var j = m - 1; j >= 0; j--) {\n      var qj = (a.words[b.length + j] | 0) * 0x4000000 +\n        (a.words[b.length + j - 1] | 0);\n\n      // NOTE: (qj / bhi) is (0x3ffffff * 0x4000000 + 0x3ffffff) / 0x2000000 max\n      // (0x7ffffff)\n      qj = Math.min((qj / bhi) | 0, 0x3ffffff);\n\n      a._ishlnsubmul(b, qj, j);\n      while (a.negative !== 0) {\n        qj--;\n        a.negative = 0;\n        a._ishlnsubmul(b, 1, j);\n        if (!a.isZero()) {\n          a.negative ^= 1;\n        }\n      }\n      if (q) {\n        q.words[j] = qj;\n      }\n    }\n    if (q) {\n      q._strip();\n    }\n    a._strip();\n\n    // Denormalize\n    if (mode !== 'div' && shift !== 0) {\n      a.iushrn(shift);\n    }\n\n    return {\n      div: q || null,\n      mod: a\n    };\n  };\n\n  // NOTE: 1) `mode` can be set to `mod` to request mod only,\n  //       to `div` to request div only, or be absent to\n  //       request both div & mod\n  //       2) `positive` is true if unsigned mod is requested\n  BN.prototype.divmod = function divmod (num, mode, positive) {\n    assert(!num.isZero());\n\n    if (this.isZero()) {\n      return {\n        div: new BN(0),\n        mod: new BN(0)\n      };\n    }\n\n    var div, mod, res;\n    if (this.negative !== 0 && num.negative === 0) {\n      res = this.neg().divmod(num, mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.iadd(num);\n        }\n      }\n\n      return {\n        div: div,\n        mod: mod\n      };\n    }\n\n    if (this.negative === 0 && num.negative !== 0) {\n      res = this.divmod(num.neg(), mode);\n\n      if (mode !== 'mod') {\n        div = res.div.neg();\n      }\n\n      return {\n        div: div,\n        mod: res.mod\n      };\n    }\n\n    if ((this.negative & num.negative) !== 0) {\n      res = this.neg().divmod(num.neg(), mode);\n\n      if (mode !== 'div') {\n        mod = res.mod.neg();\n        if (positive && mod.negative !== 0) {\n          mod.isub(num);\n        }\n      }\n\n      return {\n        div: res.div,\n        mod: mod\n      };\n    }\n\n    // Both numbers are positive at this point\n\n    // Strip both numbers to approximate shift value\n    if (num.length > this.length || this.cmp(num) < 0) {\n      return {\n        div: new BN(0),\n        mod: this\n      };\n    }\n\n    // Very short reduction\n    if (num.length === 1) {\n      if (mode === 'div') {\n        return {\n          div: this.divn(num.words[0]),\n          mod: null\n        };\n      }\n\n      if (mode === 'mod') {\n        return {\n          div: null,\n          mod: new BN(this.modrn(num.words[0]))\n        };\n      }\n\n      return {\n        div: this.divn(num.words[0]),\n        mod: new BN(this.modrn(num.words[0]))\n      };\n    }\n\n    return this._wordDiv(num, mode);\n  };\n\n  // Find `this` / `num`\n  BN.prototype.div = function div (num) {\n    return this.divmod(num, 'div', false).div;\n  };\n\n  // Find `this` % `num`\n  BN.prototype.mod = function mod (num) {\n    return this.divmod(num, 'mod', false).mod;\n  };\n\n  BN.prototype.umod = function umod (num) {\n    return this.divmod(num, 'mod', true).mod;\n  };\n\n  // Find Round(`this` / `num`)\n  BN.prototype.divRound = function divRound (num) {\n    var dm = this.divmod(num);\n\n    // Fast case - exact division\n    if (dm.mod.isZero()) return dm.div;\n\n    var mod = dm.div.negative !== 0 ? dm.mod.isub(num) : dm.mod;\n\n    var half = num.ushrn(1);\n    var r2 = num.andln(1);\n    var cmp = mod.cmp(half);\n\n    // Round down\n    if (cmp < 0 || (r2 === 1 && cmp === 0)) return dm.div;\n\n    // Round up\n    return dm.div.negative !== 0 ? dm.div.isubn(1) : dm.div.iaddn(1);\n  };\n\n  BN.prototype.modrn = function modrn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n    var p = (1 << 26) % num;\n\n    var acc = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      acc = (p * acc + (this.words[i] | 0)) % num;\n    }\n\n    return isNegNum ? -acc : acc;\n  };\n\n  // WARNING: DEPRECATED\n  BN.prototype.modn = function modn (num) {\n    return this.modrn(num);\n  };\n\n  // In-place division by number\n  BN.prototype.idivn = function idivn (num) {\n    var isNegNum = num < 0;\n    if (isNegNum) num = -num;\n\n    assert(num <= 0x3ffffff);\n\n    var carry = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var w = (this.words[i] | 0) + carry * 0x4000000;\n      this.words[i] = (w / num) | 0;\n      carry = w % num;\n    }\n\n    this._strip();\n    return isNegNum ? this.ineg() : this;\n  };\n\n  BN.prototype.divn = function divn (num) {\n    return this.clone().idivn(num);\n  };\n\n  BN.prototype.egcd = function egcd (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var x = this;\n    var y = p.clone();\n\n    if (x.negative !== 0) {\n      x = x.umod(p);\n    } else {\n      x = x.clone();\n    }\n\n    // A * x + B * y = x\n    var A = new BN(1);\n    var B = new BN(0);\n\n    // C * x + D * y = y\n    var C = new BN(0);\n    var D = new BN(1);\n\n    var g = 0;\n\n    while (x.isEven() && y.isEven()) {\n      x.iushrn(1);\n      y.iushrn(1);\n      ++g;\n    }\n\n    var yp = y.clone();\n    var xp = x.clone();\n\n    while (!x.isZero()) {\n      for (var i = 0, im = 1; (x.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        x.iushrn(i);\n        while (i-- > 0) {\n          if (A.isOdd() || B.isOdd()) {\n            A.iadd(yp);\n            B.isub(xp);\n          }\n\n          A.iushrn(1);\n          B.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (y.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        y.iushrn(j);\n        while (j-- > 0) {\n          if (C.isOdd() || D.isOdd()) {\n            C.iadd(yp);\n            D.isub(xp);\n          }\n\n          C.iushrn(1);\n          D.iushrn(1);\n        }\n      }\n\n      if (x.cmp(y) >= 0) {\n        x.isub(y);\n        A.isub(C);\n        B.isub(D);\n      } else {\n        y.isub(x);\n        C.isub(A);\n        D.isub(B);\n      }\n    }\n\n    return {\n      a: C,\n      b: D,\n      gcd: y.iushln(g)\n    };\n  };\n\n  // This is reduced incarnation of the binary EEA\n  // above, designated to invert members of the\n  // _prime_ fields F(p) at a maximal speed\n  BN.prototype._invmp = function _invmp (p) {\n    assert(p.negative === 0);\n    assert(!p.isZero());\n\n    var a = this;\n    var b = p.clone();\n\n    if (a.negative !== 0) {\n      a = a.umod(p);\n    } else {\n      a = a.clone();\n    }\n\n    var x1 = new BN(1);\n    var x2 = new BN(0);\n\n    var delta = b.clone();\n\n    while (a.cmpn(1) > 0 && b.cmpn(1) > 0) {\n      for (var i = 0, im = 1; (a.words[0] & im) === 0 && i < 26; ++i, im <<= 1);\n      if (i > 0) {\n        a.iushrn(i);\n        while (i-- > 0) {\n          if (x1.isOdd()) {\n            x1.iadd(delta);\n          }\n\n          x1.iushrn(1);\n        }\n      }\n\n      for (var j = 0, jm = 1; (b.words[0] & jm) === 0 && j < 26; ++j, jm <<= 1);\n      if (j > 0) {\n        b.iushrn(j);\n        while (j-- > 0) {\n          if (x2.isOdd()) {\n            x2.iadd(delta);\n          }\n\n          x2.iushrn(1);\n        }\n      }\n\n      if (a.cmp(b) >= 0) {\n        a.isub(b);\n        x1.isub(x2);\n      } else {\n        b.isub(a);\n        x2.isub(x1);\n      }\n    }\n\n    var res;\n    if (a.cmpn(1) === 0) {\n      res = x1;\n    } else {\n      res = x2;\n    }\n\n    if (res.cmpn(0) < 0) {\n      res.iadd(p);\n    }\n\n    return res;\n  };\n\n  BN.prototype.gcd = function gcd (num) {\n    if (this.isZero()) return num.abs();\n    if (num.isZero()) return this.abs();\n\n    var a = this.clone();\n    var b = num.clone();\n    a.negative = 0;\n    b.negative = 0;\n\n    // Remove common factor of two\n    for (var shift = 0; a.isEven() && b.isEven(); shift++) {\n      a.iushrn(1);\n      b.iushrn(1);\n    }\n\n    do {\n      while (a.isEven()) {\n        a.iushrn(1);\n      }\n      while (b.isEven()) {\n        b.iushrn(1);\n      }\n\n      var r = a.cmp(b);\n      if (r < 0) {\n        // Swap `a` and `b` to make `a` always bigger than `b`\n        var t = a;\n        a = b;\n        b = t;\n      } else if (r === 0 || b.cmpn(1) === 0) {\n        break;\n      }\n\n      a.isub(b);\n    } while (true);\n\n    return b.iushln(shift);\n  };\n\n  // Invert number in the field F(num)\n  BN.prototype.invm = function invm (num) {\n    return this.egcd(num).a.umod(num);\n  };\n\n  BN.prototype.isEven = function isEven () {\n    return (this.words[0] & 1) === 0;\n  };\n\n  BN.prototype.isOdd = function isOdd () {\n    return (this.words[0] & 1) === 1;\n  };\n\n  // And first word and num\n  BN.prototype.andln = function andln (num) {\n    return this.words[0] & num;\n  };\n\n  // Increment at the bit position in-line\n  BN.prototype.bincn = function bincn (bit) {\n    assert(typeof bit === 'number');\n    var r = bit % 26;\n    var s = (bit - r) / 26;\n    var q = 1 << r;\n\n    // Fast case: bit is much higher than all existing words\n    if (this.length <= s) {\n      this._expand(s + 1);\n      this.words[s] |= q;\n      return this;\n    }\n\n    // Add bit and propagate, if needed\n    var carry = q;\n    for (var i = s; carry !== 0 && i < this.length; i++) {\n      var w = this.words[i] | 0;\n      w += carry;\n      carry = w >>> 26;\n      w &= 0x3ffffff;\n      this.words[i] = w;\n    }\n    if (carry !== 0) {\n      this.words[i] = carry;\n      this.length++;\n    }\n    return this;\n  };\n\n  BN.prototype.isZero = function isZero () {\n    return this.length === 1 && this.words[0] === 0;\n  };\n\n  BN.prototype.cmpn = function cmpn (num) {\n    var negative = num < 0;\n\n    if (this.negative !== 0 && !negative) return -1;\n    if (this.negative === 0 && negative) return 1;\n\n    this._strip();\n\n    var res;\n    if (this.length > 1) {\n      res = 1;\n    } else {\n      if (negative) {\n        num = -num;\n      }\n\n      assert(num <= 0x3ffffff, 'Number is too big');\n\n      var w = this.words[0] | 0;\n      res = w === num ? 0 : w < num ? -1 : 1;\n    }\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Compare two numbers and return:\n  // 1 - if `this` > `num`\n  // 0 - if `this` == `num`\n  // -1 - if `this` < `num`\n  BN.prototype.cmp = function cmp (num) {\n    if (this.negative !== 0 && num.negative === 0) return -1;\n    if (this.negative === 0 && num.negative !== 0) return 1;\n\n    var res = this.ucmp(num);\n    if (this.negative !== 0) return -res | 0;\n    return res;\n  };\n\n  // Unsigned comparison\n  BN.prototype.ucmp = function ucmp (num) {\n    // At this point both numbers have the same sign\n    if (this.length > num.length) return 1;\n    if (this.length < num.length) return -1;\n\n    var res = 0;\n    for (var i = this.length - 1; i >= 0; i--) {\n      var a = this.words[i] | 0;\n      var b = num.words[i] | 0;\n\n      if (a === b) continue;\n      if (a < b) {\n        res = -1;\n      } else if (a > b) {\n        res = 1;\n      }\n      break;\n    }\n    return res;\n  };\n\n  BN.prototype.gtn = function gtn (num) {\n    return this.cmpn(num) === 1;\n  };\n\n  BN.prototype.gt = function gt (num) {\n    return this.cmp(num) === 1;\n  };\n\n  BN.prototype.gten = function gten (num) {\n    return this.cmpn(num) >= 0;\n  };\n\n  BN.prototype.gte = function gte (num) {\n    return this.cmp(num) >= 0;\n  };\n\n  BN.prototype.ltn = function ltn (num) {\n    return this.cmpn(num) === -1;\n  };\n\n  BN.prototype.lt = function lt (num) {\n    return this.cmp(num) === -1;\n  };\n\n  BN.prototype.lten = function lten (num) {\n    return this.cmpn(num) <= 0;\n  };\n\n  BN.prototype.lte = function lte (num) {\n    return this.cmp(num) <= 0;\n  };\n\n  BN.prototype.eqn = function eqn (num) {\n    return this.cmpn(num) === 0;\n  };\n\n  BN.prototype.eq = function eq (num) {\n    return this.cmp(num) === 0;\n  };\n\n  //\n  // A reduce context, could be using montgomery or something better, depending\n  // on the `m` itself.\n  //\n  BN.red = function red (num) {\n    return new Red(num);\n  };\n\n  BN.prototype.toRed = function toRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    assert(this.negative === 0, 'red works only with positives');\n    return ctx.convertTo(this)._forceRed(ctx);\n  };\n\n  BN.prototype.fromRed = function fromRed () {\n    assert(this.red, 'fromRed works only with numbers in reduction context');\n    return this.red.convertFrom(this);\n  };\n\n  BN.prototype._forceRed = function _forceRed (ctx) {\n    this.red = ctx;\n    return this;\n  };\n\n  BN.prototype.forceRed = function forceRed (ctx) {\n    assert(!this.red, 'Already a number in reduction context');\n    return this._forceRed(ctx);\n  };\n\n  BN.prototype.redAdd = function redAdd (num) {\n    assert(this.red, 'redAdd works only with red numbers');\n    return this.red.add(this, num);\n  };\n\n  BN.prototype.redIAdd = function redIAdd (num) {\n    assert(this.red, 'redIAdd works only with red numbers');\n    return this.red.iadd(this, num);\n  };\n\n  BN.prototype.redSub = function redSub (num) {\n    assert(this.red, 'redSub works only with red numbers');\n    return this.red.sub(this, num);\n  };\n\n  BN.prototype.redISub = function redISub (num) {\n    assert(this.red, 'redISub works only with red numbers');\n    return this.red.isub(this, num);\n  };\n\n  BN.prototype.redShl = function redShl (num) {\n    assert(this.red, 'redShl works only with red numbers');\n    return this.red.shl(this, num);\n  };\n\n  BN.prototype.redMul = function redMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.mul(this, num);\n  };\n\n  BN.prototype.redIMul = function redIMul (num) {\n    assert(this.red, 'redMul works only with red numbers');\n    this.red._verify2(this, num);\n    return this.red.imul(this, num);\n  };\n\n  BN.prototype.redSqr = function redSqr () {\n    assert(this.red, 'redSqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqr(this);\n  };\n\n  BN.prototype.redISqr = function redISqr () {\n    assert(this.red, 'redISqr works only with red numbers');\n    this.red._verify1(this);\n    return this.red.isqr(this);\n  };\n\n  // Square root over p\n  BN.prototype.redSqrt = function redSqrt () {\n    assert(this.red, 'redSqrt works only with red numbers');\n    this.red._verify1(this);\n    return this.red.sqrt(this);\n  };\n\n  BN.prototype.redInvm = function redInvm () {\n    assert(this.red, 'redInvm works only with red numbers');\n    this.red._verify1(this);\n    return this.red.invm(this);\n  };\n\n  // Return negative clone of `this` % `red modulo`\n  BN.prototype.redNeg = function redNeg () {\n    assert(this.red, 'redNeg works only with red numbers');\n    this.red._verify1(this);\n    return this.red.neg(this);\n  };\n\n  BN.prototype.redPow = function redPow (num) {\n    assert(this.red && !num.red, 'redPow(normalNum)');\n    this.red._verify1(this);\n    return this.red.pow(this, num);\n  };\n\n  // Prime numbers with efficient reduction\n  var primes = {\n    k256: null,\n    p224: null,\n    p192: null,\n    p25519: null\n  };\n\n  // Pseudo-Mersenne prime\n  function MPrime (name, p) {\n    // P = 2 ^ N - K\n    this.name = name;\n    this.p = new BN(p, 16);\n    this.n = this.p.bitLength();\n    this.k = new BN(1).iushln(this.n).isub(this.p);\n\n    this.tmp = this._tmp();\n  }\n\n  MPrime.prototype._tmp = function _tmp () {\n    var tmp = new BN(null);\n    tmp.words = new Array(Math.ceil(this.n / 13));\n    return tmp;\n  };\n\n  MPrime.prototype.ireduce = function ireduce (num) {\n    // Assumes that `num` is less than `P^2`\n    // num = HI * (2 ^ N - K) + HI * K + LO = HI * K + LO (mod P)\n    var r = num;\n    var rlen;\n\n    do {\n      this.split(r, this.tmp);\n      r = this.imulK(r);\n      r = r.iadd(this.tmp);\n      rlen = r.bitLength();\n    } while (rlen > this.n);\n\n    var cmp = rlen < this.n ? -1 : r.ucmp(this.p);\n    if (cmp === 0) {\n      r.words[0] = 0;\n      r.length = 1;\n    } else if (cmp > 0) {\n      r.isub(this.p);\n    } else {\n      if (r.strip !== undefined) {\n        // r is a BN v4 instance\n        r.strip();\n      } else {\n        // r is a BN v5 instance\n        r._strip();\n      }\n    }\n\n    return r;\n  };\n\n  MPrime.prototype.split = function split (input, out) {\n    input.iushrn(this.n, 0, out);\n  };\n\n  MPrime.prototype.imulK = function imulK (num) {\n    return num.imul(this.k);\n  };\n\n  function K256 () {\n    MPrime.call(\n      this,\n      'k256',\n      'ffffffff ffffffff ffffffff ffffffff ffffffff ffffffff fffffffe fffffc2f');\n  }\n  inherits(K256, MPrime);\n\n  K256.prototype.split = function split (input, output) {\n    // 256 = 9 * 26 + 22\n    var mask = 0x3fffff;\n\n    var outLen = Math.min(input.length, 9);\n    for (var i = 0; i < outLen; i++) {\n      output.words[i] = input.words[i];\n    }\n    output.length = outLen;\n\n    if (input.length <= 9) {\n      input.words[0] = 0;\n      input.length = 1;\n      return;\n    }\n\n    // Shift by 9 limbs\n    var prev = input.words[9];\n    output.words[output.length++] = prev & mask;\n\n    for (i = 10; i < input.length; i++) {\n      var next = input.words[i] | 0;\n      input.words[i - 10] = ((next & mask) << 4) | (prev >>> 22);\n      prev = next;\n    }\n    prev >>>= 22;\n    input.words[i - 10] = prev;\n    if (prev === 0 && input.length > 10) {\n      input.length -= 10;\n    } else {\n      input.length -= 9;\n    }\n  };\n\n  K256.prototype.imulK = function imulK (num) {\n    // K = 0x1000003d1 = [ 0x40, 0x3d1 ]\n    num.words[num.length] = 0;\n    num.words[num.length + 1] = 0;\n    num.length += 2;\n\n    // bounded at: 0x40 * 0x3ffffff + 0x3d0 = 0x100000390\n    var lo = 0;\n    for (var i = 0; i < num.length; i++) {\n      var w = num.words[i] | 0;\n      lo += w * 0x3d1;\n      num.words[i] = lo & 0x3ffffff;\n      lo = w * 0x40 + ((lo / 0x4000000) | 0);\n    }\n\n    // Fast length reduction\n    if (num.words[num.length - 1] === 0) {\n      num.length--;\n      if (num.words[num.length - 1] === 0) {\n        num.length--;\n      }\n    }\n    return num;\n  };\n\n  function P224 () {\n    MPrime.call(\n      this,\n      'p224',\n      'ffffffff ffffffff ffffffff ffffffff 00000000 00000000 00000001');\n  }\n  inherits(P224, MPrime);\n\n  function P192 () {\n    MPrime.call(\n      this,\n      'p192',\n      'ffffffff ffffffff ffffffff fffffffe ffffffff ffffffff');\n  }\n  inherits(P192, MPrime);\n\n  function P25519 () {\n    // 2 ^ 255 - 19\n    MPrime.call(\n      this,\n      '25519',\n      '7fffffffffffffff ffffffffffffffff ffffffffffffffff ffffffffffffffed');\n  }\n  inherits(P25519, MPrime);\n\n  P25519.prototype.imulK = function imulK (num) {\n    // K = 0x13\n    var carry = 0;\n    for (var i = 0; i < num.length; i++) {\n      var hi = (num.words[i] | 0) * 0x13 + carry;\n      var lo = hi & 0x3ffffff;\n      hi >>>= 26;\n\n      num.words[i] = lo;\n      carry = hi;\n    }\n    if (carry !== 0) {\n      num.words[num.length++] = carry;\n    }\n    return num;\n  };\n\n  // Exported mostly for testing purposes, use plain name instead\n  BN._prime = function prime (name) {\n    // Cached version of prime\n    if (primes[name]) return primes[name];\n\n    var prime;\n    if (name === 'k256') {\n      prime = new K256();\n    } else if (name === 'p224') {\n      prime = new P224();\n    } else if (name === 'p192') {\n      prime = new P192();\n    } else if (name === 'p25519') {\n      prime = new P25519();\n    } else {\n      throw new Error('Unknown prime ' + name);\n    }\n    primes[name] = prime;\n\n    return prime;\n  };\n\n  //\n  // Base reduction engine\n  //\n  function Red (m) {\n    if (typeof m === 'string') {\n      var prime = BN._prime(m);\n      this.m = prime.p;\n      this.prime = prime;\n    } else {\n      assert(m.gtn(1), 'modulus must be greater than 1');\n      this.m = m;\n      this.prime = null;\n    }\n  }\n\n  Red.prototype._verify1 = function _verify1 (a) {\n    assert(a.negative === 0, 'red works only with positives');\n    assert(a.red, 'red works only with red numbers');\n  };\n\n  Red.prototype._verify2 = function _verify2 (a, b) {\n    assert((a.negative | b.negative) === 0, 'red works only with positives');\n    assert(a.red && a.red === b.red,\n      'red works only with red numbers');\n  };\n\n  Red.prototype.imod = function imod (a) {\n    if (this.prime) return this.prime.ireduce(a)._forceRed(this);\n\n    move(a, a.umod(this.m)._forceRed(this));\n    return a;\n  };\n\n  Red.prototype.neg = function neg (a) {\n    if (a.isZero()) {\n      return a.clone();\n    }\n\n    return this.m.sub(a)._forceRed(this);\n  };\n\n  Red.prototype.add = function add (a, b) {\n    this._verify2(a, b);\n\n    var res = a.add(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.iadd = function iadd (a, b) {\n    this._verify2(a, b);\n\n    var res = a.iadd(b);\n    if (res.cmp(this.m) >= 0) {\n      res.isub(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.sub = function sub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.sub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res._forceRed(this);\n  };\n\n  Red.prototype.isub = function isub (a, b) {\n    this._verify2(a, b);\n\n    var res = a.isub(b);\n    if (res.cmpn(0) < 0) {\n      res.iadd(this.m);\n    }\n    return res;\n  };\n\n  Red.prototype.shl = function shl (a, num) {\n    this._verify1(a);\n    return this.imod(a.ushln(num));\n  };\n\n  Red.prototype.imul = function imul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.imul(b));\n  };\n\n  Red.prototype.mul = function mul (a, b) {\n    this._verify2(a, b);\n    return this.imod(a.mul(b));\n  };\n\n  Red.prototype.isqr = function isqr (a) {\n    return this.imul(a, a.clone());\n  };\n\n  Red.prototype.sqr = function sqr (a) {\n    return this.mul(a, a);\n  };\n\n  Red.prototype.sqrt = function sqrt (a) {\n    if (a.isZero()) return a.clone();\n\n    var mod3 = this.m.andln(3);\n    assert(mod3 % 2 === 1);\n\n    // Fast case\n    if (mod3 === 3) {\n      var pow = this.m.add(new BN(1)).iushrn(2);\n      return this.pow(a, pow);\n    }\n\n    // Tonelli-Shanks algorithm (Totally unoptimized and slow)\n    //\n    // Find Q and S, that Q * 2 ^ S = (P - 1)\n    var q = this.m.subn(1);\n    var s = 0;\n    while (!q.isZero() && q.andln(1) === 0) {\n      s++;\n      q.iushrn(1);\n    }\n    assert(!q.isZero());\n\n    var one = new BN(1).toRed(this);\n    var nOne = one.redNeg();\n\n    // Find quadratic non-residue\n    // NOTE: Max is such because of generalized Riemann hypothesis.\n    var lpow = this.m.subn(1).iushrn(1);\n    var z = this.m.bitLength();\n    z = new BN(2 * z * z).toRed(this);\n\n    while (this.pow(z, lpow).cmp(nOne) !== 0) {\n      z.redIAdd(nOne);\n    }\n\n    var c = this.pow(z, q);\n    var r = this.pow(a, q.addn(1).iushrn(1));\n    var t = this.pow(a, q);\n    var m = s;\n    while (t.cmp(one) !== 0) {\n      var tmp = t;\n      for (var i = 0; tmp.cmp(one) !== 0; i++) {\n        tmp = tmp.redSqr();\n      }\n      assert(i < m);\n      var b = this.pow(c, new BN(1).iushln(m - i - 1));\n\n      r = r.redMul(b);\n      c = b.redSqr();\n      t = t.redMul(c);\n      m = i;\n    }\n\n    return r;\n  };\n\n  Red.prototype.invm = function invm (a) {\n    var inv = a._invmp(this.m);\n    if (inv.negative !== 0) {\n      inv.negative = 0;\n      return this.imod(inv).redNeg();\n    } else {\n      return this.imod(inv);\n    }\n  };\n\n  Red.prototype.pow = function pow (a, num) {\n    if (num.isZero()) return new BN(1).toRed(this);\n    if (num.cmpn(1) === 0) return a.clone();\n\n    var windowSize = 4;\n    var wnd = new Array(1 << windowSize);\n    wnd[0] = new BN(1).toRed(this);\n    wnd[1] = a;\n    for (var i = 2; i < wnd.length; i++) {\n      wnd[i] = this.mul(wnd[i - 1], a);\n    }\n\n    var res = wnd[0];\n    var current = 0;\n    var currentLen = 0;\n    var start = num.bitLength() % 26;\n    if (start === 0) {\n      start = 26;\n    }\n\n    for (i = num.length - 1; i >= 0; i--) {\n      var word = num.words[i];\n      for (var j = start - 1; j >= 0; j--) {\n        var bit = (word >> j) & 1;\n        if (res !== wnd[0]) {\n          res = this.sqr(res);\n        }\n\n        if (bit === 0 && current === 0) {\n          currentLen = 0;\n          continue;\n        }\n\n        current <<= 1;\n        current |= bit;\n        currentLen++;\n        if (currentLen !== windowSize && (i !== 0 || j !== 0)) continue;\n\n        res = this.mul(res, wnd[current]);\n        currentLen = 0;\n        current = 0;\n      }\n      start = 26;\n    }\n\n    return res;\n  };\n\n  Red.prototype.convertTo = function convertTo (num) {\n    var r = num.umod(this.m);\n\n    return r === num ? r.clone() : r;\n  };\n\n  Red.prototype.convertFrom = function convertFrom (num) {\n    var res = num.clone();\n    res.red = null;\n    return res;\n  };\n\n  //\n  // Montgomery method engine\n  //\n\n  BN.mont = function mont (num) {\n    return new Mont(num);\n  };\n\n  function Mont (m) {\n    Red.call(this, m);\n\n    this.shift = this.m.bitLength();\n    if (this.shift % 26 !== 0) {\n      this.shift += 26 - (this.shift % 26);\n    }\n\n    this.r = new BN(1).iushln(this.shift);\n    this.r2 = this.imod(this.r.sqr());\n    this.rinv = this.r._invmp(this.m);\n\n    this.minv = this.rinv.mul(this.r).isubn(1).div(this.m);\n    this.minv = this.minv.umod(this.r);\n    this.minv = this.r.sub(this.minv);\n  }\n  inherits(Mont, Red);\n\n  Mont.prototype.convertTo = function convertTo (num) {\n    return this.imod(num.ushln(this.shift));\n  };\n\n  Mont.prototype.convertFrom = function convertFrom (num) {\n    var r = this.imod(num.mul(this.rinv));\n    r.red = null;\n    return r;\n  };\n\n  Mont.prototype.imul = function imul (a, b) {\n    if (a.isZero() || b.isZero()) {\n      a.words[0] = 0;\n      a.length = 1;\n      return a;\n    }\n\n    var t = a.imul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.mul = function mul (a, b) {\n    if (a.isZero() || b.isZero()) return new BN(0)._forceRed(this);\n\n    var t = a.mul(b);\n    var c = t.maskn(this.shift).mul(this.minv).imaskn(this.shift).mul(this.m);\n    var u = t.isub(c).iushrn(this.shift);\n    var res = u;\n    if (u.cmp(this.m) >= 0) {\n      res = u.isub(this.m);\n    } else if (u.cmpn(0) < 0) {\n      res = u.iadd(this.m);\n    }\n\n    return res._forceRed(this);\n  };\n\n  Mont.prototype.invm = function invm (a) {\n    // (AR)^-1 * R^2 = (A^-1 * R^-1) * R^2 = A^-1 * R\n    var res = this.imod(a._invmp(this.m).mul(this.r2));\n    return res._forceRed(this);\n  };\n})(typeof module === 'undefined' || module, this);\n","\"use strict\";\n/**\n * Re-exports commonly used modules:\n * * Exports [`BN`](https://github.com/indutny/bn.js), [`rlp`](https://github.com/ethereumjs/rlp).\n * @packageDocumentation\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.rlp = exports.BN = void 0;\n// TODO: This can be replaced with a normal ESM import once\n// the new major version of the typescript config package\n// is released and adopted here.\nvar BN = require(\"bn.js\");\nexports.BN = BN;\nvar rlp = require(\"rlp\");\nexports.rlp = rlp;\n//# sourceMappingURL=externals.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.baToJSON = exports.addHexPrefix = exports.toUnsigned = exports.fromSigned = exports.bufferToHex = exports.bufferToInt = exports.toBuffer = exports.unpadHexString = exports.unpadArray = exports.unpadBuffer = exports.setLengthRight = exports.setLengthLeft = exports.zeros = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar BN = require(\"bn.js\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a buffer filled with 0s.\n * @param bytes the number of bytes the buffer should be\n */\nexports.zeros = function (bytes) {\n    return Buffer.allocUnsafe(bytes).fill(0);\n};\n/**\n * Left Pads a `Buffer` with leading zeros till it has `length` bytes.\n * Or it truncates the beginning if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthLeft = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, false);\n};\n/**\n * Right Pads a `Buffer` with trailing zeros till it has `length` bytes.\n * it truncates the end if it exceeds.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @return (Buffer)\n */\nexports.setLengthRight = function (msg, length) {\n    helpers_1.assertIsBuffer(msg);\n    return setLength(msg, length, true);\n};\n/**\n * Pads a `Buffer` with zeros till it has `length` bytes.\n * Truncates the beginning or end of input if its length exceeds `length`.\n * @param msg the value to pad (Buffer)\n * @param length the number of bytes the output should be\n * @param right whether to start padding form the left or right\n * @return (Buffer)\n */\nvar setLength = function (msg, length, right) {\n    var buf = exports.zeros(length);\n    if (right) {\n        if (msg.length < length) {\n            msg.copy(buf);\n            return buf;\n        }\n        return msg.slice(0, length);\n    }\n    else {\n        if (msg.length < length) {\n            msg.copy(buf, length - msg.length);\n            return buf;\n        }\n        return msg.slice(-length);\n    }\n};\n/**\n * Trims leading zeros from a `Buffer`.\n * @param a (Buffer)\n * @return (Buffer)\n */\nexports.unpadBuffer = function (a) {\n    helpers_1.assertIsBuffer(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from an `Array` (of numbers).\n * @param a (number[])\n * @return (number[])\n */\nexports.unpadArray = function (a) {\n    helpers_1.assertIsArray(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a hex-prefixed `String`.\n * @param a (String)\n * @return (String)\n */\nexports.unpadHexString = function (a) {\n    helpers_1.assertIsHexString(a);\n    a = ethjsUtil.stripHexPrefix(a);\n    return stripZeros(a);\n};\n/**\n * Trims leading zeros from a `Buffer`, `String` or `Number[]`.\n * @param a (Buffer|Array|String)\n * @return (Buffer|Array|String)\n */\nvar stripZeros = function (a) {\n    var first = a[0];\n    while (a.length > 0 && first.toString() === '0') {\n        a = a.slice(1);\n        first = a[0];\n    }\n    return a;\n};\n/**\n * Attempts to turn a value into a `Buffer`. As input it supports `Buffer`, `String`, `Number`, null/undefined, `BN` and other objects with a `toArray()` method.\n * @param v the value\n */\nexports.toBuffer = function (v) {\n    if (!Buffer.isBuffer(v)) {\n        if (Array.isArray(v) || v instanceof Uint8Array) {\n            v = Buffer.from(v);\n        }\n        else if (typeof v === 'string') {\n            if (ethjsUtil.isHexString(v)) {\n                v = Buffer.from(ethjsUtil.padToEven(ethjsUtil.stripHexPrefix(v)), 'hex');\n            }\n            else {\n                throw new Error(\"Cannot convert string to buffer. toBuffer only supports 0x-prefixed hex strings and this string was given: \" + v);\n            }\n        }\n        else if (typeof v === 'number') {\n            v = ethjsUtil.intToBuffer(v);\n        }\n        else if (v === null || v === undefined) {\n            v = Buffer.allocUnsafe(0);\n        }\n        else if (BN.isBN(v)) {\n            v = v.toArrayLike(Buffer);\n        }\n        else if (v.toArray) {\n            // converts a BN to a Buffer\n            v = Buffer.from(v.toArray());\n        }\n        else {\n            throw new Error('invalid type');\n        }\n    }\n    return v;\n};\n/**\n * Converts a `Buffer` to a `Number`.\n * @param buf `Buffer` object to convert\n * @throws If the input number exceeds 53 bits.\n */\nexports.bufferToInt = function (buf) {\n    return new BN(exports.toBuffer(buf)).toNumber();\n};\n/**\n * Converts a `Buffer` into a `0x`-prefixed hex `String`.\n * @param buf `Buffer` object to convert\n */\nexports.bufferToHex = function (buf) {\n    buf = exports.toBuffer(buf);\n    return '0x' + buf.toString('hex');\n};\n/**\n * Interprets a `Buffer` as a signed integer and returns a `BN`. Assumes 256-bit numbers.\n * @param num Signed integer value\n */\nexports.fromSigned = function (num) {\n    return new BN(num).fromTwos(256);\n};\n/**\n * Converts a `BN` to an unsigned integer and returns it as a `Buffer`. Assumes 256-bit numbers.\n * @param num\n */\nexports.toUnsigned = function (num) {\n    return Buffer.from(num.toTwos(256).toArray());\n};\n/**\n * Adds \"0x\" to a given `String` if it does not already start with \"0x\".\n */\nexports.addHexPrefix = function (str) {\n    if (typeof str !== 'string') {\n        return str;\n    }\n    return ethjsUtil.isHexPrefixed(str) ? str : '0x' + str;\n};\n/**\n * Converts a `Buffer` or `Array` to JSON.\n * @param ba (Buffer|Array)\n * @return (Array|String|null)\n */\nexports.baToJSON = function (ba) {\n    if (Buffer.isBuffer(ba)) {\n        return \"0x\" + ba.toString('hex');\n    }\n    else if (ba instanceof Array) {\n        var array = [];\n        for (var i = 0; i < ba.length; i++) {\n            array.push(exports.baToJSON(ba[i]));\n        }\n        return array;\n    }\n};\n//# sourceMappingURL=bytes.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.importPublic = exports.privateToPublic = exports.privateToAddress = exports.publicToAddress = exports.pubToAddress = exports.isValidPublic = exports.isValidPrivate = exports.generateAddress2 = exports.generateAddress = exports.isValidChecksumAddress = exports.toChecksumAddress = exports.isZeroAddress = exports.isValidAddress = exports.zeroAddress = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\nvar _a = require('ethereum-cryptography/secp256k1'), privateKeyVerify = _a.privateKeyVerify, publicKeyCreate = _a.publicKeyCreate, publicKeyVerify = _a.publicKeyVerify, publicKeyConvert = _a.publicKeyConvert;\nvar assert = require(\"assert\");\nvar BN = require(\"bn.js\");\nvar bytes_1 = require(\"./bytes\");\nvar hash_1 = require(\"./hash\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Returns a zero address.\n */\nexports.zeroAddress = function () {\n    var addressLength = 20;\n    var addr = bytes_1.zeros(addressLength);\n    return bytes_1.bufferToHex(addr);\n};\n/**\n * Checks if the address is a valid. Accepts checksummed addresses too.\n */\nexports.isValidAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    return /^0x[0-9a-fA-F]{40}$/.test(hexAddress);\n};\n/**\n * Checks if a given address is a zero address.\n */\nexports.isZeroAddress = function (hexAddress) {\n    helpers_1.assertIsHexString(hexAddress);\n    var zeroAddr = exports.zeroAddress();\n    return zeroAddr === hexAddress;\n};\n/**\n * Returns a checksummed address.\n *\n * If a eip1191ChainId is provided, the chainId will be included in the checksum calculation. This\n * has the effect of checksummed addresses for one chain having invalid checksums for others.\n * For more details, consult EIP-1191.\n *\n * WARNING: Checksums with and without the chainId will differ. As of 2019-06-26, the most commonly\n * used variation in Ethereum was without the chainId. This may change in the future.\n */\nexports.toChecksumAddress = function (hexAddress, eip1191ChainId) {\n    helpers_1.assertIsHexString(hexAddress);\n    var address = ethjsUtil.stripHexPrefix(hexAddress).toLowerCase();\n    var prefix = eip1191ChainId !== undefined ? eip1191ChainId.toString() + '0x' : '';\n    var hash = hash_1.keccakFromString(prefix + address).toString('hex');\n    var ret = '0x';\n    for (var i = 0; i < address.length; i++) {\n        if (parseInt(hash[i], 16) >= 8) {\n            ret += address[i].toUpperCase();\n        }\n        else {\n            ret += address[i];\n        }\n    }\n    return ret;\n};\n/**\n * Checks if the address is a valid checksummed address.\n *\n * See toChecksumAddress' documentation for details about the eip1191ChainId parameter.\n */\nexports.isValidChecksumAddress = function (hexAddress, eip1191ChainId) {\n    return exports.isValidAddress(hexAddress) && exports.toChecksumAddress(hexAddress, eip1191ChainId) === hexAddress;\n};\n/**\n * Generates an address of a newly created contract.\n * @param from The address which is creating this new address\n * @param nonce The nonce of the from account\n */\nexports.generateAddress = function (from, nonce) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(nonce);\n    var nonceBN = new BN(nonce);\n    if (nonceBN.isZero()) {\n        // in RLP we want to encode null in the case of zero nonce\n        // read the RLP documentation for an answer if you dare\n        return hash_1.rlphash([from, null]).slice(-20);\n    }\n    // Only take the lower 160bits of the hash\n    return hash_1.rlphash([from, Buffer.from(nonceBN.toArray())]).slice(-20);\n};\n/**\n * Generates an address for a contract created using CREATE2.\n * @param from The address which is creating this new address\n * @param salt A salt\n * @param initCode The init code of the contract being created\n */\nexports.generateAddress2 = function (from, salt, initCode) {\n    helpers_1.assertIsBuffer(from);\n    helpers_1.assertIsBuffer(salt);\n    helpers_1.assertIsBuffer(initCode);\n    assert(from.length === 20);\n    assert(salt.length === 32);\n    var address = hash_1.keccak256(Buffer.concat([Buffer.from('ff', 'hex'), from, salt, hash_1.keccak256(initCode)]));\n    return address.slice(-20);\n};\n/**\n * Checks if the private key satisfies the rules of the curve secp256k1.\n */\nexports.isValidPrivate = function (privateKey) {\n    return privateKeyVerify(privateKey);\n};\n/**\n * Checks if the public key satisfies the rules of the curve secp256k1\n * and the requirements of Ethereum.\n * @param publicKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.isValidPublic = function (publicKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length === 64) {\n        // Convert to SEC1 for secp256k1\n        return publicKeyVerify(Buffer.concat([Buffer.from([4]), publicKey]));\n    }\n    if (!sanitize) {\n        return false;\n    }\n    return publicKeyVerify(publicKey);\n};\n/**\n * Returns the ethereum address of a given public key.\n * Accepts \"Ethereum public keys\" and SEC1 encoded keys.\n * @param pubKey The two points of an uncompressed key, unless sanitize is enabled\n * @param sanitize Accept public keys in other formats\n */\nexports.pubToAddress = function (pubKey, sanitize) {\n    if (sanitize === void 0) { sanitize = false; }\n    helpers_1.assertIsBuffer(pubKey);\n    if (sanitize && pubKey.length !== 64) {\n        pubKey = Buffer.from(publicKeyConvert(pubKey, false).slice(1));\n    }\n    assert(pubKey.length === 64);\n    // Only take the lower 160bits of the hash\n    return hash_1.keccak(pubKey).slice(-20);\n};\nexports.publicToAddress = exports.pubToAddress;\n/**\n * Returns the ethereum address of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToAddress = function (privateKey) {\n    return exports.publicToAddress(exports.privateToPublic(privateKey));\n};\n/**\n * Returns the ethereum public key of a given private key.\n * @param privateKey A private key must be 256 bits wide\n */\nexports.privateToPublic = function (privateKey) {\n    helpers_1.assertIsBuffer(privateKey);\n    // skip the type flag and use the X, Y points\n    return Buffer.from(publicKeyCreate(privateKey, false)).slice(1);\n};\n/**\n * Converts a public key to the Ethereum format.\n */\nexports.importPublic = function (publicKey) {\n    helpers_1.assertIsBuffer(publicKey);\n    if (publicKey.length !== 64) {\n        publicKey = Buffer.from(publicKeyConvert(publicKey, false).slice(1));\n    }\n    return publicKey;\n};\n//# sourceMappingURL=account.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.KECCAK256_RLP = exports.KECCAK256_RLP_S = exports.KECCAK256_RLP_ARRAY = exports.KECCAK256_RLP_ARRAY_S = exports.KECCAK256_NULL = exports.KECCAK256_NULL_S = exports.TWO_POW256 = exports.MAX_INTEGER = void 0;\nvar Buffer = require('buffer').Buffer;\nvar BN = require(\"bn.js\");\n/**\n * The max integer that this VM can handle\n */\nexports.MAX_INTEGER = new BN('ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff', 16);\n/**\n * 2^256\n */\nexports.TWO_POW256 = new BN('10000000000000000000000000000000000000000000000000000000000000000', 16);\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL_S = 'c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470';\n/**\n * Keccak-256 hash of null\n */\nexports.KECCAK256_NULL = Buffer.from(exports.KECCAK256_NULL_S, 'hex');\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY_S = '1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347';\n/**\n * Keccak-256 of an RLP of an empty array\n */\nexports.KECCAK256_RLP_ARRAY = Buffer.from(exports.KECCAK256_RLP_ARRAY_S, 'hex');\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP_S = '56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421';\n/**\n * Keccak-256 hash of the RLP of null\n */\nexports.KECCAK256_RLP = Buffer.from(exports.KECCAK256_RLP_S, 'hex');\n//# sourceMappingURL=constants.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.assertIsString = exports.assertIsArray = exports.assertIsBuffer = exports.assertIsHexString = void 0;\nvar ethjsUtil = require(\"ethjs-util\");\n/**\n * Throws if a string is not hex prefixed\n * @param {string} input string to check hex prefix of\n */\nexports.assertIsHexString = function (input) {\n    if (!ethjsUtil.isHexString(input)) {\n        var msg = \"This method only supports 0x-prefixed hex strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a buffer\n * @param {Buffer} input value to check\n */\nexports.assertIsBuffer = function (input) {\n    if (!Buffer.isBuffer(input)) {\n        var msg = \"This method only supports Buffer but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not an array\n * @param {number[]} input value to check\n */\nexports.assertIsArray = function (input) {\n    if (!Array.isArray(input)) {\n        var msg = \"This method only supports number arrays but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n/**\n * Throws if input is not a string\n * @param {string} input value to check\n */\nexports.assertIsString = function (input) {\n    if (typeof input !== 'string') {\n        var msg = \"This method only supports strings but input was: \" + input;\n        throw new Error(msg);\n    }\n};\n//# sourceMappingURL=helpers.js.map"],"sourceRoot":""}