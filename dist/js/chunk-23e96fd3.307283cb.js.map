{"version":3,"sources":["webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/lib/index.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/index.js","webpack:///./node_modules/ethereum-cryptography/secp256k1.js","webpack:///./node_modules/ethereum-cryptography/random.js","webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/lib/elliptic.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/js.js","webpack:///./node_modules/ethereum-cryptography/hash-utils.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/secp256k1/elliptic.js","webpack:///./node_modules/ethereum-cryptography/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/keccak-state-unroll.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/keccak.js","webpack:///./node_modules/ethereum-cryptography/node_modules/keccak/lib/api/shake.js"],"names":["errors","IMPOSSIBLE_CASE","TWEAK_ADD","TWEAK_MUL","CONTEXT_RANDOMIZE_UNKNOW","SECKEY_INVALID","PUBKEY_PARSE","PUBKEY_SERIALIZE","PUBKEY_COMBINE","SIG_PARSE","SIGN","RECOVER","ECDH","assert","cond","msg","Error","isUint8Array","name","value","length","Uint8Array","undefined","Array","isArray","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","len","Object","prototype","toString","call","slice","module","exports","secp256k1","seed","contextRandomize","seckey","privateKeyVerify","privateKeyNegate","tweak","privateKeyTweakAdd","privateKeyTweakMul","pubkey","publicKeyVerify","compressed","publicKeyCreate","publicKeyConvert","publicKeyNegate","pubkeys","publicKeyCombine","publicKeyTweakAdd","publicKeyTweakMul","sig","signatureNormalize","obj","outputlen","signatureExport","signatureImport","msg32","options","data","noncefn","signature","recid","ecdsaSign","ecdsaVerify","ecdsaRecover","hashfn","xbuf","ybuf","ecdh","createKeccak","createShake","KeccakState","Keccak","Shake","algorithm","hash","toLowerCase","__awaiter","this","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","__generator","body","f","y","t","g","_","label","sent","trys","ops","verb","Symbol","iterator","n","v","op","TypeError","pop","push","__export","m","p","hasOwnProperty","defineProperty","secp256k1_1","random_1","SECP256K1_PRIVATE_KEY_SIZE","createPrivateKey","pk","_a","getRandomBytes","createPrivateKeySync","getRandomBytesSync","randombytes","bytes","err","resp","EC","ec","ecparams","curve","BN","constructor","loadCompressedPublicKey","first","x","cmp","toRed","red","redSqr","redIMul","redIAdd","b","redSqrt","isOdd","redNeg","keyPair","pub","loadUncompressedPublicKey","x3","redISub","isZero","loadPublicKey","subarray","savePublicKey","point","encode","i","bn","negate","sub","umod","toArrayLike","set","iadd","isub","tweaked","imul","pair","keyFromPrivate","getPublic","pairs","add","isInfinity","mul","r","s","nh","sigR","sigS","lenR","posR","lenS","posS","message","_noncefn","counter","nonce","isValid","d","sign","canonical","k","pers","recoveryParam","sigObj","sigr","sigs","verify","recoverPubKey","scalar","sha256","update","digest","getX","toArray","getY","createHashFunction","hashConstructor","Buffer","from","state","blockSize","count","squeezing","initialize","rate","capacity","absorb","keccakState","p1600","absorbLastFewBits","bits","squeeze","alloc","copy","dest","hash_utils_1","createKeccakHash","keccak224","keccak256","keccak384","keccak512","P1600_ROUND_CONSTANTS","round","lo0","hi0","lo1","hi1","lo2","hi2","lo3","hi3","lo4","hi4","lo","hi","t1slo0","t1shi0","t1slo5","t1shi5","t1slo10","t1shi10","t1slo15","t1shi15","t1slo20","t1shi20","t1slo1","t1shi1","t1slo6","t1shi6","t1slo11","t1shi11","t1slo16","t1shi16","t1slo21","t1shi21","t1slo2","t1shi2","t1slo7","t1shi7","t1slo12","t1shi12","t1slo17","t1shi17","t1slo22","t1shi22","t1slo3","t1shi3","t1slo8","t1shi8","t1slo13","t1shi13","t1slo18","t1shi18","t1slo23","t1shi23","t1slo4","t1shi4","t1slo9","t1shi9","t1slo14","t1shi14","t1slo19","t1shi19","t1slo24","t1shi24","t2slo0","t2shi0","t2slo16","t2shi16","t2slo7","t2shi7","t2slo23","t2shi23","t2slo14","t2shi14","t2slo10","t2shi10","t2slo1","t2shi1","t2slo17","t2shi17","t2slo8","t2shi8","t2slo24","t2shi24","t2slo20","t2shi20","t2slo11","t2shi11","t2slo2","t2shi2","t2slo18","t2shi18","t2slo9","t2shi9","t2slo5","t2shi5","t2slo21","t2shi21","t2slo12","t2shi12","t2slo3","t2shi3","t2slo19","t2shi19","t2slo15","t2shi15","t2slo6","t2shi6","t2slo22","t2shi22","t2slo13","t2shi13","t2slo4","t2shi4","Transform","delimitedSuffix","hashBitLength","super","_rate","_capacity","_delimitedSuffix","_hashBitLength","_options","_state","_finalized","chunk","encoding","callback","error","isBuffer","_resetState","clone","size","dataByteLength"],"mappings":"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","file":"js/chunk-23e96fd3.307283cb.js","sourcesContent":["const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","const createKeccak = require('./keccak')\nconst createShake = require('./shake')\n\nmodule.exports = function (KeccakState) {\n  const Keccak = createKeccak(KeccakState)\n  const Shake = createShake(KeccakState)\n\n  return function (algorithm, options) {\n    const hash = typeof algorithm === 'string' ? algorithm.toLowerCase() : algorithm\n    switch (hash) {\n      case 'keccak224': return new Keccak(1152, 448, null, 224, options)\n      case 'keccak256': return new Keccak(1088, 512, null, 256, options)\n      case 'keccak384': return new Keccak(832, 768, null, 384, options)\n      case 'keccak512': return new Keccak(576, 1024, null, 512, options)\n\n      case 'sha3-224': return new Keccak(1152, 448, 0x06, 224, options)\n      case 'sha3-256': return new Keccak(1088, 512, 0x06, 256, options)\n      case 'sha3-384': return new Keccak(832, 768, 0x06, 384, options)\n      case 'sha3-512': return new Keccak(576, 1024, 0x06, 512, options)\n\n      case 'shake128': return new Shake(1344, 256, 0x1f, options)\n      case 'shake256': return new Shake(1088, 512, 0x1f, options)\n\n      default: throw new Error('Invald algorithm: ' + algorithm)\n    }\n  }\n}\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nvar __generator = (this && this.__generator) || function (thisArg, body) {\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n    function verb(n) { return function (v) { return step([n, v]); }; }\n    function step(op) {\n        if (f) throw new TypeError(\"Generator is already executing.\");\n        while (_) try {\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n            if (y = 0, t) op = [op[0] & 2, t.value];\n            switch (op[0]) {\n                case 0: case 1: t = op; break;\n                case 4: _.label++; return { value: op[1], done: false };\n                case 5: _.label++; y = op[1]; op = [0]; continue;\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\n                default:\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                    if (t[2]) _.ops.pop();\n                    _.trys.pop(); continue;\n            }\n            op = body.call(thisArg, _);\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n    }\n};\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar secp256k1_1 = require(\"secp256k1\");\nvar random_1 = require(\"./random\");\nvar SECP256K1_PRIVATE_KEY_SIZE = 32;\nfunction createPrivateKey() {\n    return __awaiter(this, void 0, void 0, function () {\n        var pk;\n        return __generator(this, function (_a) {\n            switch (_a.label) {\n                case 0:\n                    if (!true) return [3 /*break*/, 2];\n                    return [4 /*yield*/, random_1.getRandomBytes(SECP256K1_PRIVATE_KEY_SIZE)];\n                case 1:\n                    pk = _a.sent();\n                    if (secp256k1_1.privateKeyVerify(pk)) {\n                        return [2 /*return*/, pk];\n                    }\n                    return [3 /*break*/, 0];\n                case 2: return [2 /*return*/];\n            }\n        });\n    });\n}\nexports.createPrivateKey = createPrivateKey;\nfunction createPrivateKeySync() {\n    while (true) {\n        var pk = random_1.getRandomBytesSync(SECP256K1_PRIVATE_KEY_SIZE);\n        if (secp256k1_1.privateKeyVerify(pk)) {\n            return pk;\n        }\n    }\n}\nexports.createPrivateKeySync = createPrivateKeySync;\n__export(require(\"secp256k1\"));\n//# sourceMappingURL=secp256k1.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar randombytes = require(\"randombytes\");\nfunction getRandomBytes(bytes) {\n    return new Promise(function (resolve, reject) {\n        randombytes(bytes, function (err, resp) {\n            if (err) {\n                reject(err);\n                return;\n            }\n            resolve(resp);\n        });\n    });\n}\nexports.getRandomBytes = getRandomBytes;\nfunction getRandomBytesSync(bytes) {\n    return randombytes(bytes);\n}\nexports.getRandomBytesSync = getRandomBytesSync;\n//# sourceMappingURL=random.js.map","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n","module.exports = require('./lib/api')(require('./lib/keccak'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction createHashFunction(hashConstructor) {\n    return function (msg) {\n        var hash = hashConstructor();\n        hash.update(msg);\n        return Buffer.from(hash.digest());\n    };\n}\nexports.createHashFunction = createHashFunction;\n//# sourceMappingURL=hash-utils.js.map","const keccakState = require('./keccak-state-unroll')\n\nfunction Keccak () {\n  // much faster than `new Array(50)`\n  this.state = [\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0,\n    0, 0, 0, 0, 0\n  ]\n\n  this.blockSize = null\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.initialize = function (rate, capacity) {\n  for (let i = 0; i < 50; ++i) this.state[i] = 0\n  this.blockSize = rate / 8\n  this.count = 0\n  this.squeezing = false\n}\n\nKeccak.prototype.absorb = function (data) {\n  for (let i = 0; i < data.length; ++i) {\n    this.state[~~(this.count / 4)] ^= data[i] << (8 * (this.count % 4))\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n}\n\nKeccak.prototype.absorbLastFewBits = function (bits) {\n  this.state[~~(this.count / 4)] ^= bits << (8 * (this.count % 4))\n  if ((bits & 0x80) !== 0 && this.count === (this.blockSize - 1)) keccakState.p1600(this.state)\n  this.state[~~((this.blockSize - 1) / 4)] ^= 0x80 << (8 * ((this.blockSize - 1) % 4))\n  keccakState.p1600(this.state)\n  this.count = 0\n  this.squeezing = true\n}\n\nKeccak.prototype.squeeze = function (length) {\n  if (!this.squeezing) this.absorbLastFewBits(0x01)\n\n  const output = Buffer.alloc(length)\n  for (let i = 0; i < length; ++i) {\n    output[i] = (this.state[~~(this.count / 4)] >>> (8 * (this.count % 4))) & 0xff\n    this.count += 1\n    if (this.count === this.blockSize) {\n      keccakState.p1600(this.state)\n      this.count = 0\n    }\n  }\n\n  return output\n}\n\nKeccak.prototype.copy = function (dest) {\n  for (let i = 0; i < 50; ++i) dest.state[i] = this.state[i]\n  dest.blockSize = this.blockSize\n  dest.count = this.count\n  dest.squeezing = this.squeezing\n}\n\nmodule.exports = Keccak\n","module.exports = require('./lib')(require('./lib/elliptic'))\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar hash_utils_1 = require(\"./hash-utils\");\nvar createKeccakHash = require(\"keccak\");\nexports.keccak224 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak224\");\n});\nexports.keccak256 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak256\");\n});\nexports.keccak384 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak384\");\n});\nexports.keccak512 = hash_utils_1.createHashFunction(function () {\n    return createKeccakHash(\"keccak512\");\n});\n//# sourceMappingURL=keccak.js.map","const P1600_ROUND_CONSTANTS = [1, 0, 32898, 0, 32906, 2147483648, 2147516416, 2147483648, 32907, 0, 2147483649, 0, 2147516545, 2147483648, 32777, 2147483648, 138, 0, 136, 0, 2147516425, 0, 2147483658, 0, 2147516555, 0, 139, 2147483648, 32905, 2147483648, 32771, 2147483648, 32770, 2147483648, 128, 2147483648, 32778, 0, 2147483658, 2147483648, 2147516545, 2147483648, 32896, 2147483648, 2147483649, 0, 2147516424, 2147483648]\n\nexports.p1600 = function (s) {\n  for (let round = 0; round < 24; ++round) {\n    // theta\n    const lo0 = s[0] ^ s[10] ^ s[20] ^ s[30] ^ s[40]\n    const hi0 = s[1] ^ s[11] ^ s[21] ^ s[31] ^ s[41]\n    const lo1 = s[2] ^ s[12] ^ s[22] ^ s[32] ^ s[42]\n    const hi1 = s[3] ^ s[13] ^ s[23] ^ s[33] ^ s[43]\n    const lo2 = s[4] ^ s[14] ^ s[24] ^ s[34] ^ s[44]\n    const hi2 = s[5] ^ s[15] ^ s[25] ^ s[35] ^ s[45]\n    const lo3 = s[6] ^ s[16] ^ s[26] ^ s[36] ^ s[46]\n    const hi3 = s[7] ^ s[17] ^ s[27] ^ s[37] ^ s[47]\n    const lo4 = s[8] ^ s[18] ^ s[28] ^ s[38] ^ s[48]\n    const hi4 = s[9] ^ s[19] ^ s[29] ^ s[39] ^ s[49]\n\n    let lo = lo4 ^ (lo1 << 1 | hi1 >>> 31)\n    let hi = hi4 ^ (hi1 << 1 | lo1 >>> 31)\n    const t1slo0 = s[0] ^ lo\n    const t1shi0 = s[1] ^ hi\n    const t1slo5 = s[10] ^ lo\n    const t1shi5 = s[11] ^ hi\n    const t1slo10 = s[20] ^ lo\n    const t1shi10 = s[21] ^ hi\n    const t1slo15 = s[30] ^ lo\n    const t1shi15 = s[31] ^ hi\n    const t1slo20 = s[40] ^ lo\n    const t1shi20 = s[41] ^ hi\n    lo = lo0 ^ (lo2 << 1 | hi2 >>> 31)\n    hi = hi0 ^ (hi2 << 1 | lo2 >>> 31)\n    const t1slo1 = s[2] ^ lo\n    const t1shi1 = s[3] ^ hi\n    const t1slo6 = s[12] ^ lo\n    const t1shi6 = s[13] ^ hi\n    const t1slo11 = s[22] ^ lo\n    const t1shi11 = s[23] ^ hi\n    const t1slo16 = s[32] ^ lo\n    const t1shi16 = s[33] ^ hi\n    const t1slo21 = s[42] ^ lo\n    const t1shi21 = s[43] ^ hi\n    lo = lo1 ^ (lo3 << 1 | hi3 >>> 31)\n    hi = hi1 ^ (hi3 << 1 | lo3 >>> 31)\n    const t1slo2 = s[4] ^ lo\n    const t1shi2 = s[5] ^ hi\n    const t1slo7 = s[14] ^ lo\n    const t1shi7 = s[15] ^ hi\n    const t1slo12 = s[24] ^ lo\n    const t1shi12 = s[25] ^ hi\n    const t1slo17 = s[34] ^ lo\n    const t1shi17 = s[35] ^ hi\n    const t1slo22 = s[44] ^ lo\n    const t1shi22 = s[45] ^ hi\n    lo = lo2 ^ (lo4 << 1 | hi4 >>> 31)\n    hi = hi2 ^ (hi4 << 1 | lo4 >>> 31)\n    const t1slo3 = s[6] ^ lo\n    const t1shi3 = s[7] ^ hi\n    const t1slo8 = s[16] ^ lo\n    const t1shi8 = s[17] ^ hi\n    const t1slo13 = s[26] ^ lo\n    const t1shi13 = s[27] ^ hi\n    const t1slo18 = s[36] ^ lo\n    const t1shi18 = s[37] ^ hi\n    const t1slo23 = s[46] ^ lo\n    const t1shi23 = s[47] ^ hi\n    lo = lo3 ^ (lo0 << 1 | hi0 >>> 31)\n    hi = hi3 ^ (hi0 << 1 | lo0 >>> 31)\n    const t1slo4 = s[8] ^ lo\n    const t1shi4 = s[9] ^ hi\n    const t1slo9 = s[18] ^ lo\n    const t1shi9 = s[19] ^ hi\n    const t1slo14 = s[28] ^ lo\n    const t1shi14 = s[29] ^ hi\n    const t1slo19 = s[38] ^ lo\n    const t1shi19 = s[39] ^ hi\n    const t1slo24 = s[48] ^ lo\n    const t1shi24 = s[49] ^ hi\n\n    // rho & pi\n    const t2slo0 = t1slo0\n    const t2shi0 = t1shi0\n    const t2slo16 = (t1shi5 << 4 | t1slo5 >>> 28)\n    const t2shi16 = (t1slo5 << 4 | t1shi5 >>> 28)\n    const t2slo7 = (t1slo10 << 3 | t1shi10 >>> 29)\n    const t2shi7 = (t1shi10 << 3 | t1slo10 >>> 29)\n    const t2slo23 = (t1shi15 << 9 | t1slo15 >>> 23)\n    const t2shi23 = (t1slo15 << 9 | t1shi15 >>> 23)\n    const t2slo14 = (t1slo20 << 18 | t1shi20 >>> 14)\n    const t2shi14 = (t1shi20 << 18 | t1slo20 >>> 14)\n    const t2slo10 = (t1slo1 << 1 | t1shi1 >>> 31)\n    const t2shi10 = (t1shi1 << 1 | t1slo1 >>> 31)\n    const t2slo1 = (t1shi6 << 12 | t1slo6 >>> 20)\n    const t2shi1 = (t1slo6 << 12 | t1shi6 >>> 20)\n    const t2slo17 = (t1slo11 << 10 | t1shi11 >>> 22)\n    const t2shi17 = (t1shi11 << 10 | t1slo11 >>> 22)\n    const t2slo8 = (t1shi16 << 13 | t1slo16 >>> 19)\n    const t2shi8 = (t1slo16 << 13 | t1shi16 >>> 19)\n    const t2slo24 = (t1slo21 << 2 | t1shi21 >>> 30)\n    const t2shi24 = (t1shi21 << 2 | t1slo21 >>> 30)\n    const t2slo20 = (t1shi2 << 30 | t1slo2 >>> 2)\n    const t2shi20 = (t1slo2 << 30 | t1shi2 >>> 2)\n    const t2slo11 = (t1slo7 << 6 | t1shi7 >>> 26)\n    const t2shi11 = (t1shi7 << 6 | t1slo7 >>> 26)\n    const t2slo2 = (t1shi12 << 11 | t1slo12 >>> 21)\n    const t2shi2 = (t1slo12 << 11 | t1shi12 >>> 21)\n    const t2slo18 = (t1slo17 << 15 | t1shi17 >>> 17)\n    const t2shi18 = (t1shi17 << 15 | t1slo17 >>> 17)\n    const t2slo9 = (t1shi22 << 29 | t1slo22 >>> 3)\n    const t2shi9 = (t1slo22 << 29 | t1shi22 >>> 3)\n    const t2slo5 = (t1slo3 << 28 | t1shi3 >>> 4)\n    const t2shi5 = (t1shi3 << 28 | t1slo3 >>> 4)\n    const t2slo21 = (t1shi8 << 23 | t1slo8 >>> 9)\n    const t2shi21 = (t1slo8 << 23 | t1shi8 >>> 9)\n    const t2slo12 = (t1slo13 << 25 | t1shi13 >>> 7)\n    const t2shi12 = (t1shi13 << 25 | t1slo13 >>> 7)\n    const t2slo3 = (t1slo18 << 21 | t1shi18 >>> 11)\n    const t2shi3 = (t1shi18 << 21 | t1slo18 >>> 11)\n    const t2slo19 = (t1shi23 << 24 | t1slo23 >>> 8)\n    const t2shi19 = (t1slo23 << 24 | t1shi23 >>> 8)\n    const t2slo15 = (t1slo4 << 27 | t1shi4 >>> 5)\n    const t2shi15 = (t1shi4 << 27 | t1slo4 >>> 5)\n    const t2slo6 = (t1slo9 << 20 | t1shi9 >>> 12)\n    const t2shi6 = (t1shi9 << 20 | t1slo9 >>> 12)\n    const t2slo22 = (t1shi14 << 7 | t1slo14 >>> 25)\n    const t2shi22 = (t1slo14 << 7 | t1shi14 >>> 25)\n    const t2slo13 = (t1slo19 << 8 | t1shi19 >>> 24)\n    const t2shi13 = (t1shi19 << 8 | t1slo19 >>> 24)\n    const t2slo4 = (t1slo24 << 14 | t1shi24 >>> 18)\n    const t2shi4 = (t1shi24 << 14 | t1slo24 >>> 18)\n\n    // chi\n    s[0] = t2slo0 ^ (~t2slo1 & t2slo2)\n    s[1] = t2shi0 ^ (~t2shi1 & t2shi2)\n    s[10] = t2slo5 ^ (~t2slo6 & t2slo7)\n    s[11] = t2shi5 ^ (~t2shi6 & t2shi7)\n    s[20] = t2slo10 ^ (~t2slo11 & t2slo12)\n    s[21] = t2shi10 ^ (~t2shi11 & t2shi12)\n    s[30] = t2slo15 ^ (~t2slo16 & t2slo17)\n    s[31] = t2shi15 ^ (~t2shi16 & t2shi17)\n    s[40] = t2slo20 ^ (~t2slo21 & t2slo22)\n    s[41] = t2shi20 ^ (~t2shi21 & t2shi22)\n    s[2] = t2slo1 ^ (~t2slo2 & t2slo3)\n    s[3] = t2shi1 ^ (~t2shi2 & t2shi3)\n    s[12] = t2slo6 ^ (~t2slo7 & t2slo8)\n    s[13] = t2shi6 ^ (~t2shi7 & t2shi8)\n    s[22] = t2slo11 ^ (~t2slo12 & t2slo13)\n    s[23] = t2shi11 ^ (~t2shi12 & t2shi13)\n    s[32] = t2slo16 ^ (~t2slo17 & t2slo18)\n    s[33] = t2shi16 ^ (~t2shi17 & t2shi18)\n    s[42] = t2slo21 ^ (~t2slo22 & t2slo23)\n    s[43] = t2shi21 ^ (~t2shi22 & t2shi23)\n    s[4] = t2slo2 ^ (~t2slo3 & t2slo4)\n    s[5] = t2shi2 ^ (~t2shi3 & t2shi4)\n    s[14] = t2slo7 ^ (~t2slo8 & t2slo9)\n    s[15] = t2shi7 ^ (~t2shi8 & t2shi9)\n    s[24] = t2slo12 ^ (~t2slo13 & t2slo14)\n    s[25] = t2shi12 ^ (~t2shi13 & t2shi14)\n    s[34] = t2slo17 ^ (~t2slo18 & t2slo19)\n    s[35] = t2shi17 ^ (~t2shi18 & t2shi19)\n    s[44] = t2slo22 ^ (~t2slo23 & t2slo24)\n    s[45] = t2shi22 ^ (~t2shi23 & t2shi24)\n    s[6] = t2slo3 ^ (~t2slo4 & t2slo0)\n    s[7] = t2shi3 ^ (~t2shi4 & t2shi0)\n    s[16] = t2slo8 ^ (~t2slo9 & t2slo5)\n    s[17] = t2shi8 ^ (~t2shi9 & t2shi5)\n    s[26] = t2slo13 ^ (~t2slo14 & t2slo10)\n    s[27] = t2shi13 ^ (~t2shi14 & t2shi10)\n    s[36] = t2slo18 ^ (~t2slo19 & t2slo15)\n    s[37] = t2shi18 ^ (~t2shi19 & t2shi15)\n    s[46] = t2slo23 ^ (~t2slo24 & t2slo20)\n    s[47] = t2shi23 ^ (~t2shi24 & t2shi20)\n    s[8] = t2slo4 ^ (~t2slo0 & t2slo1)\n    s[9] = t2shi4 ^ (~t2shi0 & t2shi1)\n    s[18] = t2slo9 ^ (~t2slo5 & t2slo6)\n    s[19] = t2shi9 ^ (~t2shi5 & t2shi6)\n    s[28] = t2slo14 ^ (~t2slo10 & t2slo11)\n    s[29] = t2shi14 ^ (~t2shi10 & t2shi11)\n    s[38] = t2slo19 ^ (~t2slo15 & t2slo16)\n    s[39] = t2shi19 ^ (~t2shi15 & t2shi16)\n    s[48] = t2slo24 ^ (~t2slo20 & t2slo21)\n    s[49] = t2shi24 ^ (~t2shi20 & t2shi21)\n\n    // iota\n    s[0] ^= P1600_ROUND_CONSTANTS[round * 2]\n    s[1] ^= P1600_ROUND_CONSTANTS[round * 2 + 1]\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Keccak extends Transform {\n  constructor (rate, capacity, delimitedSuffix, hashBitLength, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._hashBitLength = hashBitLength\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush (callback) {\n    let error = null\n    try {\n      this.push(this.digest())\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Digest already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  digest (encoding) {\n    if (this._finalized) throw new Error('Digest already called')\n    this._finalized = true\n\n    if (this._delimitedSuffix) this._state.absorbLastFewBits(this._delimitedSuffix)\n    let digest = this._state.squeeze(this._hashBitLength / 8)\n    if (encoding !== undefined) digest = digest.toString(encoding)\n\n    this._resetState()\n\n    return digest\n  }\n\n  // remove result from memory\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  // because sometimes we need hash right now and little later\n  _clone () {\n    const clone = new Keccak(this._rate, this._capacity, this._delimitedSuffix, this._hashBitLength, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n","const { Transform } = require('stream')\n\nmodule.exports = (KeccakState) => class Shake extends Transform {\n  constructor (rate, capacity, delimitedSuffix, options) {\n    super(options)\n\n    this._rate = rate\n    this._capacity = capacity\n    this._delimitedSuffix = delimitedSuffix\n    this._options = options\n\n    this._state = new KeccakState()\n    this._state.initialize(rate, capacity)\n    this._finalized = false\n  }\n\n  _transform (chunk, encoding, callback) {\n    let error = null\n    try {\n      this.update(chunk, encoding)\n    } catch (err) {\n      error = err\n    }\n\n    callback(error)\n  }\n\n  _flush () {}\n\n  _read (size) {\n    this.push(this.squeeze(size))\n  }\n\n  update (data, encoding) {\n    if (!Buffer.isBuffer(data) && typeof data !== 'string') throw new TypeError('Data must be a string or a buffer')\n    if (this._finalized) throw new Error('Squeeze already called')\n    if (!Buffer.isBuffer(data)) data = Buffer.from(data, encoding)\n\n    this._state.absorb(data)\n\n    return this\n  }\n\n  squeeze (dataByteLength, encoding) {\n    if (!this._finalized) {\n      this._finalized = true\n      this._state.absorbLastFewBits(this._delimitedSuffix)\n    }\n\n    let data = this._state.squeeze(dataByteLength)\n    if (encoding !== undefined) data = data.toString(encoding)\n\n    return data\n  }\n\n  _resetState () {\n    this._state.initialize(this._rate, this._capacity)\n    return this\n  }\n\n  _clone () {\n    const clone = new Shake(this._rate, this._capacity, this._delimitedSuffix, this._options)\n    this._state.copy(clone._state)\n    clone._finalized = this._finalized\n\n    return clone\n  }\n}\n"],"sourceRoot":""}