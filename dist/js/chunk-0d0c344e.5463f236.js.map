{"version":3,"sources":["webpack:///./node_modules/bitcoin-address-validation/lib/index.esm.js","webpack:///./src/components/ren/Gateway.vue?eede","webpack:///src/components/ren/Gateway.vue","webpack:///./src/components/ren/Gateway.vue?11a3","webpack:///./src/components/ren/Gateway.vue","webpack:///./src/components/ren/Gateway.vue?5a90"],"names":["base58","sha256","payload","from","update","digest","addressTypes","0","type","network","validateBech32","address","decoded","decode","error","prefixesNetwork","bc","tb","bcrt","prefix","undefined","witnessVersion","words","data","fromWords","slice","length","bech32","validateBtcAddress","substr","version","readUInt8","checksum","body","expectedChecksum","equals","Object","assign","strictValidation","validated","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","on","set_max_balance","directives","name","rawName","value","currentPool","from_currency","expression","_s","maxSynthText","maxBalanceText","_m","style","backgroundColor","fromBgColor","attrs","disabled","domProps","$event","target","composing","fromInput","set_to_amount","includes","actualFromValue","_l","keys","currencies","currency","i","_obj","_q","class","getTokenIcon","_f","amountAfterBTC","swapInputs","publicPath","bgColor","toInputFormat","actualToValue","to_currency","toInputOriginal","toFixed","lessThanMinOrder","exchangeRate","exchangeRateOriginal","maxSlippage","customSlippageDisabled","customippageDisabled","maxInputSlippage","minOrderSize","Array","isArray","inf_approval","_i","$$a","$$el","$$c","checked","$$v","$$i","concat","estimateGas","gasPrice","ethPrice","checkAddress","swapDisabled","submit","staticRenderFns","currentAllowance","gt","maxAllowance","component"],"mappings":"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","file":"js/chunk-0d0c344e.5463f236.js","sourcesContent":["import baseX from 'base-x';\nimport bech32 from 'bech32';\nimport sha from 'sha.js';\nimport { Buffer } from 'buffer';\n\nconst base58 = baseX('123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz');\n\nconst sha256 = payload => Buffer.from(sha('sha256').update(payload).digest());\n\nconst addressTypes = {\n  0x00: {\n    type: 'p2pkh',\n    network: 'mainnet'\n  },\n\n  0x6f: {\n    type: 'p2pkh',\n    network: 'testnet'\n  },\n\n  0x05: {\n    type: 'p2sh',\n    network: 'mainnet'\n  },\n\n  0xc4: {\n    type: 'p2sh',\n    network: 'testnet'\n  }\n};\n\nconst validateBech32 = (address) => {\n  let decoded;\n\n  try {\n    decoded = bech32.decode(address);\n  } catch (error) {\n    return false;\n  }\n\n  const prefixesNetwork = {\n    bc: 'mainnet',\n    tb: 'testnet',\n    bcrt: 'regtest'\n  };\n\n  const network = prefixesNetwork[decoded.prefix];\n\n  if (network === undefined) {\n    return false;\n  }\n\n  const witnessVersion = decoded.words[0];\n\n  if (witnessVersion < 0 || witnessVersion > 16) {\n    return false;\n  }\n\n  const data = bech32.fromWords(decoded.words.slice(1));\n\n  let type;\n\n  if (data.length === 20) {\n    type = 'p2wpkh';\n  } else if (data.length === 32) {\n    type = 'p2wsh';\n  }\n\n  return {\n    bech32: true,\n    network,\n    address,\n    type\n  };\n};\n\nconst validateBtcAddress = (address) => {\n  if (!address) {\n    return false;\n  }\n\n  let decoded;\n  const prefix = address.substr(0, 2);\n\n  if (prefix === 'bc' || prefix === 'tb') {\n    return validateBech32(address);\n  }\n\n  try {\n    decoded = base58.decode(address);\n  } catch (error) {\n    return false;\n  }\n\n  const { length } = decoded;\n\n  if (length !== 25) {\n    return false;\n  }\n\n  const version = decoded.readUInt8(0);\n\n  const checksum = decoded.slice(length - 4, length);\n  const body = decoded.slice(0, length - 4);\n\n  const expectedChecksum = sha256(sha256(body)).slice(0, 4);\n\n  if (!checksum.equals(expectedChecksum)) {\n    return false;\n  }\n\n  return addressTypes[version]\n    ? Object.assign({ address, bech32: false }, addressTypes[version])\n    : false;\n};\n\nconst strictValidation = (address, network) => {\n  const validated = validateBtcAddress(address);\n  if (!validated) return false;\n  if (network) {\n    if (validated.network !== network) return false;\n    return true;\n  }\n  return validated;\n};\n\nexport default strictValidation;\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"rengateway\"},[_c('div',{staticClass:\"exchange\"},[_c('div',{staticClass:\"exchangefields\"},[_c('div',{staticClass:\"flexbreak\"}),_c('fieldset',{staticClass:\"item\"},[_c('legend',[_vm._v(\"From:\")]),_c('div',{staticClass:\"maxbalance\",on:{\"click\":_vm.set_max_balance}},[_vm._v(\" Max: \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'sbtc' && _vm.from_currency == 2),expression:\"currentPool == 'sbtc' && from_currency == 2\"}]},[_vm._v(\" \"+_vm._s(_vm.maxSynthText)+\"/ \")]),_c('span',[_vm._v(_vm._s(_vm.maxBalanceText))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.susdWaitingPeriod),expression:\"susdWaitingPeriod\"}],staticClass:\"susd-waiting-period\"},[_vm._m(0)]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'sbtc' && _vm.from_currency == 2),expression:\"currentPool == 'sbtc' && from_currency == 2\"}],staticClass:\"tooltip\"},[_vm._v(\" [?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Max transferrable amount is \"+_vm._s(_vm.maxSynthText)+\". You can free the remaining balance by settling. \")])])]),_c('ul',[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.fromInput),expression:\"fromInput\"}],style:({backgroundColor: _vm.fromBgColor}),attrs:{\"type\":\"text\",\"id\":\"from_currency\",\"disabled\":_vm.disabled,\"name\":\"from_currency\",\"value\":\"0.00\"},domProps:{\"value\":(_vm.fromInput)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.fromInput=$event.target.value},_vm.set_to_amount]}}),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(['sbtc', 'ren'].includes(_vm.currentPool)),expression:\"['sbtc', 'ren'].includes(currentPool)\"}],staticClass:\"actualvalue\"},[_vm._v(\" ≈ \"+_vm._s(_vm.actualFromValue)+\"$ \")])]),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',{staticClass:\"coins\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.from_currency),expression:\"from_currency\"}],attrs:{\"type\":\"radio\",\"id\":'from_cur_'+i,\"name\":\"from_cur\"},domProps:{\"value\":i,\"checked\":_vm._q(_vm.from_currency,i)},on:{\"change\":function($event){_vm.from_currency=i}}}),_c('label',{attrs:{\"for\":'from_cur_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency)))])])])}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.from_currency == 0 && _vm.amountAfterBTC >= 0),expression:\"from_currency == 0 && amountAfterBTC >= 0\"}],staticClass:\"amount-after-fees\"},[_vm._v(\" Amount after renVM fees: \"+_vm._s(_vm.amountAfterBTC)+\" \")])],2)]),_c('fieldset',{staticClass:\"item iconcontainer\",on:{\"click\":_vm.swapInputs}},[_c('img',{attrs:{\"src\":_vm.publicPath + 'exchange-alt-solid.svg',\"id\":\"exchangeicon\"}})]),_c('fieldset',{staticClass:\"item\"},[_c('legend',[_vm._v(\"To:\")]),_vm._m(1),_c('ul',[_c('li',[_c('input',{style:({backgroundColor: _vm.bgColor}),attrs:{\"type\":\"text\",\"id\":\"to_currency\",\"name\":\"to_currency\",\"value\":\"0.00\",\"disabled\":\"\"},domProps:{\"value\":_vm.toInputFormat}}),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(['ren', 'sbtc'].includes(_vm.currentPool)),expression:\"['ren', 'sbtc'].includes(currentPool)\"}],staticClass:\"actualvalue\"},[_vm._v(\" ≈ \"+_vm._s(_vm.actualToValue)+\"$ \")])]),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',{staticClass:\"coins\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.to_currency),expression:\"to_currency\"}],attrs:{\"type\":\"radio\",\"id\":'to_cur_'+i,\"name\":\"to_cur\"},domProps:{\"value\":i,\"checked\":_vm._q(_vm.to_currency,i)},on:{\"change\":function($event){_vm.to_currency=i}}}),_c('label',{attrs:{\"for\":'to_cur_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency)))])])])}),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:([1,2].includes(_vm.from_currency) && _vm.to_currency == 0 && _vm.toInputOriginal >= 0),expression:\"[1,2].includes(from_currency) && to_currency == 0 && toInputOriginal >= 0\"}],staticClass:\"amount-after-fees\"},[_vm._v(\" Amount before renVM fees: \"+_vm._s(_vm.toInputOriginal.toFixed(8))+\" \")])],2)])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(!([1,2].includes(this.from_currency) && [1,2].includes(this.to_currency))),expression:\"!([1,2].includes(this.from_currency) && [1,2].includes(this.to_currency))\"}],staticClass:\"exchange-rate\"},[_vm._v(\"Exchange rate (including fees and renVM fee): \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.lessThanMinOrder),expression:\"!lessThanMinOrder\"}],attrs:{\"id\":\"exchange-rate\"}},[_vm._v(_vm._s(_vm.exchangeRate && _vm.exchangeRate.toFixed(4)))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.lessThanMinOrder),expression:\"lessThanMinOrder\"}]},[_vm._v(\"N/A\")])]),_c('p',{staticClass:\"exchange-rate\"},[_vm._v(\"Exchange rate (including fees): \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.lessThanMinOrder),expression:\"!lessThanMinOrder\"}],attrs:{\"id\":\"exchange-rate\"}},[_vm._v(_vm._s(_vm.exchangeRateOriginal && _vm.exchangeRateOriginal.toFixed(4)))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.lessThanMinOrder),expression:\"lessThanMinOrder\"}]},[_vm._v(\"N/A\")])]),_c('div',{attrs:{\"id\":\"max_slippage\"}},[_c('span',[_vm._v(\"Max slippage:\")]),_c('input',{attrs:{\"id\":\"slippage05\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"0.005\"},on:{\"click\":function($event){_vm.maxSlippage = 0.5; _vm.customSlippageDisabled = true}}}),_c('label',{attrs:{\"for\":\"slippage05\"}},[_vm._v(\"0.5%\")]),_c('input',{attrs:{\"id\":\"slippage1\",\"type\":\"radio\",\"name\":\"slippage\",\"checked\":\"\",\"value\":\"0.01\"},on:{\"click\":function($event){_vm.maxSlippage = 1; _vm.customSlippageDisabled = true}}}),_c('label',{attrs:{\"for\":\"slippage1\"}},[_vm._v(\"1%\")]),_c('input',{attrs:{\"id\":\"custom_slippage\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"-\"},on:{\"click\":function($event){_vm.customippageDisabled = false}}}),_c('label',{attrs:{\"for\":\"custom_slippage\"},on:{\"click\":function($event){_vm.customSlippageDisabled = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxInputSlippage),expression:\"maxInputSlippage\"}],attrs:{\"type\":\"text\",\"id\":\"custom_slippage_input\",\"disabled\":_vm.customSlippageDisabled,\"name\":\"custom_slippage_input\"},domProps:{\"value\":(_vm.maxInputSlippage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.maxInputSlippage=$event.target.value}}}),_vm._v(\" % \")])]),_c('gas-price'),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.lessThanMinOrder && _vm.from_currency == 0),expression:\"lessThanMinOrder && from_currency == 0\"}],staticClass:\"simple-error\"},[_vm._v(\" Minimum mint order size is \"+_vm._s((_vm.minOrderSize / 1e8).toFixed(8))+\" \")]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.lessThanMinOrder && _vm.from_currency == 1),expression:\"lessThanMinOrder && from_currency == 1\"}],staticClass:\"simple-error\"},[_vm._v(\" Minimum burn order size is \"+_vm._s((_vm.minOrderSize / 1e8 + 0.00000547).toFixed(8))+\" \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.from_currency == 0 && [1,2].includes(this.to_currency) || [1,2].includes(this.from_currency) && this.to_currency == 0),expression:\"this.from_currency == 0 && [1,2].includes(this.to_currency) || [1,2].includes(this.from_currency) && this.to_currency == 0\"}],staticClass:\"input address\"},[_c('label',{directives:[{name:\"show\",rawName:\"v-show\",value:([1,2].includes(this.from_currency) && this.to_currency == 0),expression:\"[1,2].includes(this.from_currency) && this.to_currency == 0\"}],attrs:{\"for\":\"address\"}},[_vm._v(\"BTC withdrawal address\")]),_c('label',{directives:[{name:\"show\",rawName:\"v-show\",value:(this.from_currency == 0 && [1,2].includes(this.to_currency)),expression:\"this.from_currency == 0 && [1,2].includes(this.to_currency)\"}],attrs:{\"for\":\"address\"}},[_vm._v(\"ETH address\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.address),expression:\"address\"}],style:(_vm.addressStyle),attrs:{\"id\":\"address\",\"type\":\"text\",\"placeholder\":\"Address\"},domProps:{\"value\":(_vm.address)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.address=$event.target.value}}})]),_c('ul',{staticClass:\"infiniteapproval\"},[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inf_approval),expression:\"inf_approval\"}],attrs:{\"id\":\"inf-approval\",\"type\":\"checkbox\",\"name\":\"inf-approval\"},domProps:{\"checked\":Array.isArray(_vm.inf_approval)?_vm._i(_vm.inf_approval,null)>-1:(_vm.inf_approval)},on:{\"change\":function($event){var $$a=_vm.inf_approval,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.inf_approval=$$a.concat([$$v]))}else{$$i>-1&&(_vm.inf_approval=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.inf_approval=$$c}}}}),_vm._m(2)])])],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.susdWaitingPeriod),expression:\"susdWaitingPeriod\"}],staticClass:\"simple-error pulse\"},[_vm._v(\" Cannot transfer sBTC during waiting period \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.estimateGas),expression:\"estimateGas\"}],staticClass:\"info-message gentle-message\"},[_vm._v(\" Estimated tx cost: \"+_vm._s((_vm.estimateGas * _vm.gasPrice / 1e9 * _vm.ethPrice).toFixed(2))+\"$ \")]),_c('approve-chi'),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.address && !_vm.checkAddress),expression:\"address && !checkAddress\"}],staticClass:\"simple-error\"},[_vm._v(\" Invalid \"+_vm._s(_vm.from_currency == 0 ? 'ETH' : 'BTC')+\" address \")]),_c('button',{staticClass:\"swap\",attrs:{\"disabled\":_vm.swapDisabled},on:{\"click\":_vm.submit}},[_vm._v(\"Swap\")]),_c('tx-table')],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_c('img',{staticClass:\"icon small\",attrs:{\"src\":require(\"@/assets/clock-regular.svg\")}}),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\" Cannot transfer during waiting period \")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"maxbalance2\"},[_vm._v(\"Max: \"),_c('span')])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('label',{attrs:{\"for\":\"inf-approval\"}},[_vm._v(\"Infinite approval - trust this contract forever \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" Preapprove the contract to to be able to spend any amount of your coins. You will not need to approve again. \")])])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div class='rengateway'>\n\t\t\n\t\t<div class='exchange'>\n\n            <div class='exchangefields'>\n\n\t\t\t\t<div class='flexbreak'></div>\n\n                <fieldset class='item'>\n                    <legend>From:</legend>\n                    <div class='maxbalance' @click='set_max_balance'>\n                    \tMax: \n                    \t<span \n                            v-show=\"currentPool == 'sbtc' && from_currency == 2\"\n                        >\n                            {{maxSynthText}}/\n                        </span>\n                    \t<span>{{maxBalanceText}}</span> \n                    \t<span v-show='susdWaitingPeriod' class='susd-waiting-period'>\n                            <span class='tooltip'>\n                                <img src='@/assets/clock-regular.svg' class='icon small'>\n                                <span class='tooltiptext'>\n                                    Cannot transfer during waiting period\n                                </span>\n                            </span>\n                        </span>\n                        <span v-show=\"currentPool == 'sbtc' && from_currency == 2\" class='tooltip'> [?]\n                            <span class='tooltiptext long'>\n                                Max transferrable amount is {{ maxSynthText }}. You can free the remaining balance by settling.\n                            </span>\n                        </span>\n                    </div>\n                    <ul>\n                        <li>\n                            <input type=\"text\" id=\"from_currency\" :disabled='disabled' name=\"from_currency\" value='0.00'\n                            :style = \"{backgroundColor: fromBgColor}\"\n                            @input='set_to_amount'\n                            v-model='fromInput'>\n                            <p class='actualvalue' v-show=\"['sbtc', 'ren'].includes(currentPool)\">\n                                ≈ {{ actualFromValue }}$\n                            </p>\n                        </li>\n                        <li class='coins' v-for='(currency, i) in Object.keys(currencies)'>\n                            <input type=\"radio\" :id=\"'from_cur_'+i\" name=\"from_cur\" :value='i' v-model='from_currency'>\n                            <label :for=\"'from_cur_'+i\">\n                            \t<img \n                                    :class=\"{'token-icon': true, [currency+'-icon']: true}\" \n                                    :src='getTokenIcon(currency)'>\n                                <span>{{currency | capitalize}}</span>\n                            </label>\n                        </label>\n                        </li>\n                        <div v-show='from_currency == 0 && amountAfterBTC >= 0' class='amount-after-fees'> \n                        \tAmount after renVM fees: {{amountAfterBTC}}\n                        </div>\n                    </ul>\n                </fieldset>\n                <fieldset class='item iconcontainer' @click='swapInputs'>\n                    <img :src=\"publicPath + 'exchange-alt-solid.svg'\" id='exchangeicon'/>\n                </fieldset>\n                <fieldset class='item'>\n                    <legend>To:</legend>\n                    <div class='maxbalance2'>Max: <span></span> </div>\n                    <ul>\n                        <li>\n                            <input type=\"text\" \n                            id=\"to_currency\" \n                            name=\"to_currency\" \n                            value=\"0.00\" \n                            disabled\n                            :style = \"{backgroundColor: bgColor}\"\n                            :value = 'toInputFormat'>\n<!--                             <p class='actualvalue' v-show='swapwrapped'>\n                                ≈ {{actualToValue}} {{Object.keys(currencies)[this.to_currency] | capitalize}}\n                            </p> -->\n                            <p class='actualvalue' v-show=\"['ren', 'sbtc'].includes(currentPool)\">\n                                ≈ {{ actualToValue }}$\n                            </p>\n                        </li>\n                        <li class='coins' v-for='(currency, i) in Object.keys(currencies)'>\n                            <input type=\"radio\" :id=\"'to_cur_'+i\" name=\"to_cur\" :value='i' v-model='to_currency'>\n                            <label :for=\"'to_cur_'+i\">\n                            \t<img \n                                    :class=\"{'token-icon': true, [currency+'-icon']: true}\" \n                                    :src='getTokenIcon(currency)'>\n                                <span>{{currency | capitalize}}</span>\n                            </label>\n                        </label>\n                        </li>\n                        <div v-show='[1,2].includes(from_currency) && to_currency == 0 && toInputOriginal >= 0' class='amount-after-fees'>\n                        \tAmount before renVM fees: {{toInputOriginal.toFixed(8)}}\n                        </div>\n                    </ul>\n                </fieldset>\n            </div>\n            <p class='exchange-rate' v-show='!([1,2].includes(this.from_currency) && [1,2].includes(this.to_currency))'>Exchange rate (including fees and renVM fee): \n            \t<span id=\"exchange-rate\" v-show='!lessThanMinOrder'>{{ exchangeRate && exchangeRate.toFixed(4) }}</span>\n            \t<span v-show='lessThanMinOrder'>N/A</span>\n            </p>\n            <p class='exchange-rate'>Exchange rate (including fees): \n            \t<span id=\"exchange-rate\" v-show='!lessThanMinOrder'>{{ exchangeRateOriginal && exchangeRateOriginal.toFixed(4) }}</span>\n            \t<span v-show='lessThanMinOrder'>N/A</span>\n            </p>\n            <div id='max_slippage'><span>Max slippage:</span> \n                <input id=\"slippage05\" type=\"radio\" name=\"slippage\" value='0.005' @click='maxSlippage = 0.5; customSlippageDisabled = true'>\n                <label for=\"slippage05\">0.5%</label>\n\n                <input id=\"slippage1\" type=\"radio\" name=\"slippage\" checked value='0.01' @click='maxSlippage = 1; customSlippageDisabled = true'>\n                <label for=\"slippage1\">1%</label>\n\n                <input id=\"custom_slippage\" type=\"radio\" name=\"slippage\" value='-' @click='customippageDisabled = false'>\n                <label for=\"custom_slippage\" @click='customSlippageDisabled = false'>\n                    <input type=\"text\" id=\"custom_slippage_input\" :disabled='customSlippageDisabled' name=\"custom_slippage_input\" v-model='maxInputSlippage'> %\n                </label>\n            </div>\n            <gas-price></gas-price>\n            <p class='simple-error' v-show='lessThanMinOrder && from_currency == 0'>\n            \tMinimum mint order size is {{ (minOrderSize / 1e8).toFixed(8) }} \n            </p>\n            <p class='simple-error' v-show='lessThanMinOrder && from_currency == 1'>\n            \tMinimum burn order size is {{ (minOrderSize / 1e8 + 0.00000547).toFixed(8) }}\n            </p>\n            <div class='input address' v-show='this.from_currency == 0 && [1,2].includes(this.to_currency) || [1,2].includes(this.from_currency) && this.to_currency == 0'>\n\t\t\t\t<label for='address' v-show='[1,2].includes(this.from_currency) && this.to_currency == 0'>BTC withdrawal address</label>\n\t\t\t\t<label for='address' v-show='this.from_currency == 0 && [1,2].includes(this.to_currency)'>ETH address</label>\n\t\t\t\t\n\t\t\t\t<input id='address' type='text' v-model='address' placeholder='Address' :style='addressStyle'>\n\t\t\t</div>\n\t     \t<ul class='infiniteapproval'>\n\t            <li>\n\t                <input id=\"inf-approval\" type=\"checkbox\" name=\"inf-approval\" v-model='inf_approval'>\n\t                <label for=\"inf-approval\">Infinite approval - trust this contract forever\n\t                    <span class='tooltip'>[?]\n\t                        <span class='tooltiptext long'>\n\t                            Preapprove the contract to to be able to spend any amount of your coins. You will not need to approve again.\n\t                        </span>\n\t                    </span>\n\t                </label>\n\t            </li>\n\t        </ul>\n        </div>\n\n        <div class='simple-error pulse' v-show=\"susdWaitingPeriod\">\n            Cannot transfer sBTC during waiting period\n        </div>\n\n        <div class='info-message gentle-message' v-show='estimateGas'>\n            Estimated tx cost: {{ (estimateGas * gasPrice / 1e9 * ethPrice).toFixed(2) }}$\n        </div>\n\n        <approve-chi></approve-chi>\n        \n        <p class='simple-error' v-show='address && !checkAddress'>\n            Invalid {{ from_currency == 0 ? 'ETH' : 'BTC' }} address\n        </p>\n        <button class='swap' @click='submit' :disabled='swapDisabled'>Swap</button>\n\n\t\t<tx-table></tx-table>\n\n\t\t\n\t</div>\t\n</template>\n\n<script>\n\timport Vue from 'vue'\n    import { notify, notifyHandler } from '../../init'\n\timport { getters, allCurrencies, contract, gas as contractGas } from '../../contract'\n\timport RenSDK from '@renproject/ren'\n\timport BN from 'bignumber.js'\n\timport * as helpers from '../../utils/helpers'\n\timport * as common from '../../utils/common'\n\timport allabis, { ERC20_abi } from '../../allabis'\n\tlet Box = null\n\timport * as subscriptionStore from '../common/subscriptionStore'\n\timport Table from './Table.vue'\n\timport * as store from './shiftStore'\n\timport { state } from './shiftState'\n    import * as priceStore from '../common/priceStore'\n\n    import * as gasPriceStore from '../common/gasPriceStore'\n    import GasPrice from '../common/GasPrice.vue'\n\n    import * as errorStore from '../common/errorStore'\n\n    import ApproveCHI from './ApproveCHI.vue'\n\n    import validate from 'bitcoin-address-validation';\n\t\n\tconst txObject = () => ({\n\t\tid: '',\n\t\ttimestamp: null,\n\t\ttype: '',\n\t\tamount: '',\n\t\tfromInput: 0,\n\t\ttoInput: 0,\n\t\ttoAmount: 0,\n\t\taddress: '',\n\t\tparams: '',\n\t\tethTxHash: '',\n\t\tethStartBlock: null,\n\t\tethCurrentBlock: null,\n\t\tethConfirmations: null,\n\t\trenVMHash: '',\n\t\tgatewayAddress: '',\n\t\tconfirmations: 0,\n\t\t// 0 - waiting for renVM gateway address, 1 - waiting for deposit on BTC address, 2 - got BTC transaction, waiting for confirmation\n\t\t// 3 - waiting for renVM to do it's magic and shift, 4 - got renBTC, now initiating swap, 5 - swap ready\n\t\tstate: 0,\n\t\tbtcTxHash: '',\n\t\tbtcTxVOut: '',\n\t\trenResponse: '',\n\t\tsignature: '',\n\t})\n\n\texport default {\n\t\tcomponents: {\n\t\t\t'tx-table': Table,\n            'approve-chi': ApproveCHI,\n            GasPrice,\n\t\t},\n\t\tdata: () => ({\n\t\t\ttoInput: '0.00',\n\t\t\ttoInputOriginal: 0,\n\t\t\taddress: '',\n\n\t\t\tconfirmations: 6,\n\t\t\t// 1 - getting btc deposit address, 2 - waiting to confirm on btc network, 3 - \n\t\t\tbox: null,\n\t\t\tshowModal: false,\n\t\t\tqrValue: null,\n\n\n\t\t\tmaxBalance: 0,\n\t\t\tmaxSynthBalance: -1,\n            susdWaitingPeriod: false,\n\t\t\tdisabled: false,\n\t\t\tfromInput: '0.001',\n\t\t\tfrom_currency: 0,\n\t\t\tto_currency: 1,\n            btcPrice: null,\n            ethPrice: null,\n            customGasDisabled: true,\n            customGasInput: null,\n            estimateGas: null,\n\t\t\tget_dy_original: '',\n\t\t\tfromBgColor: '',\n\t\t\tbgColor: '',\n\t\t\tmaxSlippage: 1,\n            maxInputSlippage: '',\n            customSlippageDisabled: true,\n\t\t\tswapwrapped: false,\n\t\t\tcopied: false,\n\t\t\tinf_approval: false,\n\t\t\tpromise: helpers.makeCancelable(Promise.resolve()),\n\t\t}),\n\t\tcomputed: {\n\t\t\tswapDisabled() {\n\t\t\t\treturn this.lessThanMinOrder || \n\t\t\t\t\t([1,2].includes(this.from_currency) && this.to_currency == 0 && !this.address) ||\n                    !this.checkAddress\n\t\t\t},\n\t\t\tmaxBalanceText() {\n\t\t\t\tif(this.from_currency == 0) return 'N/A'\n\t\t\t\treturn BN(this.maxBalance).div(this.fromPrecisions).toFixed(8)\n\t\t\t},\n\t\t\tmaxSynthText() {\n\t\t\t\treturn this.toFixed(BN(this.maxSynthBalance).div(1e18))\n\t\t\t},\n\t\t\texchangeRate() {\n\t\t\t\tif(this.from_currency == 1) return this.amountAfterWBTC / this.fromInput\n            \treturn this.toInput / this.fromInput\n            },\n            exchangeRateOriginal() {\n            \treturn this.toInputOriginal / this.fromInput\n            },\n            amountAfterBTC() {\n            \treturn (BN(this.fromInput).times(1e8).times(1-state.mintFee/10000).minus(state.minersLockFee)).div(1e8).toFixed(8)\n            },\n            amountAfterWBTC() {\n            \treturn (BN(this.toInputOriginal).times(1e8).times(1-state.burnFee/10000).minus(state.minersReleaseFee)).div(1e8).toFixed(8)\n            },\n            minOrderSize() {\n            \treturn state.minersReleaseFee + state.burnFee / 10000 + 1100\n            },\n            lessThanMinOrder() {\n            \tif([1,2].includes(this.from_currency) && [1,2].includes(this.to_currency)) return false\n                if(this.from_currency == 0 && this.amountAfterBTC < 0) return true\n                if(this.from_currency == 1 && (this.fromInput * 1e8 * (1-state.burnFee/10000)) < state.minersReleaseFee + 500) return true \n            },\n        \ttoInputFormat() {\n        \t\tif(!this.toInput || typeof this.toInput == 'string') return '0.00'\n        \t\tif([1,2].includes(this.from_currency) && [1,2].includes(this.to_currency))\n        \t\t\treturn +this.toInputOriginal.toFixed(8)\n        \t\treturn +this.toInput.toFixed(8) \n        \t},\n        \taddressStyle() {\n        \t\tif(this.from_currency == 0) {\n        \t\t\treturn {\n        \t\t\t\tbackground: '#505070',\n    \t\t\t\t\tcolor: '#d0d0d0',\n        \t\t\t}\n        \t\t}\n        \t\telse return {}\n        \t},\n            actualFromValue() {\n                return (this.fromInput * this.btcPrice).toFixed(2)\n            },\n            actualToValue() {\n                return (this.toInput * this.btcPrice).toFixed(2)\n            },\n        \tpublicPath() {\n                return process.env.BASE_URL\n            },\n            currencies() {\n            \tif(contract.currentContract == 'ren') {\n            \t\treturn {\n            \t\t\tbtc: 'BTC',\n\t\t\t\t\t\twbtc: 'WBTC',\n            \t\t}\n            \t}\n            \tif(contract.currentContract == 'sbtc') {\n            \t\treturn {\n            \t\t\tbtc: 'BTC',\n\t\t\t\t\t\twbtc: 'wBTC',\n\t\t\t\t\t\tsbtc: 'sBTC',\t\n            \t\t}\n            \t}\n            },\n            fromPrecisions() {\n            \treturn allabis[contract.currentContract].coin_precisions[this.from_currency]\n            },\n            toPrecisions() {\n            \treturn allabis[contract.currentContract].coin_precisions[this.to_currency]\n            },\n            currentPool() {\n            \treturn getters.currentPool()\n            },\n            gasPrice() {\n                return gasPriceStore.state.gasPrice\n            },\n            gasPriceWei() {\n                return gasPriceStore.state.gasPriceWei\n            },\n            checkAddress() {\n                if(this.from_currency == 0 && [1,2].includes(this.to_currency)) {\n                    return contract.web3.utils.isAddress(this.address)\n                }\n                else {\n                    return validate(this.address) !== false\n                }\n            },\n\t\t},\n\t\twatch: {\n\t\t\tfrom_currency(val, oldval) {\n                if(val == this.to_currency) {\n                    this.to_currency = oldval;\n                }\n\n                if(this.from_currency == 0) this.fromBgColor = 'blue'\n                \n                this.from_cur_handler()\n            },\n            async to_currency(val, oldval) {\n            \tif(val == this.from_currency) {\n            \t\tif (this.to_currency == 0) {\n                        this.from_currency = 1;\n                    } else {\n                        this.from_currency = 0;\n                    }\n            \t}\n            \tawait this.from_cur_handler()\n            },\n\t\t},\n\t\tcreated() {\n\t\t\tthis.$watch(() => contract.initializedContracts && state.loaded, val => {\n\t\t\t\tif(!val) return;\n\t\t\t\tthis.mounted()\n\t\t\t})\n\t\t},\n\t\tmounted() {\n\t\t\tthis.$emit('loaded')\n\t\t\tlet modal = document.querySelector('#modal')\n\t\t\twindow.addEventListener('click', () => {\n\t\t\t\tif (event.target == modal) {\n\t\t\t\t\tthis.showModal = false\n\t\t\t  \t}\n\t\t\t})\n\t\t\tcontract.initializedContracts && state.loaded && this.mounted()\n\t\t},\n\t\tmethods: {\n\t\t\tasync mounted() {\n                this.btcPrice = await priceStore.getBTCPrice()\n                //when used in OneSplit component\n                // if(contract.currentContract != 'ren') {\n                //  contract.swap = contract.contracts.ren.swap\n                //  contract.coins = contract.contracts.ren.coins\n                // }\n\t\t\t\tif([1,2].includes(this.from_currency)) this.address = contract.default_account\n\t\t\t\tthis.from_cur_handler()\n\t\t\t},\n\n\t\t\ttoFixed(num) {\n                if(num == '' || num == undefined || num == 0) return '0.00'\n                if(!BN.isBigNumber(num)) num = +num\n                if(['tbtc', 'ren', 'sbtc'].includes(contract.currentContract)) return num.toFixed(8)\n                return num.toFixed(2)\n            },\n\n\t\t\tasync set_max_balance() {\n\t\t\t\tif(this.from_currency == 0) {\n\t\t\t\t\tthis.fromInput = 0\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet maxBalance = BN(this.maxBalance).div(this.fromPrecisions).toFixed(8)\n\t\t\t\tif(this.currentPool == 'sbtc' && this.from_currency == 2) {\n\t\t\t\t\tmaxBalance = BN(this.maxSynthBalance).div(1e18).toString()\n\t\t\t\t}\n\n\t\t\t\tthis.fromInput = maxBalance\n\t\t\t\tthis.set_to_amount()\n\t\t\t},\n\n\t\t\tgetTokenIcon(token) {\n                return helpers.getTokenIcon(token, this.swapwrapped, this.currentPool)\n            },\n\n\t\t\tasync set_to_amount() {\n\t\t\t\tthis.highlight_input();\n\t\t\t\tlet i = this.from_currency\n\t\t\t\tlet j = this.to_currency\n\t\t\t\tlet dx = BN(this.fromInput).times(this.fromPrecisions).toFixed(0,1)\n\t\t\t\tlet original_dx = dx\n\t\t\t\tlet fee = i == 0 ? state.minersLockFee : state.minersReleaseFee\n\t\t\t\tlet ethfee = i == 0 ? state.mintFee : state.burnFee\n\t\t\t\tethfee = 1 - ethfee/10000\n\t\t\t\tdx = BN(this.fromInput).times(this.fromPrecisions).times(ethfee).minus(fee).toFixed(0,1)\n\t\t\t\t//case WBTC -> BTC\n\t\t\t\t\t//swapping the entered WBTC amount and then from result subtract fees\n\t\t\t\t//case BTC -> WBTC\n\t\t\t\t\t//subtract fees and then do SWAP\n\t\t\t\tif(this.lessThanMinOrder) {\n\t\t\t\t\tthis.toInput = 0;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tlet get_dy_original = contract.swap.methods.get_dy(i, j, BN(this.fromInput).times(this.fromPrecisions).toFixed(0,1)).encodeABI()\n\t\t\t\tlet get_dys = [get_dy_original]\n\t\t\t\tif(this.from_currency == 0) {\n\t\t\t\t\tget_dys.push(contract.swap.methods.get_dy(i, j, BN(this.amountAfterBTC).times(this.fromPrecisions).toFixed(0,1)).encodeABI())\n\t\t\t\t}\n\t\t\t\tthis.promise.cancel()\n\t\t\t\tlet calls = get_dys.map(call => [contract.swap._address, call])\n\t\t\t\tlet promise = contract.multicall.methods.aggregate(calls).call()\n\t\t\t\tthis.promise = helpers.makeCancelable(promise)\n\t\t\t\ttry {\n\t\t\t\t\tlet result = await promise\n\t\t\t\t\tresult = result[1].map(hex => contract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\t\tif(this.from_currency == 0) {\n\t\t\t\t\t\tlet [dy_original, dy] = result.map(v=>v / this.toPrecisions)\n\t\t\t\t\t\tthis.toInput = dy\n\t\t\t\t\t\tthis.toInputOriginal = dy_original\n\t\t\t\t\t}\n\t\t\t\t\telse {\n\t\t\t\t\t\tthis.toInput = (result - fee)*ethfee / this.toPrecisions\n\t\t\t\t\t\t//this.toInput = result / 1e8\n\t\t\t\t\t\tthis.toInputOriginal = result / this.toPrecisions\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcatch(err) {\n\t\t\t\t\tconsole.error(err)\n\t\t\t\t}\n\t\t\t},\n\n\t\t\thighlight_input() {\n\t\t\t\tif(this.from_currency == 0) return;\n\t\t\t\tif(this.fromInput > this.maxBalance / this.fromPrecisions) {\n\t\t\t\t\tthis.fromBgColor = 'red'\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tthis.fromBgColor = 'blue'\n\t\t\t\t}\n\t\t\t},\n\n\t\t\tswapInputs() {\n\t\t\t\t[this.fromInput, this.toInput] = [this.toInput, this.fromInput]\n                this.from_currency = this.to_currency\n                this.from_cur_handler()\n\t\t\t},\n\n\t\t\tasync from_cur_handler() {\n\t\t\t\tthis.address = ''\n\t\t\t\tif(this.from_currency == 0) this.address = contract.default_account\n                let currentAllowance = BN(await contract.coins[this.from_currency].methods.allowance(contract.default_account, allabis[contract.currentContract].adapterBiconomyAddress).call())\n                let maxAllowance = contract.max_allowance.div(BN(2))\n                if (currentAllowance.gt(maxAllowance))\n                    this.inf_approval = true;\n                else\n                    this.inf_approval = false;\n\n                await this.setMaxBalance();\n                await this.set_to_amount();\n            },\n\n            async setMaxBalance() {\n            \tif(this.from_currency == 0) return;\n            \tlet calls = [\n            \t\t[contract.coins[this.from_currency]._address, contract.coins[this.from_currency].methods.balanceOf(contract.default_account).encodeABI()],\n            \t]\n\n            \tif(this.currentPool == 'sbtc' && this.from_currency == 2) {\n            \t\tcalls.push(\n\t            \t\t\t[contract.coins[this.from_currency]._address, contract.coins[this.from_currency].methods.transferableSynths(contract.default_account).encodeABI()],\n\t\t            \t\t[contract.snxExchanger._address, contract.snxExchanger.methods\n\t\t                        .maxSecsLeftInWaitingPeriod(contract.default_account, \"0x7342544300000000000000000000000000000000000000000000000000000000\").encodeABI()],\n                    )\n            \t}\n\n\n            \tlet aggcalls = await contract.multicall.methods.aggregate(calls).call()\n            \tlet decoded = aggcalls[1].map(hex => contract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\tlet balance = +decoded[0]\n\t\t\t\tif(this.currentPool == 'sbtc' && this.from_currency == 2) {\n\t\t\t\t\tthis.maxSynthBalance = +decoded[1]\n\t\t\t\t\tthis.susdWaitingPeriod = +decoded[2]\n                    this.susdWaitingPeriod = +this.susdWaitingPeriod > 0\n\t\t\t\t\tif(this.susdWaitingPeriod) balance = 0\n\t\t\t\t}\n\t\t\t\tthis.maxBalance = contract.default_account ? balance : 0\n\t\t\t\t//console.log(this.maxBalance)\n\t\t\t},\n\n\t\t\tasync submit() {\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n\n                this.estimateGas = contract.currentContract == 'ren' ? 300000 : 400000\n\n\t\t\t\tlet maxSlippage = this.maxSlippage;\n                if(this.maxInputSlippage) maxSlippage = this.maxInputSlippage;\n\t\t\t\tif(this.from_currency == 0 && [1,2].includes(this.to_currency)) {\n                \tvar min_dy = this.toInput * (1-maxSlippage)\n\t\t\t\t\tstore.mint({\n\t\t\t\t\t\tfrom_currency: this.from_currency,\n\t\t\t\t\t\tto_currency: this.to_currency,\n\t\t\t\t\t\tamountAfterBTC: this.amountAfterBTC,\n\t\t\t\t\t\taddress: this.address,\n\t\t\t\t\t\tfromInput: this.fromInput,\n\t\t\t\t\t\ttoInput: this.toInput,\n\t\t\t\t\t\tslippage: maxSlippage * 10,\n\t\t\t\t\t})\n                    if(document.querySelector('.showdesktoptransactions').offsetParent !== null) {\n                        let el = document.querySelector('tbody tr td:first-child')\n                        !helpers.isElementInViewport(el) && el.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"})\n                    }\n                    else {\n                        let el = document.querySelector('.transactionmobile')\n                        !helpers.isElementInViewport(el) && el.scrollIntoView({behavior: \"smooth\", block: \"end\", inline: \"nearest\"})\n                    }\n\t\t\t\t}\n\n\t\t\t\telse if([1,2].includes(this.from_currency) && this.to_currency == 0) { \n\t\t\t\t\tstore.burnSwap({\n\t\t\t\t\t\taddress: this.address,\n\t\t\t\t\t\tfromInput: this.fromInput,\n\t\t\t\t\t\tfrom_currency: this.from_currency,\n\t\t\t\t\t\ttoInputOriginal: BN(this.toInputOriginal).times(this.toPrecisions),\n\t\t\t\t\t\tinf_approval: this.inf_approval,\n\t\t\t\t\t})\n\t\t\t\t}\n\n\t\t\t\telse {\n\t\t\t\t\tlet dx = BN(this.fromInput).times(this.fromPrecisions).toFixed(0,1)\n\t\t\t\t\tlet i = this.from_currency\n\t\t\t\t\tlet j = this.to_currency\n\n\t\t\t\t\ttry {\n\t                    if (this.inf_approval)\n\t                        await common.ensure_underlying_allowance(i, contract.max_allowance, [], undefined, false)\n\t                    else\n\t                        await common.ensure_underlying_allowance(i, dx, [], undefined, false);\n\t                }\n\t                catch(err) {\n\t                    console.error(err)\n\t                    throw err;\n\t                }\n\n\t                let min_dy = BN(this.toInputOriginal).times(this.toPrecisions).times(1-(maxSlippage / 100)).toFixed(0,1)\n\t                try {\n                        await contract.swap.methods.exchange(i, j, dx, min_dy).send({\n\t                \t\tfrom: contract.default_account,\n                            gasPrice: this.gasPriceWei,\n\t                \t\tgas: contractGas.swap[contract.currentContract].exchange(i, j),\n\t                \t})\n                        .once('transactionHash', hash => {\n                            notifyHandler(hash)\n                        })\n                    }\n                    catch(err) {\n                        console.error(err)\n                        errorStore.handleError(err)\n                    }\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n</script>\n\n<style scoped>\n\tlabel[for='getbtc'] {\n\t\tmargin-left: 1em;\n\t}\n\t.input {\n\t\tmargin-top: 1em;\n\t}\n\t.input input {\n\t\tdisplay: block;\n\t}\n\t#amount {\n\t\twidth: 100px;\n\t}\n\t#address {\n\t\twidth: 600px;\n\t}\n\t.flexbreak {\n\t\twidth: 100%;\n\t\theight: 0;\n\t}\n\tbutton.swap {\n\t\tdisplay: block;\n\t\tmargin: 0 auto;\n\t\tmargin-top: 1em;\n\t}\n\t.tui-table {\n\t\twidth: 100%;\n\t\tmargin-top: 1em;\n\t}\n\t.simplebutton {\n\t\tmargin-bottom: 1em;\n\t}\n\t#result {\n\t\tmargin-top: 1em;\n\t}\n\t#result > div {\n\t\tmargin-top: 0.3em;\n\t}\n\t.exchange-rate {\n\t\ttext-align: left;\n\t}\n\t.exchange-rate {\n\t\tmargin-top: 0.5em;\n\t\tmargin-bottom: 0;\n\t}\n\t.input.address {\n\t\tmargin-bottom: 1em;\n\t}\n\t.infiniteapproval {\n\t\tmargin-top: 1em;\n\t}\n\tinput[type=radio] + label[for]:before, input[type=checkbox] + label[for]:before {\n\t\twidth: auto;\n\t}\n\t.exchangefields input[type=radio] + label[for]:before {\n\t\tmargin-right: 0.5em;\n\t}\n\t.amount-after-fees {\n\t\tmargin-top: 0.5em;\n\t}\n\t.maxbalance {\n\t\tcursor: pointer;\n\t}\n\t.maxbalance:hover {\n\t\ttext-decoration: underline;\n\t}\n\t.window.white.rengateway {\n\t\twidth: 80%;\n\t\tmax-width: 700px;\n\t}\n    .actualvalue {\n        margin: 0.5em 0 0 0;\n        text-align: right;\n        font-size: 0.9em;\n    }\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gateway.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gateway.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Gateway.vue?vue&type=template&id=5c6f8037&scoped=true&\"\nimport script from \"./Gateway.vue?vue&type=script&lang=js&\"\nexport * from \"./Gateway.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Gateway.vue?vue&type=style&index=0&id=5c6f8037&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"5c6f8037\",\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gateway.vue?vue&type=style&index=0&id=5c6f8037&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Gateway.vue?vue&type=style&index=0&id=5c6f8037&scoped=true&lang=css&\""],"sourceRoot":""}