{"version":3,"sources":["webpack:///./node_modules/bs58check/base.js","webpack:///./node_modules/bs58/index.js","webpack:///./node_modules/hdkey/node_modules/secp256k1/lib/index.js","webpack:///./node_modules/bnc-onboard/dist/esm/hd-wallet-642b97e3.js","webpack:///./node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/errors.js","webpack:///./node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/index.js","webpack:///./node_modules/fast-safe-stringify/index.js","webpack:///./node_modules/base-x/src/index.js","webpack:///./node_modules/web3-provider-engine/subproviders/rpc.js","webpack:///./node_modules/bnc-onboard/dist/esm/providerEngine-81ff17e9.js","webpack:///./node_modules/bs58check/index.js","webpack:///./node_modules/bnc-onboard/dist/esm/trezor-058b9998.js","webpack:///./node_modules/hdkey/node_modules/secp256k1/elliptic.js","webpack:///./node_modules/hdkey/lib/hdkey.js","webpack:///./node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/utils.js","webpack:///./node_modules/web3-provider-engine/node_modules/eth-json-rpc-errors/src/classes.js","webpack:///./node_modules/hdkey/node_modules/secp256k1/lib/elliptic.js"],"names":["base58","Buffer","module","exports","checksumFn","encode","payload","checksum","concat","length","decodeRaw","buffer","slice","newChecksum","decodeUnsafe","string","decode","Error","basex","ALPHABET","errors","IMPOSSIBLE_CASE","TWEAK_ADD","TWEAK_MUL","CONTEXT_RANDOMIZE_UNKNOW","SECKEY_INVALID","PUBKEY_PARSE","PUBKEY_SERIALIZE","PUBKEY_COMBINE","SIG_PARSE","SIGN","RECOVER","ECDH","assert","cond","msg","isUint8Array","name","value","Uint8Array","undefined","Array","isArray","numbers","join","includes","isCompressed","toTypeString","getAssertedOutput","output","len","Object","prototype","toString","call","secp256k1","seed","contextRandomize","seckey","privateKeyVerify","privateKeyNegate","tweak","privateKeyTweakAdd","privateKeyTweakMul","pubkey","publicKeyVerify","compressed","publicKeyCreate","publicKeyConvert","publicKeyNegate","pubkeys","publicKeyCombine","publicKeyTweakAdd","publicKeyTweakMul","sig","signatureNormalize","obj","outputlen","signatureExport","signatureImport","msg32","options","data","noncefn","signature","recid","ecdsaSign","ecdsaVerify","ecdsaRecover","hashfn","xbuf","ybuf","ecdh","publicToAddress","toChecksumAddress","numberToGet","generateAddresses","account","offset","publicKey","chainCode","path","hdk","addresses","i","dkey","deriveChild","address","push","dPath","isValidPath","parts","split","accountFieldDigit","Number","isNaN","changeFieldDigit","addressFieldDigit","EthereumRpcError","EthereumProviderError","getMessageFromCode","ERROR_CODES","getEthJsonRpcError","code","opts","message","validateOpts","getEthProviderError","rpc","parse","invalidRequest","invalidParams","methodNotFound","internal","server","isInteger","invalidInput","resourceNotFound","resourceUnavailable","transactionRejected","methodNotSupported","provider","userRejectedRequest","unauthorized","unsupportedMethod","custom","serializeError","ethErrors","stringify","default","stable","deterministicStringify","stableStringify","arr","replacerStack","replacer","spacer","res","decirc","JSON","replaceGetterValues","part","pop","defineProperty","val","k","stack","parent","propertyDescriptor","getOwnPropertyDescriptor","get","configurable","keys","key","compareFunction","a","b","tmp","deterministicDecirc","toJSON","sort","v","splice","this","_Buffer","base","TypeError","BASE_MAP","j","x","charAt","xc","charCodeAt","BASE","LEADER","FACTOR","Math","log","iFACTOR","source","from","isBuffer","zeroes","pbegin","pend","size","b58","carry","it1","it2","str","repeat","alloc","psz","b256","it3","it4","vch","allocUnsafe","fill","inherits","createPayload","Subprovider","RpcSource","self","rpcUrl","sanitizePayload","id","jsonrpc","method","params","handleRequest","next","end","targetUrl","sanitizedPayload","newPayload","xhr","uri","headers","body","rejectUnauthorized","timeout","err","statusCode","console","error","result","createProvider","config","getAccounts","signTransaction","processMessage","processPersonalMessage","signMessage","signPersonalMessage","idMgmt","rpcSubProvider","addProvider","start","createHash","bs58checkBase","sha256x2","update","digest","_slicedToArray","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","Symbol","iterator","_arr","_n","_d","_e","_s","_i","done","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_nonIterableSpread","o","minLen","_arrayLikeToArray","n","constructor","test","iter","arr2","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","Promise","then","_asyncToGenerator","fn","args","arguments","apply","trezorIcon","TREZOR_DEFAULT_PATH","trezor","networkId","email","appUrl","preferred","label","iconSrc","svg","wallet","_wallet","regeneratorRuntime","mark","_callee4","helpers","BigNumber","networkName","resetWalletState","wrap","_context4","prev","trezorProvider","sent","abrupt","connect","enable","disconnect","_get","_callee","_context","getPrimaryAddress","stop","network","_get2","_callee2","_context2","balance","_get3","_callee3","_context3","getBalance","_x","type","desktop","mobile","osExclusions","_x2","_trezorProvider","_callee13","TrezorConnectLibrary","EthereumTx","ethUtil","TrezorConnect","DEVICE_EVENT","DEVICE","addressToPath","enabled","customPath","setPath","_setPath","isCustomPath","getAddress","_getAddress","setPrimaryAccount","getPublicKey","_getPublicKey","getMoreAccounts","_getMoreAccounts","_getAccounts","_getAccounts2","getBalances","trezorSignTransaction","_signTransaction","_signTransaction2","_signMessage","_signMessage2","_context13","_callee12","_","_context12","entries","ethereumSignMessage","stripHexPrefix","hex","response","success","_x9","_callee11","transactionData","transaction","trezorResult","_context11","values","Transaction","chain","r","s","serialize","_x8","nonce","gasPrice","gas","to","ethereumSignTransaction","gasLimit","chainId","sendAsync","e","all","map","_ref3","_callee5","_context5","_x7","_callee10","getMore","addressInfo","_context10","t0","forEach","_ref4","set","_x6","_callee9","accounts","_context9","_callee8","_context8","coin","serializedPath","accountIndex","findIndex","_ref","_ref2","accountAddress","unshift","Map","_callee7","errorMsg","_context7","ethereumGetAddress","showOnTrezor","_x5","_callee6","_context6","_x3","_x4","manifest","callback","messageData","on","event","DISCONNECT","disconnected","walletName","send","crypto","bs58check","MASTER_SECRET","HARDENED_OFFSET","LEN","BITCOIN_VERSIONS","private","public","HDKey","versions","depth","index","_privateKey","_publicKey","_fingerprint","parentFingerprint","hdkey","version","writeUInt32BE","writeUInt8","fingerprint","copy","hash160","buf","sha","_identifier","identifier","equal","readUInt32BE","privateKey","derive","c","hardened","childIndex","parseInt","isHardened","indexBuffer","pk","zb","I","createHmac","IL","IR","hd","sign","hash","verify","wipePrivateData","randomBytes","xpriv","privateExtendedKey","xpub","publicExtendedKey","fromMasterSeed","seedBuffer","fromExtendedKey","base58key","keyBuffer","readUInt8","fromJSON","errorValues","FALLBACK_ERROR_CODE","JSON_RPC_SERVER_ERROR_MESSAGE","FALLBACK_MESSAGE","FALLBACK_ERROR","fallbackMessage","codeString","isJsonRpcServerError","isValidCode","fallbackError","serialized","hasOwnProperty","originalError","assignOriginalError","assign","safeStringify","super","stringifyReplacer","isValidEthProviderCode","EC","ec","ecparams","curve","BN","loadCompressedPublicKey","first","cmp","p","toRed","red","y","redSqr","redIMul","redIAdd","redSqrt","isOdd","redNeg","keyPair","pub","loadUncompressedPublicKey","x3","redISub","isZero","loadPublicKey","subarray","savePublicKey","point","bn","negate","sub","umod","toArrayLike","iadd","isub","tweaked","imul","pair","keyFromPrivate","getPublic","pairs","add","isInfinity","g","mul","nh","sigR","sigS","lenR","posR","lenS","posS","_noncefn","counter","isValid","d","canonical","pers","recoveryParam","sigObj","sigr","sigs","recoverPubKey","scalar","sha256","getX","toArray","getY"],"mappings":"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","file":"js/chunk-288bd4d9.a3ec47ad.js","sourcesContent":["'use strict'\n\nvar base58 = require('bs58')\nvar Buffer = require('safe-buffer').Buffer\n\nmodule.exports = function (checksumFn) {\n  // Encode a buffer as a base58-check encoded string\n  function encode (payload) {\n    var checksum = checksumFn(payload)\n\n    return base58.encode(Buffer.concat([\n      payload,\n      checksum\n    ], payload.length + 4))\n  }\n\n  function decodeRaw (buffer) {\n    var payload = buffer.slice(0, -4)\n    var checksum = buffer.slice(-4)\n    var newChecksum = checksumFn(payload)\n\n    if (checksum[0] ^ newChecksum[0] |\n        checksum[1] ^ newChecksum[1] |\n        checksum[2] ^ newChecksum[2] |\n        checksum[3] ^ newChecksum[3]) return\n\n    return payload\n  }\n\n  // Decode a base58-check encoded string to a buffer, no result if checksum is wrong\n  function decodeUnsafe (string) {\n    var buffer = base58.decodeUnsafe(string)\n    if (!buffer) return\n\n    return decodeRaw(buffer)\n  }\n\n  function decode (string) {\n    var buffer = base58.decode(string)\n    var payload = decodeRaw(buffer, checksumFn)\n    if (!payload) throw new Error('Invalid checksum')\n    return payload\n  }\n\n  return {\n    encode: encode,\n    decode: decode,\n    decodeUnsafe: decodeUnsafe\n  }\n}\n","var basex = require('base-x')\nvar ALPHABET = '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n\nmodule.exports = basex(ALPHABET)\n","const errors = {\n  IMPOSSIBLE_CASE: 'Impossible case. Please create issue.',\n  TWEAK_ADD:\n    'The tweak was out of range or the resulted private key is invalid',\n  TWEAK_MUL: 'The tweak was out of range or equal to zero',\n  CONTEXT_RANDOMIZE_UNKNOW: 'Unknow error on context randomization',\n  SECKEY_INVALID: 'Private Key is invalid',\n  PUBKEY_PARSE: 'Public Key could not be parsed',\n  PUBKEY_SERIALIZE: 'Public Key serialization error',\n  PUBKEY_COMBINE: 'The sum of the public keys is not valid',\n  SIG_PARSE: 'Signature could not be parsed',\n  SIGN: 'The nonce generation function failed, or the private key was invalid',\n  RECOVER: 'Public key could not be recover',\n  ECDH: 'Scalar was invalid (zero or overflow)'\n}\n\nfunction assert (cond, msg) {\n  if (!cond) throw new Error(msg)\n}\n\nfunction isUint8Array (name, value, length) {\n  assert(value instanceof Uint8Array, `Expected ${name} to be an Uint8Array`)\n\n  if (length !== undefined) {\n    if (Array.isArray(length)) {\n      const numbers = length.join(', ')\n      const msg = `Expected ${name} to be an Uint8Array with length [${numbers}]`\n      assert(length.includes(value.length), msg)\n    } else {\n      const msg = `Expected ${name} to be an Uint8Array with length ${length}`\n      assert(value.length === length, msg)\n    }\n  }\n}\n\nfunction isCompressed (value) {\n  assert(toTypeString(value) === 'Boolean', 'Expected compressed to be a Boolean')\n}\n\nfunction getAssertedOutput (output = (len) => new Uint8Array(len), length) {\n  if (typeof output === 'function') output = output(length)\n  isUint8Array('output', output, length)\n  return output\n}\n\nfunction toTypeString (value) {\n  return Object.prototype.toString.call(value).slice(8, -1)\n}\n\nmodule.exports = (secp256k1) => {\n  return {\n    contextRandomize (seed) {\n      assert(\n        seed === null || seed instanceof Uint8Array,\n        'Expected seed to be an Uint8Array or null'\n      )\n      if (seed !== null) isUint8Array('seed', seed, 32)\n\n      switch (secp256k1.contextRandomize(seed)) {\n        case 1:\n          throw new Error(errors.CONTEXT_RANDOMIZE_UNKNOW)\n      }\n    },\n\n    privateKeyVerify (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      return secp256k1.privateKeyVerify(seckey) === 0\n    },\n\n    privateKeyNegate (seckey) {\n      isUint8Array('private key', seckey, 32)\n\n      switch (secp256k1.privateKeyNegate(seckey)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    privateKeyTweakAdd (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakAdd(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    privateKeyTweakMul (seckey, tweak) {\n      isUint8Array('private key', seckey, 32)\n      isUint8Array('tweak', tweak, 32)\n\n      switch (secp256k1.privateKeyTweakMul(seckey, tweak)) {\n        case 0:\n          return seckey\n        case 1:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    publicKeyVerify (pubkey) {\n      isUint8Array('public key', pubkey, [33, 65])\n\n      return secp256k1.publicKeyVerify(pubkey) === 0\n    },\n\n    publicKeyCreate (seckey, compressed = true, output) {\n      isUint8Array('private key', seckey, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCreate(output, seckey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SECKEY_INVALID)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyConvert (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyConvert(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyNegate (pubkey, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyNegate(output, pubkey)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyCombine (pubkeys, compressed = true, output) {\n      assert(Array.isArray(pubkeys), 'Expected public keys to be an Array')\n      assert(pubkeys.length > 0, 'Expected public keys array will have more than zero items')\n      for (const pubkey of pubkeys) {\n        isUint8Array('public key', pubkey, [33, 65])\n      }\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyCombine(output, pubkeys)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_COMBINE)\n        case 3:\n          throw new Error(errors.PUBKEY_SERIALIZE)\n      }\n    },\n\n    publicKeyTweakAdd (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakAdd(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_ADD)\n      }\n    },\n\n    publicKeyTweakMul (pubkey, tweak, compressed = true, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('tweak', tweak, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.publicKeyTweakMul(output, pubkey, tweak)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.TWEAK_MUL)\n      }\n    },\n\n    signatureNormalize (sig) {\n      isUint8Array('signature', sig, 64)\n\n      switch (secp256k1.signatureNormalize(sig)) {\n        case 0:\n          return sig\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n      }\n    },\n\n    signatureExport (sig, output) {\n      isUint8Array('signature', sig, 64)\n      output = getAssertedOutput(output, 72)\n\n      const obj = { output, outputlen: 72 }\n      switch (secp256k1.signatureExport(obj, sig)) {\n        case 0:\n          return output.slice(0, obj.outputlen)\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    signatureImport (sig, output) {\n      isUint8Array('signature', sig)\n      output = getAssertedOutput(output, 64)\n\n      switch (secp256k1.signatureImport(output, sig)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaSign (msg32, seckey, options = {}, output) {\n      isUint8Array('message', msg32, 32)\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.noncefn !== undefined) assert(toTypeString(options.noncefn) === 'Function', 'Expected options.noncefn to be a Function')\n      output = getAssertedOutput(output, 64)\n\n      const obj = { signature: output, recid: null }\n      switch (secp256k1.ecdsaSign(obj, msg32, seckey, options.data, options.noncefn)) {\n        case 0:\n          return obj\n        case 1:\n          throw new Error(errors.SIGN)\n        case 2:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdsaVerify (sig, msg32, pubkey) {\n      isUint8Array('signature', sig, 64)\n      isUint8Array('message', msg32, 32)\n      isUint8Array('public key', pubkey, [33, 65])\n\n      switch (secp256k1.ecdsaVerify(sig, msg32, pubkey)) {\n        case 0:\n          return true\n        case 3:\n          return false\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.PUBKEY_PARSE)\n      }\n    },\n\n    ecdsaRecover (sig, recid, msg32, compressed = true, output) {\n      isUint8Array('signature', sig, 64)\n      assert(\n        toTypeString(recid) === 'Number' &&\n          recid >= 0 &&\n          recid <= 3,\n        'Expected recovery id to be a Number within interval [0, 3]'\n      )\n      isUint8Array('message', msg32, 32)\n      isCompressed(compressed)\n      output = getAssertedOutput(output, compressed ? 33 : 65)\n\n      switch (secp256k1.ecdsaRecover(output, sig, recid, msg32)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.SIG_PARSE)\n        case 2:\n          throw new Error(errors.RECOVER)\n        case 3:\n          throw new Error(errors.IMPOSSIBLE_CASE)\n      }\n    },\n\n    ecdh (pubkey, seckey, options = {}, output) {\n      isUint8Array('public key', pubkey, [33, 65])\n      isUint8Array('private key', seckey, 32)\n      assert(toTypeString(options) === 'Object', 'Expected options to be an Object')\n      if (options.data !== undefined) isUint8Array('options.data', options.data)\n      if (options.hashfn !== undefined) {\n        assert(toTypeString(options.hashfn) === 'Function', 'Expected options.hashfn to be a Function')\n        if (options.xbuf !== undefined) isUint8Array('options.xbuf', options.xbuf, 32)\n        if (options.ybuf !== undefined) isUint8Array('options.ybuf', options.ybuf, 32)\n        isUint8Array('output', output)\n      } else {\n        output = getAssertedOutput(output, 32)\n      }\n\n      switch (secp256k1.ecdh(output, pubkey, seckey, options.data, options.hashfn, options.xbuf, options.ybuf)) {\n        case 0:\n          return output\n        case 1:\n          throw new Error(errors.PUBKEY_PARSE)\n        case 2:\n          throw new Error(errors.ECDH)\n      }\n    }\n  }\n}\n","import HDKey from 'hdkey';\nimport * as ethUtil from 'ethereumjs-util';\nimport { Buffer } from 'buffer';\nvar publicToAddress = ethUtil.publicToAddress,\n    toChecksumAddress = ethUtil.toChecksumAddress;\nvar numberToGet = 5;\n\nfunction generateAddresses(account, offset) {\n  var publicKey = account.publicKey,\n      chainCode = account.chainCode,\n      path = account.path;\n  var hdk = new HDKey();\n  hdk.publicKey = new Buffer(publicKey, 'hex');\n  hdk.chainCode = new Buffer(chainCode, 'hex');\n  var addresses = [];\n\n  for (var i = offset; i < numberToGet + offset; i++) {\n    var dkey = hdk.deriveChild(i);\n    var address = publicToAddress(dkey.publicKey, true).toString('hex');\n    addresses.push({\n      dPath: \"\".concat(path, \"/\").concat(i),\n      address: toChecksumAddress(\"0x\".concat(address))\n    });\n  }\n\n  return addresses;\n}\n\nfunction isValidPath(path) {\n  var parts = path.split('/');\n\n  if (parts[0] !== 'm') {\n    return false;\n  }\n\n  if (parts[1] !== \"44'\") {\n    return false;\n  }\n\n  if (parts[2] !== \"60'\" && parts[2] !== \"1'\") {\n    return false;\n  }\n\n  if (parts[3] === undefined) {\n    return true;\n  }\n\n  var accountFieldDigit = Number(parts[3][0]);\n\n  if (isNaN(accountFieldDigit) || accountFieldDigit < 0 || parts[3][1] !== \"'\") {\n    return false;\n  }\n\n  if (parts[4] === undefined) {\n    return true;\n  }\n\n  var changeFieldDigit = Number(parts[4][0]);\n\n  if (isNaN(changeFieldDigit) || changeFieldDigit < 0) {\n    return false;\n  }\n\n  if (parts[5] === undefined) {\n    return true;\n  }\n\n  var addressFieldDigit = Number(parts[5][0]);\n\n  if (isNaN(addressFieldDigit) || addressFieldDigit < 0) {\n    return false;\n  }\n\n  return true;\n}\n\nexport { generateAddresses, isValidPath };","\nconst { EthereumRpcError, EthereumProviderError } = require('./classes')\nconst { getMessageFromCode } = require('./utils')\nconst ERROR_CODES = require('./errorCodes.json')\n\nmodule.exports = {\n  rpc: {\n    /**\n     * Get a JSON RPC 2.0 Parse (-32700) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    parse: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.parse, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Request (-32600) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidRequest: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidRequest, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Invalid Params (-32602) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidParams: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidParams, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Method Not Found (-32601) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotFound, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Internal (-32603) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    internal: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.internal, opts\n    ),\n\n    /**\n     * Get a JSON RPC 2.0 Server error.\n     * Permits integer error codes in the [ -32099 <= -32005 ] range.\n     * Codes -32000 through -32004 are reserved by EIP 1474.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    server: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum RPC Server errors must provide single object argument.')\n      }\n      const { code } = opts\n      if (!Number.isInteger(code) || code > -32005 || code < -32099) {\n        throw new Error(\n          '\"code\" must be an integer such that: -32099 <= code <= -32005'\n        )\n      }\n      return getEthJsonRpcError(code, opts)\n    },\n\n    /**\n     * Get an Ethereum JSON RPC Invalid Input (-32000) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    invalidInput: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.invalidInput, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Not Found (-32001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceNotFound: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceNotFound, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Resource Unavailable (-32002) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    resourceUnavailable: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.resourceUnavailable, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Transaction Rejected (-32003) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    transactionRejected: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.transactionRejected, opts\n    ),\n\n    /**\n     * Get an Ethereum JSON RPC Method Not Supported (-32004) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumRpcError} The error\n     */\n    methodNotSupported: (opts) => getEthJsonRpcError(\n      ERROR_CODES.rpc.methodNotSupported, opts\n    ),\n  },\n\n  provider: {\n    /**\n     * Get an Ethereum Provider User Rejected Request (4001) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    userRejectedRequest: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.userRejectedRequest, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unauthorized (4100) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unauthorized: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unauthorized, opts\n      )\n    },\n\n    /**\n     * Get an Ethereum Provider Unsupported Method (4200) error.\n     * \n     * @param {Object|string} [opts] - Options object or error message string\n     * @param {string} [opts.message] - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    unsupportedMethod: (opts) => {\n      return getEthProviderError(\n        ERROR_CODES.provider.unsupportedMethod, opts\n      )\n    },\n\n    /**\n     * Get a custom Ethereum Provider error.\n     * \n     * @param {Object|string} opts - Options object\n     * @param {number} opts.code - The error code\n     * @param {string} opts.message - The error message\n     * @param {any} [opts.data] - Error data\n     * @returns {EthereumProviderError} The error\n     */\n    custom: (opts) => {\n      if (!opts || typeof opts !== 'object' || Array.isArray(opts)) {\n        throw new Error('Ethereum Provider custom errors must provide single object argument.')\n      }\n      const { code, message, data } = opts\n      if (!message || typeof message !== 'string') throw new Error(\n        '\"message\" must be a nonempty string'\n      )\n      return new EthereumProviderError(code, message, data)\n    },\n  },\n}\n\n// Internal\n\nfunction getEthJsonRpcError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumRpcError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction getEthProviderError(code, opts) {\n  const [ message, data ] = validateOpts(opts)\n  return new EthereumProviderError(\n    code,\n    message || getMessageFromCode(code),\n    data\n  )\n}\n\nfunction validateOpts (opts) {\n  let message, data\n  if (opts) {\n    if (typeof opts === 'string') {\n      message = opts\n    } else if (typeof opts === 'object' && !Array.isArray(opts)) {\n      message = opts.message\n      data = opts.data\n    }\n  }\n  return [ message, data ]\n}\n","\nconst { EthereumRpcError, EthereumProviderError } = require('./src/classes')\nconst {\n  serializeError, getMessageFromCode,\n} = require('./src/utils')\nconst ethErrors = require('./src/errors')\nconst ERROR_CODES = require('./src/errorCodes.json')\n\nmodule.exports = {\n  ethErrors,\n  EthereumRpcError,\n  EthereumProviderError,\n  serializeError,\n  getMessageFromCode,\n  /** @type ErrorCodes */\n  ERROR_CODES,\n}\n\n// Types\n\n/**\n * @typedef {Object} EthereumProviderErrorCodes\n * @property {number} userRejectedRequest\n * @property {number} unauthorized\n * @property {number} unsupportedMethod\n */\n\n/**\n * @typedef {Object} EthereumRpcErrorCodes\n * @property {number} parse\n * @property {number} invalidRequest\n * @property {number} invalidParams\n * @property {number} methodNotFound\n * @property {number} internal\n * @property {number} invalidInput\n * @property {number} resourceNotFound\n * @property {number} resourceUnavailable\n * @property {number} transactionRejected\n * @property {number} methodNotSupported\n */\n\n/**\n * @typedef ErrorCodes\n * @property {EthereumRpcErrorCodes} rpc\n * @property {EthereumProviderErrorCodes} provider\n */\n","module.exports = stringify\nstringify.default = stringify\nstringify.stable = deterministicStringify\nstringify.stableStringify = deterministicStringify\n\nvar arr = []\nvar replacerStack = []\n\n// Regular stringify\nfunction stringify (obj, replacer, spacer) {\n  decirc(obj, '', [], undefined)\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(obj, replacer, spacer)\n  } else {\n    res = JSON.stringify(obj, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\nfunction decirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        decirc(val[i], i, stack, val)\n      }\n    } else {\n      var keys = Object.keys(val)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        decirc(val[key], key, stack, val)\n      }\n    }\n    stack.pop()\n  }\n}\n\n// Stable-stringify\nfunction compareFunction (a, b) {\n  if (a < b) {\n    return -1\n  }\n  if (a > b) {\n    return 1\n  }\n  return 0\n}\n\nfunction deterministicStringify (obj, replacer, spacer) {\n  var tmp = deterministicDecirc(obj, '', [], undefined) || obj\n  var res\n  if (replacerStack.length === 0) {\n    res = JSON.stringify(tmp, replacer, spacer)\n  } else {\n    res = JSON.stringify(tmp, replaceGetterValues(replacer), spacer)\n  }\n  while (arr.length !== 0) {\n    var part = arr.pop()\n    if (part.length === 4) {\n      Object.defineProperty(part[0], part[1], part[3])\n    } else {\n      part[0][part[1]] = part[2]\n    }\n  }\n  return res\n}\n\nfunction deterministicDecirc (val, k, stack, parent) {\n  var i\n  if (typeof val === 'object' && val !== null) {\n    for (i = 0; i < stack.length; i++) {\n      if (stack[i] === val) {\n        var propertyDescriptor = Object.getOwnPropertyDescriptor(parent, k)\n        if (propertyDescriptor.get !== undefined) {\n          if (propertyDescriptor.configurable) {\n            Object.defineProperty(parent, k, { value: '[Circular]' })\n            arr.push([parent, k, val, propertyDescriptor])\n          } else {\n            replacerStack.push([val, k])\n          }\n        } else {\n          parent[k] = '[Circular]'\n          arr.push([parent, k, val])\n        }\n        return\n      }\n    }\n    if (typeof val.toJSON === 'function') {\n      return\n    }\n    stack.push(val)\n    // Optimize for Arrays. Big arrays could kill the performance otherwise!\n    if (Array.isArray(val)) {\n      for (i = 0; i < val.length; i++) {\n        deterministicDecirc(val[i], i, stack, val)\n      }\n    } else {\n      // Create a temporary object in the required way\n      var tmp = {}\n      var keys = Object.keys(val).sort(compareFunction)\n      for (i = 0; i < keys.length; i++) {\n        var key = keys[i]\n        deterministicDecirc(val[key], key, stack, val)\n        tmp[key] = val[key]\n      }\n      if (parent !== undefined) {\n        arr.push([parent, k, val])\n        parent[k] = tmp\n      } else {\n        return tmp\n      }\n    }\n    stack.pop()\n  }\n}\n\n// wraps replacer function to handle values we couldn't replace\n// and mark them as [Circular]\nfunction replaceGetterValues (replacer) {\n  replacer = replacer !== undefined ? replacer : function (k, v) { return v }\n  return function (key, val) {\n    if (replacerStack.length > 0) {\n      for (var i = 0; i < replacerStack.length; i++) {\n        var part = replacerStack[i]\n        if (part[1] === key && part[0] === val) {\n          val = '[Circular]'\n          replacerStack.splice(i, 1)\n          break\n        }\n      }\n    }\n    return replacer.call(this, key, val)\n  }\n}\n","'use strict'\n// base-x encoding / decoding\n// Copyright (c) 2018 base-x contributors\n// Copyright (c) 2014-2018 The Bitcoin Core developers (base58.cpp)\n// Distributed under the MIT software license, see the accompanying\n// file LICENSE or http://www.opensource.org/licenses/mit-license.php.\n// @ts-ignore\nvar _Buffer = require('safe-buffer').Buffer\nfunction base (ALPHABET) {\n  if (ALPHABET.length >= 255) { throw new TypeError('Alphabet too long') }\n  var BASE_MAP = new Uint8Array(256)\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i)\n    var xc = x.charCodeAt(0)\n    if (BASE_MAP[xc] !== 255) { throw new TypeError(x + ' is ambiguous') }\n    BASE_MAP[xc] = i\n  }\n  var BASE = ALPHABET.length\n  var LEADER = ALPHABET.charAt(0)\n  var FACTOR = Math.log(BASE) / Math.log(256) // log(BASE) / log(256), rounded up\n  var iFACTOR = Math.log(256) / Math.log(BASE) // log(256) / log(BASE), rounded up\n  function encode (source) {\n    if (Array.isArray(source) || source instanceof Uint8Array) { source = _Buffer.from(source) }\n    if (!_Buffer.isBuffer(source)) { throw new TypeError('Expected Buffer') }\n    if (source.length === 0) { return '' }\n        // Skip & count leading zeroes.\n    var zeroes = 0\n    var length = 0\n    var pbegin = 0\n    var pend = source.length\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++\n      zeroes++\n    }\n        // Allocate enough space in big-endian base58 representation.\n    var size = ((pend - pbegin) * iFACTOR + 1) >>> 0\n    var b58 = new Uint8Array(size)\n        // Process the bytes.\n    while (pbegin !== pend) {\n      var carry = source[pbegin]\n            // Apply \"b58 = b58 * 256 + ch\".\n      var i = 0\n      for (var it1 = size - 1; (carry !== 0 || i < length) && (it1 !== -1); it1--, i++) {\n        carry += (256 * b58[it1]) >>> 0\n        b58[it1] = (carry % BASE) >>> 0\n        carry = (carry / BASE) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      pbegin++\n    }\n        // Skip leading zeroes in base58 result.\n    var it2 = size - length\n    while (it2 !== size && b58[it2] === 0) {\n      it2++\n    }\n        // Translate the result into a string.\n    var str = LEADER.repeat(zeroes)\n    for (; it2 < size; ++it2) { str += ALPHABET.charAt(b58[it2]) }\n    return str\n  }\n  function decodeUnsafe (source) {\n    if (typeof source !== 'string') { throw new TypeError('Expected String') }\n    if (source.length === 0) { return _Buffer.alloc(0) }\n    var psz = 0\n        // Skip leading spaces.\n    if (source[psz] === ' ') { return }\n        // Skip and count leading '1's.\n    var zeroes = 0\n    var length = 0\n    while (source[psz] === LEADER) {\n      zeroes++\n      psz++\n    }\n        // Allocate enough space in big-endian base256 representation.\n    var size = (((source.length - psz) * FACTOR) + 1) >>> 0 // log(58) / log(256), rounded up.\n    var b256 = new Uint8Array(size)\n        // Process the characters.\n    while (source[psz]) {\n            // Decode character\n      var carry = BASE_MAP[source.charCodeAt(psz)]\n            // Invalid character\n      if (carry === 255) { return }\n      var i = 0\n      for (var it3 = size - 1; (carry !== 0 || i < length) && (it3 !== -1); it3--, i++) {\n        carry += (BASE * b256[it3]) >>> 0\n        b256[it3] = (carry % 256) >>> 0\n        carry = (carry / 256) >>> 0\n      }\n      if (carry !== 0) { throw new Error('Non-zero carry') }\n      length = i\n      psz++\n    }\n        // Skip trailing spaces.\n    if (source[psz] === ' ') { return }\n        // Skip leading zeroes in b256.\n    var it4 = size - length\n    while (it4 !== size && b256[it4] === 0) {\n      it4++\n    }\n    var vch = _Buffer.allocUnsafe(zeroes + (size - it4))\n    vch.fill(0x00, 0, zeroes)\n    var j = zeroes\n    while (it4 !== size) {\n      vch[j++] = b256[it4++]\n    }\n    return vch\n  }\n  function decode (string) {\n    var buffer = decodeUnsafe(string)\n    if (buffer) { return buffer }\n    throw new Error('Non-base' + BASE + ' character')\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  }\n}\nmodule.exports = base\n","const xhr = process.browser ? require('xhr') : require('request')\nconst inherits = require('util').inherits\nconst createPayload = require('../util/create-payload.js')\nconst Subprovider = require('./subprovider.js')\nconst { ethErrors, serializeError } = require('eth-json-rpc-errors')\n\n\nmodule.exports = RpcSource\n\ninherits(RpcSource, Subprovider)\n\nfunction RpcSource(opts) {\n  const self = this\n  self.rpcUrl = opts.rpcUrl\n}\n\nRpcSource.prototype.handleRequest = function(payload, next, end){\n  const self = this\n  const targetUrl = self.rpcUrl\n\n  // overwrite id to conflict with other concurrent users\n  const sanitizedPayload = sanitizePayload(payload)\n  const newPayload = createPayload(sanitizedPayload)\n\n  xhr({\n    uri: targetUrl,\n    method: 'POST',\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json',\n    },\n    body: JSON.stringify(newPayload),\n    rejectUnauthorized: false,\n    timeout: 20000,\n  }, function(err, res, body) {\n    if (err) return end(serializeError(err))\n\n    // check for error code\n    switch (res.statusCode) {\n      case 405:\n        return end(ethErrors.rpc.methodNotFound())\n      case 504: // Gateway timeout\n        return (function(){\n          let msg = `Gateway timeout. The request took too long to process. `\n          msg += `This can happen when querying logs over too wide a block range.`\n          const err = new Error(msg)\n          return end(serializeError(err))\n        })()\n      case 429: // Too many requests (rate limiting)\n        return (function(){\n          const err = new Error(`Too Many Requests`)\n          return end(serializeError(err))\n        })()\n      default:\n        if (res.statusCode != 200) {\n          const msg = 'Unknown Error: ' + res.body\n          const err = new Error(msg)\n          return end(serializeError(err))\n        }\n    }\n\n    // parse response\n    let data\n    try {\n      data = JSON.parse(body)\n    } catch (err) {\n      console.error(err.stack)\n      return end(serializeError(err))\n    }\n    if (data.error) return end(data.error)\n\n    end(null, data.result)\n  })\n}\n\n// drops any non-standard params\nfunction sanitizePayload (payload) {\n  return {\n    id: payload.id,\n    jsonrpc: payload.jsonrpc,\n    method: payload.method,\n    params: payload.params,\n  }\n}","import Web3ProviderEngine from 'web3-provider-engine';\nimport RpcSource from 'web3-provider-engine/subproviders/rpc';\nimport HookedWalletSubprovider from 'web3-provider-engine/subproviders/hooked-wallet';\nimport SubscriptionSubprovider from 'web3-provider-engine/subproviders/subscriptions';\nimport FilterSubprovider from 'web3-provider-engine/subproviders/filters';\n\nfunction createProvider(config) {\n  var getAccounts = config.getAccounts,\n      signTransaction = config.signTransaction,\n      rpcUrl = config.rpcUrl,\n      processMessage = config.processMessage,\n      processPersonalMessage = config.processPersonalMessage,\n      signMessage = config.signMessage,\n      signPersonalMessage = config.signPersonalMessage;\n  var idMgmt = getAccounts && new HookedWalletSubprovider({\n    getAccounts: getAccounts,\n    signTransaction: signTransaction,\n    processMessage: processMessage,\n    processPersonalMessage: processPersonalMessage,\n    signMessage: signMessage,\n    signPersonalMessage: signPersonalMessage\n  });\n  var rpcSubProvider = new RpcSource({\n    rpcUrl: rpcUrl.includes('http') ? rpcUrl : \"https://\".concat(rpcUrl)\n  });\n  var provider = new Web3ProviderEngine();\n  provider.addProvider(new SubscriptionSubprovider());\n  provider.addProvider(new FilterSubprovider());\n  idMgmt && provider.addProvider(idMgmt);\n  provider.addProvider(rpcSubProvider);\n  provider.start();\n  return provider;\n}\n\nexport default createProvider;","'use strict'\n\nvar createHash = require('create-hash')\nvar bs58checkBase = require('./base')\n\n// SHA256(SHA256(buffer))\nfunction sha256x2 (buffer) {\n  var tmp = createHash('sha256').update(buffer).digest()\n  return createHash('sha256').update(tmp).digest()\n}\n\nmodule.exports = bs58checkBase(sha256x2)\n","function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _iterableToArray(iter) { if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nimport 'web3-provider-engine';\nimport 'web3-provider-engine/subproviders/rpc';\nimport 'web3-provider-engine/subproviders/hooked-wallet';\nimport 'web3-provider-engine/subproviders/subscriptions';\nimport 'web3-provider-engine/subproviders/filters';\nimport createProvider from './providerEngine-81ff17e9.js';\nimport 'hdkey';\nimport 'ethereumjs-util';\nimport 'buffer';\nimport { isValidPath, generateAddresses } from './hd-wallet-642b97e3.js';\nvar trezorIcon = \"\\n\\t<svg width=\\\"40px\\\" height=\\\"40px\\\" viewBox=\\\"0 0 114 166\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\" xmlns:xlink=\\\"http://www.w3.org/1999/xlink\\\">\\n\\t\\t<g id=\\\"Styles\\\" stroke=\\\"none\\\" stroke-width=\\\"1\\\" fill=\\\"none\\\" fill-rule=\\\"evenodd\\\">\\n\\t\\t\\t<path d=\\\"M17,51.453125 L17,40 C17,17.90861 34.90861,-1.0658141e-14 57,-1.0658141e-14 C79.09139,-1.0658141e-14 97,17.90861 97,40 L97,51.453125 L113.736328,51.453125 L113.736328,139.193359 L57.5,166 L0,139.193359 L0,51.453125 L17,51.453125 Z M37,51.453125 L77,51.453125 L77,40 L76.9678398,40 C76.3750564,29.406335 67.6617997,21 57,21 C46.3382003,21 37.6249436,29.406335 37.0321602,40 L37,40 L37,51.453125 Z M23,72 L23,125 L56.8681641,140.966797 L91,125 L91,72 L23,72 Z\\\" id=\\\"Trezor-logo\\\" fill=\\\"currentColor\\\"></path>\\n\\t\\t</g>\\n\\t</svg>\\n\";\nvar TREZOR_DEFAULT_PATH = \"m/44'/60'/0'/0\";\n\nfunction trezor(options) {\n  var rpcUrl = options.rpcUrl,\n      networkId = options.networkId,\n      email = options.email,\n      appUrl = options.appUrl,\n      preferred = options.preferred,\n      label = options.label,\n      iconSrc = options.iconSrc,\n      svg = options.svg;\n  return {\n    name: label || 'Trezor',\n    svg: svg || trezorIcon,\n    iconSrc: iconSrc,\n    wallet: function () {\n      var _wallet = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee4(helpers) {\n        var BigNumber, networkName, resetWalletState, provider;\n        return regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                BigNumber = helpers.BigNumber, networkName = helpers.networkName, resetWalletState = helpers.resetWalletState;\n                _context4.next = 3;\n                return trezorProvider({\n                  rpcUrl: rpcUrl,\n                  networkId: networkId,\n                  email: email,\n                  appUrl: appUrl,\n                  BigNumber: BigNumber,\n                  networkName: networkName,\n                  resetWalletState: resetWalletState\n                });\n\n              case 3:\n                provider = _context4.sent;\n                return _context4.abrupt(\"return\", {\n                  provider: provider,\n                  \"interface\": {\n                    name: 'Trezor',\n                    connect: provider.enable,\n                    disconnect: provider.disconnect,\n                    address: {\n                      get: function () {\n                        var _get = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n                          return regeneratorRuntime.wrap(function _callee$(_context) {\n                            while (1) {\n                              switch (_context.prev = _context.next) {\n                                case 0:\n                                  return _context.abrupt(\"return\", provider.getPrimaryAddress());\n\n                                case 1:\n                                case \"end\":\n                                  return _context.stop();\n                              }\n                            }\n                          }, _callee);\n                        }));\n\n                        function get() {\n                          return _get.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    network: {\n                      get: function () {\n                        var _get2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n                          return regeneratorRuntime.wrap(function _callee2$(_context2) {\n                            while (1) {\n                              switch (_context2.prev = _context2.next) {\n                                case 0:\n                                  return _context2.abrupt(\"return\", networkId);\n\n                                case 1:\n                                case \"end\":\n                                  return _context2.stop();\n                              }\n                            }\n                          }, _callee2);\n                        }));\n\n                        function get() {\n                          return _get2.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    },\n                    balance: {\n                      get: function () {\n                        var _get3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n                          var address;\n                          return regeneratorRuntime.wrap(function _callee3$(_context3) {\n                            while (1) {\n                              switch (_context3.prev = _context3.next) {\n                                case 0:\n                                  address = provider.getPrimaryAddress();\n                                  return _context3.abrupt(\"return\", address && provider.getBalance(address));\n\n                                case 2:\n                                case \"end\":\n                                  return _context3.stop();\n                              }\n                            }\n                          }, _callee3);\n                        }));\n\n                        function get() {\n                          return _get3.apply(this, arguments);\n                        }\n\n                        return get;\n                      }()\n                    }\n                  }\n                });\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4);\n      }));\n\n      function wallet(_x) {\n        return _wallet.apply(this, arguments);\n      }\n\n      return wallet;\n    }(),\n    type: 'hardware',\n    desktop: true,\n    mobile: true,\n    osExclusions: ['iOS'],\n    preferred: preferred\n  };\n}\n\nfunction trezorProvider(_x2) {\n  return _trezorProvider.apply(this, arguments);\n}\n\nfunction _trezorProvider() {\n  _trezorProvider = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee13(options) {\n    var TrezorConnectLibrary, EthereumTx, ethUtil, TrezorConnect, DEVICE_EVENT, DEVICE, networkId, email, appUrl, rpcUrl, BigNumber, networkName, resetWalletState, dPath, addressToPath, enabled, customPath, account, provider, disconnect, setPath, _setPath, isCustomPath, enable, getAddress, _getAddress, addresses, setPrimaryAccount, getPublicKey, _getPublicKey, getPrimaryAddress, getMoreAccounts, _getMoreAccounts, _getAccounts, _getAccounts2, getBalances, getBalance, trezorSignTransaction, _signTransaction, _signTransaction2, _signMessage, _signMessage2;\n\n    return regeneratorRuntime.wrap(function _callee13$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            _signMessage2 = function _signMessage4() {\n              _signMessage2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee12(message) {\n                var _, address, path;\n\n                return regeneratorRuntime.wrap(function _callee12$(_context12) {\n                  while (1) {\n                    switch (_context12.prev = _context12.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context12.next = 3;\n                          break;\n                        }\n\n                        _context12.next = 3;\n                        return enable();\n\n                      case 3:\n                        _ = _slicedToArray(_toConsumableArray(addressToPath.entries())[0], 2), address = _[0], path = _[1];\n                        return _context12.abrupt(\"return\", new Promise(function (resolve, reject) {\n                          TrezorConnect.ethereumSignMessage({\n                            path: path,\n                            message: ethUtil.stripHexPrefix(message.data),\n                            hex: true\n                          }).then(function (response) {\n                            if (response.success) {\n                              if (response.payload.address !== ethUtil.toChecksumAddress(address)) {\n                                reject(new Error('signature doesnt match the right address'));\n                              }\n\n                              var signature = \"0x\".concat(response.payload.signature);\n                              resolve(signature);\n                            } else {\n                              reject(new Error(response.payload && response.payload.error || 'There was an error signing a message'));\n                            }\n                          });\n                        }));\n\n                      case 5:\n                      case \"end\":\n                        return _context12.stop();\n                    }\n                  }\n                }, _callee12);\n              }));\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signMessage = function _signMessage3(_x9) {\n              return _signMessage2.apply(this, arguments);\n            };\n\n            _signTransaction2 = function _signTransaction4() {\n              _signTransaction2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee11(transactionData) {\n                var path, transaction, trezorResult, signature;\n                return regeneratorRuntime.wrap(function _callee11$(_context11) {\n                  while (1) {\n                    switch (_context11.prev = _context11.next) {\n                      case 0:\n                        if (!(addressToPath.size === 0)) {\n                          _context11.next = 3;\n                          break;\n                        }\n\n                        _context11.next = 3;\n                        return enable();\n\n                      case 3:\n                        path = _toConsumableArray(addressToPath.values())[0];\n                        transaction = new EthereumTx.Transaction(transactionData, {\n                          chain: networkName(networkId)\n                        });\n                        _context11.next = 7;\n                        return trezorSignTransaction(path, transactionData);\n\n                      case 7:\n                        trezorResult = _context11.sent;\n\n                        if (trezorResult.success) {\n                          _context11.next = 10;\n                          break;\n                        }\n\n                        throw new Error(trezorResult.payload.error);\n\n                      case 10:\n                        signature = trezorResult.payload;\n                        transaction.v = signature.v;\n                        transaction.r = signature.r;\n                        transaction.s = signature.s;\n                        return _context11.abrupt(\"return\", \"0x\".concat(transaction.serialize().toString('hex')));\n\n                      case 15:\n                      case \"end\":\n                        return _context11.stop();\n                    }\n                  }\n                }, _callee11);\n              }));\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            _signTransaction = function _signTransaction3(_x8) {\n              return _signTransaction2.apply(this, arguments);\n            };\n\n            trezorSignTransaction = function _trezorSignTransactio(path, transactionData) {\n              var nonce = transactionData.nonce,\n                  gasPrice = transactionData.gasPrice,\n                  gas = transactionData.gas,\n                  to = transactionData.to,\n                  value = transactionData.value,\n                  data = transactionData.data;\n              return TrezorConnect.ethereumSignTransaction({\n                path: path,\n                transaction: {\n                  nonce: nonce,\n                  gasPrice: gasPrice,\n                  gasLimit: gas,\n                  to: to,\n                  value: value || '',\n                  data: data || '',\n                  chainId: networkId\n                }\n              });\n            };\n\n            getBalance = function _getBalance(address) {\n              return new Promise(function (resolve, reject) {\n                provider.sendAsync({\n                  jsonrpc: '2.0',\n                  method: 'eth_getBalance',\n                  params: [address, 'latest'],\n                  id: 42\n                }, function (e, res) {\n                  e && reject(e);\n                  var result = res && res.result;\n\n                  if (result != null) {\n                    resolve(new BigNumber(result).toString(10));\n                  } else {\n                    resolve(null);\n                  }\n                });\n              });\n            };\n\n            getBalances = function _getBalances(addresses) {\n              return Promise.all(addresses.map(function (address) {\n                return new Promise( /*#__PURE__*/function () {\n                  var _ref3 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee5(resolve) {\n                    var balance;\n                    return regeneratorRuntime.wrap(function _callee5$(_context5) {\n                      while (1) {\n                        switch (_context5.prev = _context5.next) {\n                          case 0:\n                            _context5.next = 2;\n                            return getBalance(address);\n\n                          case 2:\n                            balance = _context5.sent;\n                            resolve({\n                              address: address,\n                              balance: balance\n                            });\n\n                          case 4:\n                          case \"end\":\n                            return _context5.stop();\n                        }\n                      }\n                    }, _callee5);\n                  }));\n\n                  return function (_x7) {\n                    return _ref3.apply(this, arguments);\n                  };\n                }());\n              }));\n            };\n\n            _getAccounts2 = function _getAccounts4() {\n              _getAccounts2 = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee10(getMore) {\n                var addressInfo;\n                return regeneratorRuntime.wrap(function _callee10$(_context10) {\n                  while (1) {\n                    switch (_context10.prev = _context10.next) {\n                      case 0:\n                        if (enabled) {\n                          _context10.next = 2;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", [undefined]);\n\n                      case 2:\n                        if (!(addressToPath.size > 0 && !getMore)) {\n                          _context10.next = 4;\n                          break;\n                        }\n\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 4:\n                        if (dPath === '') {\n                          dPath = TREZOR_DEFAULT_PATH;\n                        }\n\n                        if (account) {\n                          _context10.next = 15;\n                          break;\n                        }\n\n                        _context10.prev = 6;\n                        _context10.next = 9;\n                        return getPublicKey();\n\n                      case 9:\n                        account = _context10.sent;\n                        _context10.next = 15;\n                        break;\n\n                      case 12:\n                        _context10.prev = 12;\n                        _context10.t0 = _context10[\"catch\"](6);\n                        throw _context10.t0;\n\n                      case 15:\n                        addressInfo = generateAddresses(account, addressToPath.size);\n                        addressInfo.forEach(function (_ref4) {\n                          var dPath = _ref4.dPath,\n                              address = _ref4.address;\n                          addressToPath.set(address, dPath);\n                        });\n                        return _context10.abrupt(\"return\", addresses());\n\n                      case 18:\n                      case \"end\":\n                        return _context10.stop();\n                    }\n                  }\n                }, _callee10, null, [[6, 12]]);\n              }));\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getAccounts = function _getAccounts3(_x6) {\n              return _getAccounts2.apply(this, arguments);\n            };\n\n            _getMoreAccounts = function _getMoreAccounts3() {\n              _getMoreAccounts = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee9() {\n                var accounts;\n                return regeneratorRuntime.wrap(function _callee9$(_context9) {\n                  while (1) {\n                    switch (_context9.prev = _context9.next) {\n                      case 0:\n                        _context9.next = 2;\n                        return _getAccounts(true);\n\n                      case 2:\n                        accounts = _context9.sent;\n                        return _context9.abrupt(\"return\", getBalances(accounts));\n\n                      case 4:\n                      case \"end\":\n                        return _context9.stop();\n                    }\n                  }\n                }, _callee9);\n              }));\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getMoreAccounts = function _getMoreAccounts2() {\n              return _getMoreAccounts.apply(this, arguments);\n            };\n\n            getPrimaryAddress = function _getPrimaryAddress() {\n              return enabled ? addresses()[0] : undefined;\n            };\n\n            _getPublicKey = function _getPublicKey3() {\n              _getPublicKey = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee8() {\n                var result;\n                return regeneratorRuntime.wrap(function _callee8$(_context8) {\n                  while (1) {\n                    switch (_context8.prev = _context8.next) {\n                      case 0:\n                        if (dPath) {\n                          _context8.next = 2;\n                          break;\n                        }\n\n                        throw new Error('a derivation path is needed to get the public key');\n\n                      case 2:\n                        _context8.prev = 2;\n                        _context8.next = 5;\n                        return TrezorConnect.getPublicKey({\n                          path: dPath,\n                          coin: 'eth'\n                        });\n\n                      case 5:\n                        result = _context8.sent;\n\n                        if (result.success) {\n                          _context8.next = 8;\n                          break;\n                        }\n\n                        throw new Error(result.payload.error);\n\n                      case 8:\n                        account = {\n                          publicKey: result.payload.publicKey,\n                          chainCode: result.payload.chainCode,\n                          path: result.payload.serializedPath\n                        };\n                        return _context8.abrupt(\"return\", account);\n\n                      case 12:\n                        _context8.prev = 12;\n                        _context8.t0 = _context8[\"catch\"](2);\n                        throw new Error('There was an error accessing your Trezor accounts.');\n\n                      case 15:\n                      case \"end\":\n                        return _context8.stop();\n                    }\n                  }\n                }, _callee8, null, [[2, 12]]);\n              }));\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            getPublicKey = function _getPublicKey2() {\n              return _getPublicKey.apply(this, arguments);\n            };\n\n            setPrimaryAccount = function _setPrimaryAccount(address) {\n              // make a copy and put in an array\n              var accounts = _toConsumableArray(addressToPath.entries());\n\n              var accountIndex = accounts.findIndex(function (_ref) {\n                var _ref2 = _slicedToArray(_ref, 1),\n                    accountAddress = _ref2[0];\n\n                return accountAddress === address;\n              }); // pull the item at the account index out of the array and place at the front\n\n              accounts.unshift(accounts.splice(accountIndex, 1)[0]); // reassign addressToPath to new ordered accounts\n\n              addressToPath = new Map(accounts);\n            };\n\n            addresses = function _addresses() {\n              return Array.from(addressToPath.keys());\n            };\n\n            _getAddress = function _getAddress3() {\n              _getAddress = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee7(path) {\n                var errorMsg, result;\n                return regeneratorRuntime.wrap(function _callee7$(_context7) {\n                  while (1) {\n                    switch (_context7.prev = _context7.next) {\n                      case 0:\n                        errorMsg = \"Unable to derive address from path \".concat(path);\n                        _context7.prev = 1;\n                        _context7.next = 4;\n                        return TrezorConnect.ethereumGetAddress({\n                          path: path,\n                          showOnTrezor: false\n                        });\n\n                      case 4:\n                        result = _context7.sent;\n\n                        if (result.success) {\n                          _context7.next = 7;\n                          break;\n                        }\n\n                        throw new Error(errorMsg);\n\n                      case 7:\n                        return _context7.abrupt(\"return\", result.payload.address);\n\n                      case 10:\n                        _context7.prev = 10;\n                        _context7.t0 = _context7[\"catch\"](1);\n                        throw new Error(errorMsg);\n\n                      case 13:\n                      case \"end\":\n                        return _context7.stop();\n                    }\n                  }\n                }, _callee7, null, [[1, 10]]);\n              }));\n              return _getAddress.apply(this, arguments);\n            };\n\n            getAddress = function _getAddress2(_x5) {\n              return _getAddress.apply(this, arguments);\n            };\n\n            enable = function _enable() {\n              enabled = true;\n              return _getAccounts();\n            };\n\n            isCustomPath = function _isCustomPath() {\n              return customPath;\n            };\n\n            _setPath = function _setPath3() {\n              _setPath = _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee6(path, custom) {\n                var address;\n                return regeneratorRuntime.wrap(function _callee6$(_context6) {\n                  while (1) {\n                    switch (_context6.prev = _context6.next) {\n                      case 0:\n                        if (isValidPath(path)) {\n                          _context6.next = 2;\n                          break;\n                        }\n\n                        return _context6.abrupt(\"return\", false);\n\n                      case 2:\n                        if (path !== dPath) {\n                          // clear any exsting addresses if different path\n                          addressToPath = new Map();\n                        }\n\n                        if (!custom) {\n                          _context6.next = 17;\n                          break;\n                        }\n\n                        _context6.prev = 4;\n                        _context6.next = 7;\n                        return getAddress(path);\n\n                      case 7:\n                        address = _context6.sent;\n                        addressToPath.set(address, path);\n                        dPath = path;\n                        customPath = true;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 14:\n                        _context6.prev = 14;\n                        _context6.t0 = _context6[\"catch\"](4);\n                        throw new Error(\"There was a problem deriving an address from path \".concat(path));\n\n                      case 17:\n                        customPath = false;\n                        dPath = path;\n                        return _context6.abrupt(\"return\", true);\n\n                      case 20:\n                      case \"end\":\n                        return _context6.stop();\n                    }\n                  }\n                }, _callee6, null, [[4, 14]]);\n              }));\n              return _setPath.apply(this, arguments);\n            };\n\n            setPath = function _setPath2(_x3, _x4) {\n              return _setPath.apply(this, arguments);\n            };\n\n            disconnect = function _disconnect() {\n              dPath = '';\n              addressToPath = new Map();\n              enabled = false;\n              provider.stop();\n            };\n\n            _context13.next = 25;\n            return import('trezor-connect');\n\n          case 25:\n            TrezorConnectLibrary = _context13.sent;\n            _context13.next = 28;\n            return import('ethereumjs-tx');\n\n          case 28:\n            EthereumTx = _context13.sent;\n            _context13.next = 31;\n            return import('ethereumjs-util');\n\n          case 31:\n            ethUtil = _context13.sent;\n            TrezorConnect = TrezorConnectLibrary[\"default\"], DEVICE_EVENT = TrezorConnectLibrary.DEVICE_EVENT, DEVICE = TrezorConnectLibrary.DEVICE;\n            networkId = options.networkId, email = options.email, appUrl = options.appUrl, rpcUrl = options.rpcUrl, BigNumber = options.BigNumber, networkName = options.networkName, resetWalletState = options.resetWalletState;\n            dPath = '';\n            addressToPath = new Map();\n            enabled = false;\n            customPath = false;\n            TrezorConnect.manifest({\n              email: email,\n              appUrl: appUrl\n            });\n            provider = createProvider({\n              getAccounts: function getAccounts(callback) {\n                _getAccounts().then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signTransaction: function signTransaction(transactionData, callback) {\n                _signTransaction(transactionData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processMessage: function processMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              processPersonalMessage: function processPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signMessage: function signMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              signPersonalMessage: function signPersonalMessage(messageData, callback) {\n                _signMessage(messageData).then(function (res) {\n                  return callback(null, res);\n                })[\"catch\"](function (err) {\n                  return callback(err, null);\n                });\n              },\n              rpcUrl: rpcUrl\n            });\n            TrezorConnect.on(DEVICE_EVENT, function (event) {\n              if (event.type === DEVICE.DISCONNECT) {\n                provider.stop();\n                resetWalletState({\n                  disconnected: true,\n                  walletName: 'Trezor'\n                });\n              }\n            });\n            provider.setPath = setPath;\n            provider.dPath = dPath;\n            provider.enable = enable;\n            provider.setPrimaryAccount = setPrimaryAccount;\n            provider.getPrimaryAddress = getPrimaryAddress;\n            provider.getAccounts = _getAccounts;\n            provider.getMoreAccounts = getMoreAccounts;\n            provider.getBalance = getBalance;\n            provider.getBalances = getBalances;\n            provider.send = provider.sendAsync;\n            provider.disconnect = disconnect;\n            provider.isCustomPath = isCustomPath;\n            return _context13.abrupt(\"return\", provider);\n\n          case 54:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    }, _callee13);\n  }));\n  return _trezorProvider.apply(this, arguments);\n}\n\nexport default trezor;","module.exports = require('./lib')(require('./lib/elliptic'))\n","var assert = require('assert')\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = require('crypto')\nvar bs58check = require('bs58check')\nvar secp256k1 = require('secp256k1')\n\nvar MASTER_SECRET = Buffer.from('Bitcoin seed', 'utf8')\nvar HARDENED_OFFSET = 0x80000000\nvar LEN = 78\n\n// Bitcoin hardcoded by default, can use package `coininfo` for others\nvar BITCOIN_VERSIONS = {private: 0x0488ADE4, public: 0x0488B21E}\n\nfunction HDKey (versions) {\n  this.versions = versions || BITCOIN_VERSIONS\n  this.depth = 0\n  this.index = 0\n  this._privateKey = null\n  this._publicKey = null\n  this.chainCode = null\n  this._fingerprint = 0\n  this.parentFingerprint = 0\n}\n\nObject.defineProperty(HDKey.prototype, 'fingerprint', { get: function () { return this._fingerprint } })\nObject.defineProperty(HDKey.prototype, 'identifier', { get: function () { return this._identifier } })\nObject.defineProperty(HDKey.prototype, 'pubKeyHash', { get: function () { return this.identifier } })\n\nObject.defineProperty(HDKey.prototype, 'privateKey', {\n  get: function () {\n    return this._privateKey\n  },\n  set: function (value) {\n    assert.equal(value.length, 32, 'Private key must be 32 bytes.')\n    assert(secp256k1.privateKeyVerify(value) === true, 'Invalid private key')\n\n    this._privateKey = value\n    this._publicKey = Buffer.from(secp256k1.publicKeyCreate(value, true))\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicKey', {\n  get: function () {\n    return this._publicKey\n  },\n  set: function (value) {\n    assert(value.length === 33 || value.length === 65, 'Public key must be 33 or 65 bytes.')\n    assert(secp256k1.publicKeyVerify(value) === true, 'Invalid public key')\n\n    this._publicKey = Buffer.from(secp256k1.publicKeyConvert(value, true)) // force compressed point\n    this._identifier = hash160(this.publicKey)\n    this._fingerprint = this._identifier.slice(0, 4).readUInt32BE(0)\n    this._privateKey = null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'privateExtendedKey', {\n  get: function () {\n    if (this._privateKey) return bs58check.encode(serialize(this, this.versions.private, Buffer.concat([Buffer.alloc(1, 0), this.privateKey])))\n    else return null\n  }\n})\n\nObject.defineProperty(HDKey.prototype, 'publicExtendedKey', {\n  get: function () {\n    return bs58check.encode(serialize(this, this.versions.public, this.publicKey))\n  }\n})\n\nHDKey.prototype.derive = function (path) {\n  if (path === 'm' || path === 'M' || path === \"m'\" || path === \"M'\") {\n    return this\n  }\n\n  var entries = path.split('/')\n  var hdkey = this\n  entries.forEach(function (c, i) {\n    if (i === 0) {\n      assert(/^[mM]{1}/.test(c), 'Path must start with \"m\" or \"M\"')\n      return\n    }\n\n    var hardened = (c.length > 1) && (c[c.length - 1] === \"'\")\n    var childIndex = parseInt(c, 10) // & (HARDENED_OFFSET - 1)\n    assert(childIndex < HARDENED_OFFSET, 'Invalid index')\n    if (hardened) childIndex += HARDENED_OFFSET\n\n    hdkey = hdkey.deriveChild(childIndex)\n  })\n\n  return hdkey\n}\n\nHDKey.prototype.deriveChild = function (index) {\n  var isHardened = index >= HARDENED_OFFSET\n  var indexBuffer = Buffer.allocUnsafe(4)\n  indexBuffer.writeUInt32BE(index, 0)\n\n  var data\n\n  if (isHardened) { // Hardened child\n    assert(this.privateKey, 'Could not derive hardened child key')\n\n    var pk = this.privateKey\n    var zb = Buffer.alloc(1, 0)\n    pk = Buffer.concat([zb, pk])\n\n    // data = 0x00 || ser256(kpar) || ser32(index)\n    data = Buffer.concat([pk, indexBuffer])\n  } else { // Normal child\n    // data = serP(point(kpar)) || ser32(index)\n    //      = serP(Kpar) || ser32(index)\n    data = Buffer.concat([this.publicKey, indexBuffer])\n  }\n\n  var I = crypto.createHmac('sha512', this.chainCode).update(data).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hd = new HDKey(this.versions)\n\n  // Private parent key -> private child key\n  if (this.privateKey) {\n    // ki = parse256(IL) + kpar (mod n)\n    try {\n      hd.privateKey = Buffer.from(secp256k1.privateKeyTweakAdd(Buffer.from(this.privateKey), IL))\n      // throw if IL >= n || (privateKey + IL) === 0\n    } catch (err) {\n      // In case parse256(IL) >= n or ki == 0, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  // Public parent key -> public child key\n  } else {\n    // Ki = point(parse256(IL)) + Kpar\n    //    = G*IL + Kpar\n    try {\n      hd.publicKey = Buffer.from(secp256k1.publicKeyTweakAdd(Buffer.from(this.publicKey), IL, true))\n      // throw if IL >= n || (g**IL + publicKey) is infinity\n    } catch (err) {\n      // In case parse256(IL) >= n or Ki is the point at infinity, one should proceed with the next value for i\n      return this.deriveChild(index + 1)\n    }\n  }\n\n  hd.chainCode = IR\n  hd.depth = this.depth + 1\n  hd.parentFingerprint = this.fingerprint// .readUInt32BE(0)\n  hd.index = index\n\n  return hd\n}\n\nHDKey.prototype.sign = function (hash) {\n  return Buffer.from(secp256k1.ecdsaSign(hash, this.privateKey).signature)\n}\n\nHDKey.prototype.verify = function (hash, signature) {\n  return secp256k1.ecdsaVerify(\n    Uint8Array.from(signature),\n    Uint8Array.from(hash),\n    Uint8Array.from(this.publicKey)\n  )\n}\n\nHDKey.prototype.wipePrivateData = function () {\n  if (this._privateKey) crypto.randomBytes(this._privateKey.length).copy(this._privateKey)\n  this._privateKey = null\n  return this\n}\n\nHDKey.prototype.toJSON = function () {\n  return {\n    xpriv: this.privateExtendedKey,\n    xpub: this.publicExtendedKey\n  }\n}\n\nHDKey.fromMasterSeed = function (seedBuffer, versions) {\n  var I = crypto.createHmac('sha512', MASTER_SECRET).update(seedBuffer).digest()\n  var IL = I.slice(0, 32)\n  var IR = I.slice(32)\n\n  var hdkey = new HDKey(versions)\n  hdkey.chainCode = IR\n  hdkey.privateKey = IL\n\n  return hdkey\n}\n\nHDKey.fromExtendedKey = function (base58key, versions) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  versions = versions || BITCOIN_VERSIONS\n  var hdkey = new HDKey(versions)\n\n  var keyBuffer = bs58check.decode(base58key)\n\n  var version = keyBuffer.readUInt32BE(0)\n  assert(version === versions.private || version === versions.public, 'Version mismatch: does not match private or public')\n\n  hdkey.depth = keyBuffer.readUInt8(4)\n  hdkey.parentFingerprint = keyBuffer.readUInt32BE(5)\n  hdkey.index = keyBuffer.readUInt32BE(9)\n  hdkey.chainCode = keyBuffer.slice(13, 45)\n\n  var key = keyBuffer.slice(45)\n  if (key.readUInt8(0) === 0) { // private\n    assert(version === versions.private, 'Version mismatch: version does not match private')\n    hdkey.privateKey = key.slice(1) // cut off first 0x0 byte\n  } else {\n    assert(version === versions.public, 'Version mismatch: version does not match public')\n    hdkey.publicKey = key\n  }\n\n  return hdkey\n}\n\nHDKey.fromJSON = function (obj) {\n  return HDKey.fromExtendedKey(obj.xpriv)\n}\n\nfunction serialize (hdkey, version, key) {\n  // => version(4) || depth(1) || fingerprint(4) || index(4) || chain(32) || key(33)\n  var buffer = Buffer.allocUnsafe(LEN)\n\n  buffer.writeUInt32BE(version, 0)\n  buffer.writeUInt8(hdkey.depth, 4)\n\n  var fingerprint = hdkey.depth ? hdkey.parentFingerprint : 0x00000000\n  buffer.writeUInt32BE(fingerprint, 5)\n  buffer.writeUInt32BE(hdkey.index, 9)\n\n  hdkey.chainCode.copy(buffer, 13)\n  key.copy(buffer, 45)\n\n  return buffer\n}\n\nfunction hash160 (buf) {\n  var sha = crypto.createHash('sha256').update(buf).digest()\n  return crypto.createHash('ripemd160').update(sha).digest()\n}\n\nHDKey.HARDENED_OFFSET = HARDENED_OFFSET\nmodule.exports = HDKey\n","\nconst errorValues = require('./errorValues.json')\nconst FALLBACK_ERROR_CODE = require('./errorCodes.json').rpc.internal\nconst { EthereumRpcError } = require('./classes')\n\nconst JSON_RPC_SERVER_ERROR_MESSAGE = 'Unspecified server error.'\n\nconst FALLBACK_MESSAGE = 'Unspecified error message. This is a bug, please report it.'\n\nconst FALLBACK_ERROR = {\n  code: FALLBACK_ERROR_CODE,\n  message: getMessageFromCode(FALLBACK_ERROR_CODE)\n}\n\n/**\n * Gets the message for a given code, or a fallback message if the code has\n * no corresponding message.\n * \n * @param {number} code - The integer error code\n * @param {string} fallbackMessage - The fallback message\n * @return {string} The corresponding message or the fallback message\n */\nfunction getMessageFromCode(code, fallbackMessage = FALLBACK_MESSAGE) {\n\n  if (Number.isInteger(code)) {\n\n    const codeString = code.toString()\n    if (errorValues[codeString]) return errorValues[codeString].message\n\n    if (isJsonRpcServerError(code)) return JSON_RPC_SERVER_ERROR_MESSAGE\n\n    // TODO: allow valid codes and messages to be extended\n    // // EIP 1193 Status Codes\n    // if (code >= 4000 && code <= 4999) return Something?\n  }\n  return fallbackMessage\n}\n\n/**\n * Returns whether the given code is valid.\n * A code is only valid if it has a message.\n * \n * @param {number} code - The code to check\n * @return {boolean} true if the code is valid, false otherwise.\n */\nfunction isValidCode(code) {\n\n  if (!Number.isInteger(code)) return false\n\n  const codeString = code.toString()\n  if (errorValues[codeString]) return true\n\n  if (isJsonRpcServerError(code)) return true\n\n  // TODO: allow valid codes and messages to be extended\n  // // EIP 1193 Status Codes\n  // if (code >= 4000 && code <= 4999) return true\n\n  return false\n}\n\n/**\n * Serializes the given error to an Ethereum JSON RPC-compatible error object.\n * Merely copies the given error's values if it is already compatible.\n * If the given error is not fully compatible, it will be preserved on the\n * returned object's data.originalError property.\n * Adds a 'stack' property if it exists on the given error.\n *\n * @param {any} error - The error to serialize.\n * @param {object} fallbackError - The custom fallback error values if the\n * given error is invalid.\n * @return {object} A standardized error object.\n */\nfunction serializeError (error, fallbackError = FALLBACK_ERROR) {\n\n  if (\n    !fallbackError || \n    !Number.isInteger(fallbackError.code) ||\n    typeof fallbackError.message !== 'string'\n  ) {\n    throw new Error(\n      'fallbackError must contain integer number code and string message.'\n    )\n  }\n\n  if (error instanceof EthereumRpcError) {\n    return error.serialize()\n  }\n\n  const serialized = {}\n\n  if (error && isValidCode(error.code)) {\n\n    serialized.code = error.code\n\n    if (error.message && typeof error.message === 'string') {\n      serialized.message = error.message\n      if (error.hasOwnProperty('data')) serialized.data = error.data\n    } else {\n      serialized.message = getMessageFromCode(serialized.code)\n      serialized.data = { originalError: assignOriginalError(error) }\n    }\n\n  } else {\n    serialized.code = fallbackError.code\n    serialized.message = (\n      error && error.message\n        ? error.message\n        : fallbackError.message\n    )\n    serialized.data = { originalError: assignOriginalError(error) }\n  }\n\n  if (error && error.stack) serialized.stack = error.stack\n  return serialized\n}\n\n// Internal\n\nfunction isJsonRpcServerError (code) {\n  return code >= -32099 && code <= -32000\n}\n\nfunction assignOriginalError (error) {\n  if (error && typeof error === 'object' && !Array.isArray(error)) {\n    return Object.assign({}, error)\n  }\n  return error\n}\n\n// Exports\n\nmodule.exports = {\n  getMessageFromCode,\n  isValidCode,\n  serializeError,\n  JSON_RPC_SERVER_ERROR_MESSAGE,\n}\n","\nconst safeStringify = require('fast-safe-stringify')\n\n/**\n * @class JsonRpcError\n * Error subclass implementing JSON RPC 2.0 errors and Ethereum RPC errors\n * per EIP 1474.\n * Permits any integer error code.\n */\nclass EthereumRpcError extends Error {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor (code, message, data) {\n\n    if (!Number.isInteger(code)) throw new Error(\n      '\"code\" must be an integer.'\n    )\n    if (!message || typeof message !== 'string') throw new Error(\n      '\"message\" must be a nonempty string.'\n    )\n\n    super(message)\n    this.code = code\n    if (data !== undefined) this.data = data\n  }\n\n  /**\n   * Returns a plain object with all public class properties.\n   * \n   * @returns {object} The serialized error. \n   */\n  serialize() {\n    const serialized = {\n      code: this.code,\n      message: this.message,\n    }\n    if (this.data !== undefined) serialized.data = this.data\n    if (this.stack) serialized.stack = this.stack\n    return serialized\n  }\n\n  /**\n   * Return a string representation of the serialized error, omitting\n   * any circular references.\n   * \n   * @returns {string} The serialized error as a string.\n   */\n  toString() {\n    return safeStringify(\n      this.serialize(),\n      stringifyReplacer,\n      2\n    )\n  }\n}\n\n/**\n * @class EthereumRpcError\n * Error subclass implementing Ethereum Provider errors per EIP 1193.\n * Permits integer error codes in the [ 1000 <= 4999 ] range.\n */\nclass EthereumProviderError extends EthereumRpcError {\n\n  /**\n   * Create an Ethereum JSON RPC error.\n   * \n   * @param {number} code - The integer error code, in the [ 1000 <= 4999 ] range.\n   * @param {string} message - The string message.\n   * @param {any} [data] - The error data.\n   */\n  constructor(code, message, data) {\n\n    if (!isValidEthProviderCode(code)) {\n      throw new Error(\n        '\"code\" must be an integer such that: 1000 <= code <= 4999'\n      )\n    }\n\n    super(code, message, data)\n  }\n}\n\n// Internal\n\nfunction isValidEthProviderCode(code) {\n  return Number.isInteger(code) && code >= 1000 && code <= 4999\n}\n\nfunction stringifyReplacer(_, value) {\n  if (value === '[Circular]') {\n    return\n  }\n  return value\n}\n\n// Exports\n\nmodule.exports =  {\n  EthereumRpcError,\n  EthereumProviderError\n}\n","const EC = require('elliptic').ec\n\nconst ec = new EC('secp256k1')\nconst ecparams = ec.curve\n\n// Hack, we can not use bn.js@5, while elliptic uses bn.js@4\n// See https://github.com/indutny/elliptic/issues/191#issuecomment-569888758\nconst BN = ecparams.n.constructor\n\nfunction loadCompressedPublicKey (first, xbuf) {\n  let x = new BN(xbuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0) return null\n  x = x.toRed(ecparams.red)\n\n  // compute corresponding Y\n  let y = x.redSqr().redIMul(x).redIAdd(ecparams.b).redSqrt()\n  if ((first === 0x03) !== y.isOdd()) y = y.redNeg()\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadUncompressedPublicKey (first, xbuf, ybuf) {\n  let x = new BN(xbuf)\n  let y = new BN(ybuf)\n\n  // overflow\n  if (x.cmp(ecparams.p) >= 0 || y.cmp(ecparams.p) >= 0) return null\n\n  x = x.toRed(ecparams.red)\n  y = y.toRed(ecparams.red)\n\n  // is odd flag\n  if ((first === 0x06 || first === 0x07) && y.isOdd() !== (first === 0x07)) return null\n\n  // x*x*x + b = y*y\n  const x3 = x.redSqr().redIMul(x)\n  if (!y.redSqr().redISub(x3.redIAdd(ecparams.b)).isZero()) return null\n\n  return ec.keyPair({ pub: { x: x, y: y } })\n}\n\nfunction loadPublicKey (pubkey) {\n  // length should be validated in interface\n  const first = pubkey[0]\n  switch (first) {\n    case 0x02:\n    case 0x03:\n      if (pubkey.length !== 33) return null\n      return loadCompressedPublicKey(first, pubkey.subarray(1, 33))\n    case 0x04:\n    case 0x06:\n    case 0x07:\n      if (pubkey.length !== 65) return null\n      return loadUncompressedPublicKey(first, pubkey.subarray(1, 33), pubkey.subarray(33, 65))\n    default:\n      return null\n  }\n}\n\nfunction savePublicKey (output, point) {\n  const pubkey = point.encode(null, output.length === 33)\n  // Loop should be faster because we do not need create extra Uint8Array\n  // output.set(new Uint8Array(pubkey))\n  for (let i = 0; i < output.length; ++i) output[i] = pubkey[i]\n}\n\nmodule.exports = {\n  contextRandomize () {\n    return 0\n  },\n\n  privateKeyVerify (seckey) {\n    const bn = new BN(seckey)\n    return bn.cmp(ecparams.n) < 0 && !bn.isZero() ? 0 : 1\n  },\n\n  privateKeyNegate (seckey) {\n    const bn = new BN(seckey)\n    const negate = ecparams.n.sub(bn).umod(ecparams.n).toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(negate)\n    return 0\n  },\n\n  privateKeyTweakAdd (seckey, tweak) {\n    const bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0) return 1\n\n    bn.iadd(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn.isub(ecparams.n)\n    if (bn.isZero()) return 1\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  privateKeyTweakMul (seckey, tweak) {\n    let bn = new BN(tweak)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    bn.imul(new BN(seckey))\n    if (bn.cmp(ecparams.n) >= 0) bn = bn.umod(ecparams.n)\n\n    const tweaked = bn.toArrayLike(Uint8Array, 'be', 32)\n    seckey.set(tweaked)\n\n    return 0\n  },\n\n  publicKeyVerify (pubkey) {\n    const pair = loadPublicKey(pubkey)\n    return pair === null ? 1 : 0\n  },\n\n  publicKeyCreate (output, seckey) {\n    const bn = new BN(seckey)\n    if (bn.cmp(ecparams.n) >= 0 || bn.isZero()) return 1\n\n    const point = ec.keyFromPrivate(seckey).getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyConvert (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyNegate (output, pubkey) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const point = pair.getPublic()\n    point.y = point.y.redNeg()\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyCombine (output, pubkeys) {\n    const pairs = new Array(pubkeys.length)\n    for (let i = 0; i < pubkeys.length; ++i) {\n      pairs[i] = loadPublicKey(pubkeys[i])\n      if (pairs[i] === null) return 1\n    }\n\n    let point = pairs[0].getPublic()\n    for (let i = 1; i < pairs.length; ++i) point = point.add(pairs[i].pub)\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakAdd (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0) return 2\n\n    const point = pair.getPublic().add(ecparams.g.mul(tweak))\n    if (point.isInfinity()) return 2\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  publicKeyTweakMul (output, pubkey, tweak) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    tweak = new BN(tweak)\n    if (tweak.cmp(ecparams.n) >= 0 || tweak.isZero()) return 2\n\n    const point = pair.getPublic().mul(tweak)\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  signatureNormalize (sig) {\n    const r = new BN(sig.subarray(0, 32))\n    const s = new BN(sig.subarray(32, 64))\n    if (r.cmp(ecparams.n) >= 0 || s.cmp(ecparams.n) >= 0) return 1\n\n    if (s.cmp(ec.nh) === 1) {\n      sig.set(ecparams.n.sub(s).toArrayLike(Uint8Array, 'be', 32), 32)\n    }\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureExport (obj, sig) {\n    const sigR = sig.subarray(0, 32)\n    const sigS = sig.subarray(32, 64)\n    if (new BN(sigR).cmp(ecparams.n) >= 0) return 1\n    if (new BN(sigS).cmp(ecparams.n) >= 0) return 1\n\n    const { output } = obj\n\n    // Prepare R\n    let r = output.subarray(4, 4 + 33)\n    r[0] = 0x00\n    r.set(sigR, 1)\n\n    let lenR = 33\n    let posR = 0\n    for (; lenR > 1 && r[posR] === 0x00 && !(r[posR + 1] & 0x80); --lenR, ++posR);\n\n    r = r.subarray(posR)\n    if (r[0] & 0x80) return 1\n    if (lenR > 1 && (r[0] === 0x00) && !(r[1] & 0x80)) return 1\n\n    // Prepare S\n    let s = output.subarray(6 + 33, 6 + 33 + 33)\n    s[0] = 0x00\n    s.set(sigS, 1)\n\n    let lenS = 33\n    let posS = 0\n    for (; lenS > 1 && s[posS] === 0x00 && !(s[posS + 1] & 0x80); --lenS, ++posS);\n\n    s = s.subarray(posS)\n    if (s[0] & 0x80) return 1\n    if (lenS > 1 && (s[0] === 0x00) && !(s[1] & 0x80)) return 1\n\n    // Set output length for return\n    obj.outputlen = 6 + lenR + lenS\n\n    // Output in specified format\n    // 0x30 [total-length] 0x02 [R-length] [R] 0x02 [S-length] [S]\n    output[0] = 0x30\n    output[1] = obj.outputlen - 2\n    output[2] = 0x02\n    output[3] = r.length\n    output.set(r, 4)\n    output[4 + lenR] = 0x02\n    output[5 + lenR] = s.length\n    output.set(s, 6 + lenR)\n\n    return 0\n  },\n\n  // Copied 1-to-1 from https://github.com/bitcoinjs/bip66/blob/master/index.js\n  // Adapted for Uint8Array instead Buffer\n  signatureImport (output, sig) {\n    if (sig.length < 8) return 1\n    if (sig.length > 72) return 1\n    if (sig[0] !== 0x30) return 1\n    if (sig[1] !== sig.length - 2) return 1\n    if (sig[2] !== 0x02) return 1\n\n    const lenR = sig[3]\n    if (lenR === 0) return 1\n    if (5 + lenR >= sig.length) return 1\n    if (sig[4 + lenR] !== 0x02) return 1\n\n    const lenS = sig[5 + lenR]\n    if (lenS === 0) return 1\n    if ((6 + lenR + lenS) !== sig.length) return 1\n\n    if (sig[4] & 0x80) return 1\n    if (lenR > 1 && (sig[4] === 0x00) && !(sig[5] & 0x80)) return 1\n\n    if (sig[lenR + 6] & 0x80) return 1\n    if (lenS > 1 && (sig[lenR + 6] === 0x00) && !(sig[lenR + 7] & 0x80)) return 1\n\n    let sigR = sig.subarray(4, 4 + lenR)\n    if (sigR.length === 33 && sigR[0] === 0x00) sigR = sigR.subarray(1)\n    if (sigR.length > 32) return 1\n\n    let sigS = sig.subarray(6 + lenR)\n    if (sigS.length === 33 && sigS[0] === 0x00) sigS = sigS.slice(1)\n    if (sigS.length > 32) throw new Error('S length is too long')\n\n    let r = new BN(sigR)\n    if (r.cmp(ecparams.n) >= 0) r = new BN(0)\n\n    let s = new BN(sig.subarray(6 + lenR))\n    if (s.cmp(ecparams.n) >= 0) s = new BN(0)\n\n    output.set(r.toArrayLike(Uint8Array, 'be', 32), 0)\n    output.set(s.toArrayLike(Uint8Array, 'be', 32), 32)\n\n    return 0\n  },\n\n  ecdsaSign (obj, message, seckey, data, noncefn) {\n    if (noncefn) {\n      const _noncefn = noncefn\n      noncefn = (counter) => {\n        const nonce = _noncefn(message, seckey, null, data, counter)\n\n        const isValid = nonce instanceof Uint8Array && nonce.length === 32\n        if (!isValid) throw new Error('This is the way')\n\n        return new BN(nonce)\n      }\n    }\n\n    const d = new BN(seckey)\n    if (d.cmp(ecparams.n) >= 0 || d.isZero()) return 1\n\n    let sig\n    try {\n      sig = ec.sign(message, seckey, { canonical: true, k: noncefn, pers: data })\n    } catch (err) {\n      return 1\n    }\n\n    obj.signature.set(sig.r.toArrayLike(Uint8Array, 'be', 32), 0)\n    obj.signature.set(sig.s.toArrayLike(Uint8Array, 'be', 32), 32)\n    obj.recid = sig.recoveryParam\n\n    return 0\n  },\n\n  ecdsaVerify (sig, msg32, pubkey) {\n    const sigObj = { r: sig.subarray(0, 32), s: sig.subarray(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n    if (sigs.cmp(ec.nh) === 1 || sigr.isZero() || sigs.isZero()) return 3\n\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 2\n\n    const point = pair.getPublic()\n    const isValid = ec.verify(msg32, sigObj, point)\n    return isValid ? 0 : 3\n  },\n\n  ecdsaRecover (output, sig, recid, msg32) {\n    const sigObj = { r: sig.slice(0, 32), s: sig.slice(32, 64) }\n\n    const sigr = new BN(sigObj.r)\n    const sigs = new BN(sigObj.s)\n    if (sigr.cmp(ecparams.n) >= 0 || sigs.cmp(ecparams.n) >= 0) return 1\n\n    if (sigr.isZero() || sigs.isZero()) return 2\n\n    // Can throw `throw new Error('Unable to find sencond key candinate');`\n    let point\n    try {\n      point = ec.recoverPubKey(msg32, sigObj, recid)\n    } catch (err) {\n      return 2\n    }\n\n    savePublicKey(output, point)\n\n    return 0\n  },\n\n  ecdh (output, pubkey, seckey, data, hashfn, xbuf, ybuf) {\n    const pair = loadPublicKey(pubkey)\n    if (pair === null) return 1\n\n    const scalar = new BN(seckey)\n    if (scalar.cmp(ecparams.n) >= 0 || scalar.isZero()) return 2\n\n    const point = pair.getPublic().mul(scalar)\n\n    if (hashfn === undefined) {\n      const data = point.encode(null, true)\n      const sha256 = ec.hash().update(data).digest()\n      for (let i = 0; i < 32; ++i) output[i] = sha256[i]\n    } else {\n      if (!xbuf) xbuf = new Uint8Array(32)\n      const x = point.getX().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) xbuf[i] = x[i]\n\n      if (!ybuf) ybuf = new Uint8Array(32)\n      const y = point.getY().toArray('be', 32)\n      for (let i = 0; i < 32; ++i) ybuf[i] = y[i]\n\n      const hash = hashfn(xbuf, ybuf, data)\n\n      const isValid = hash instanceof Uint8Array && hash.length === output.length\n      if (!isValid) return 2\n\n      output.set(hash)\n    }\n\n    return 0\n  }\n}\n"],"sourceRoot":""}