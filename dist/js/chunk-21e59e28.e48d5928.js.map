{"version":3,"sources":["webpack:///./src/components/withdraw/WithdrawRouter.vue?d46d","webpack:///./src/components/withdraw/Withdraw.vue?e3ae","webpack:///./src/components/withdraw/WithdrawRouter.vue?0902","webpack:///./src/components/withdraw/Withdraw.vue?d847","webpack:///src/components/withdraw/Withdraw.vue","webpack:///./src/components/withdraw/Withdraw.vue?6855","webpack:///./src/components/withdraw/Withdraw.vue","webpack:///src/components/withdraw/WithdrawRouter.vue","webpack:///./src/components/withdraw/WithdrawRouter.vue?2e5a","webpack:///./src/components/withdraw/WithdrawRouter.vue","webpack:///./src/components/ren/LoadingComponent.vue?d8bf","webpack:///src/components/ren/LoadingComponent.vue","webpack:///./src/components/ren/LoadingComponent.vue?e70b","webpack:///./src/components/ren/LoadingComponent.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","directives","name","rawName","value","expression","_v","includes","currentPool","attrs","domProps","Array","isArray","swapbtc","_i","on","$event","$$a","$$el","target","$$c","checked","$$v","$$i","concat","slice","publicPath","hasIncomplete","_s","loaded","_e","staticRenderFns","showstaked","style","composing","share","handle_change_share","_l","Object","keys","currencies","currency","i","_obj","class","withdrawc","getTokenIcon","_f","inputs","ref","refInFor","inputStyles","$set","handle_change_amounts","_m","to_currency","handleCheck","donate_dust","_q","maxSlippage","customippageDisabled","customSlippageDisabled","maxInputSlippage","currentTarget","showModal","pendingSNXRewards","toFixed","withdrawADAI","claimYFIaDAI","inf_approval","slippage","warninglow","show_nobalance","handle_remove_liquidity","loadingAction","oldBalance","migrateUSDT","waitingMessage","estimateGas","gasPrice","ethPrice","_b","show_nobalance_i","staked_balance","showadvancedoptions","unstakepercentage","unstakePercentageInvalid","unstakeStaked","console","log","decoded","length","amounts","push","map","dismiss","token_amount","component"],"mappings":"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","file":"js/chunk-21e59e28.e48d5928.js","sourcesContent":["import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawRouter.vue?vue&type=style&index=0&id=269c65bd&scoped=true&lang=css&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawRouter.vue?vue&type=style&index=0&id=269c65bd&scoped=true&lang=css&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&id=31e64fd1&lang=less&scoped=true&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=style&index=0&id=31e64fd1&lang=less&scoped=true&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"window white\"},[_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.swapbtc),expression:\"swapbtc\"}],staticClass:\"info-message gentle-message betaversion\"},[_vm._v(\" This is a beta version. Please test with small amounts and use with caution. \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(['ren', 'sbtc'].includes(_vm.currentPool)),expression:\"['ren', 'sbtc'].includes(currentPool)\"}],staticClass:\"swapBTC-container info-message gentle-message\"},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.swapbtc),expression:\"swapbtc\"}],attrs:{\"id\":\"swapbtc\",\"type\":\"checkbox\",\"value\":\"swapbtc\"},domProps:{\"checked\":Array.isArray(_vm.swapbtc)?_vm._i(_vm.swapbtc,\"swapbtc\")>-1:(_vm.swapbtc)},on:{\"change\":function($event){var $$a=_vm.swapbtc,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=\"swapbtc\",$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.swapbtc=$$a.concat([$$v]))}else{$$i>-1&&(_vm.swapbtc=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.swapbtc=$$c}}}}),_c('label',{attrs:{\"for\":\"swapbtc\"}},[_vm._v(\"Withdraw \"),_c('img',{staticClass:\"token-icon vamiddle\",attrs:{\"src\":_vm.publicPath + 'tokens/btc.svg'}}),_c('a',{attrs:{\"href\":\"https://guides.curve.fi/how-to-swap-bitcoin-for-wbtc-or-renbtc/\",\"rel\":\"noopener norefferer\"}},[_vm._v(\"[?]\")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.hasIncomplete > 0 && _vm.swapbtc == false),expression:\"hasIncomplete > 0 && swapbtc == false\"}]},[_vm._v(\" (\"+_vm._s(_vm.hasIncomplete)+\" incomplete tx) \")])]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loading),expression:\"loading\"}],staticClass:\"loading line\"})]),(_vm.swapbtc)?_c('withdraw-native',{on:{\"loaded\":_vm.loaded}}):_vm._e(),(!_vm.swapbtc || (_vm.swapbtc && !_vm.loaded))?_c('withdraw'):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"add-liquidity\"},[_c('div',{staticClass:\"percentage-section\"},[_c('div',{staticClass:\"title\"},[_vm._v(\" Share of liquidity (%) \"),_c('span',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.showstaked),expression:\"showstaked\"}],attrs:{\"id\":\"showstaked\",\"type\":\"checkbox\",\"name\":\"showstaked\"},domProps:{\"checked\":Array.isArray(_vm.showstaked)?_vm._i(_vm.showstaked,null)>-1:(_vm.showstaked)},on:{\"change\":function($event){var $$a=_vm.showstaked,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.showstaked=$$a.concat([$$v]))}else{$$i>-1&&(_vm.showstaked=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.showstaked=$$c}}}}),_c('label',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc', 'y', 'iearn'].includes(_vm.currentPool)),expression:\"['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\"}],attrs:{\"for\":\"showstaked\"}},[_vm._v(\" Show staked \")])])]),_c('ul',[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.share),expression:\"share\"}],style:(_vm.shareStyles),attrs:{\"type\":\"text\",\"id\":\"liquidity-share\",\"name\":\"liquidity-share\"},domProps:{\"value\":(_vm.share)},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.share=$event.target.value},_vm.handle_change_share],\"focus\":_vm.handle_change_share}})])])]),_c('div',{staticClass:\"currencies-section\"},[_c('label',[_vm._v(\"Currencies:\")]),_c('ul',[_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',[_c('label',{staticClass:\"currency_label\",attrs:{\"for\":'currency_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.withdrawc),expression:\"withdrawc\"}],staticClass:\"token-name\"},[_vm._v(_vm._s(_vm.currencies[currency])+\" \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!(currency == 'usdt' && _vm.currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(\"(in \"+_vm._s(_vm._f(\"capitalize\")(currency))+\")\")])]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm._f(\"capitalize\")(currency)))]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\"}]},[_vm._v(_vm._s(_vm.currencies[currency]))])]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inputs[i]),expression:\"inputs[i]\"}],ref:(\"inputs\" + i),refInFor:true,style:(_vm.inputStyles[i]),attrs:{\"type\":\"text\",\"id\":'currency_'+i,\"name\":\"from_cur\",\"disabled\":_vm.currentPool == 'susd'},domProps:{\"value\":(_vm.inputs[i])},on:{\"input\":[function($event){if($event.target.composing){ return; }_vm.$set(_vm.inputs, i, $event.target.value)},function($event){return _vm.handle_change_amounts(i)}],\"focus\":function($event){return _vm.handle_change_amounts(i)}}})])}),_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!['susd','susdv2','tbtc','ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!['susd','susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\"}]},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.withdrawc),expression:\"withdrawc\"}],attrs:{\"id\":\"withdrawc\",\"type\":\"checkbox\",\"name\":\"withdrawc\"},domProps:{\"checked\":Array.isArray(_vm.withdrawc)?_vm._i(_vm.withdrawc,null)>-1:(_vm.withdrawc)},on:{\"change\":function($event){var $$a=_vm.withdrawc,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.withdrawc=$$a.concat([$$v]))}else{$$i>-1&&(_vm.withdrawc=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.withdrawc=$$c}}}}),_c('label',{attrs:{\"for\":\"withdrawc\"}},[_vm._v(\"Withdraw wrapped\")])])],2)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}],staticClass:\"withdraw-coins-section\"},[_vm._m(0),_c('ul',{staticClass:\"withdraw-coins\"},[_c('li',{directives:[{name:\"show\",rawName:\"v-show\",value:(!['susdv2','tbtc','ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!['susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\"}]},[_c('input',{attrs:{\"type\":\"radio\",\"id\":\"to_cur_comb\",\"name\":\"to_cur\"},domProps:{\"value\":10,\"checked\":_vm.to_currency === 10},on:{\"click\":function($event){return _vm.handleCheck(10)}}}),_c('label',{attrs:{\"for\":\"to_cur_comb\"}},[_vm._v(\" Combination of all coins \"),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('span',[_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(i > 0),expression:\"i > 0\"}]},[_vm._v(\"+\")]),_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}})])})],2)]),_vm._l((Object.keys(_vm.currencies)),function(currency,i){\nvar _obj;\nreturn _c('li',{staticClass:\"withdrawin\"},[_c('input',{attrs:{\"type\":\"radio\",\"id\":'to_cur_'+i,\"name\":\"to_cur\"},domProps:{\"value\":i,\"checked\":_vm.to_currency === i},on:{\"click\":function($event){return _vm.handleCheck(i)}}}),_c('label',{attrs:{\"for\":'to_cur_'+i}},[_c('img',{class:( _obj = {'token-icon': true}, _obj[currency+'-icon'] = true, _obj['y'] =  _vm.withdrawc, _obj[_vm.currentPool] = true, _obj ),attrs:{\"src\":_vm.getTokenIcon(currency)}}),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.withdrawc),expression:\"!withdrawc\"}]},[_vm._v(\" \"+_vm._s(_vm._f(\"capitalize\")(currency))+\" \")]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.withdrawc),expression:\"withdrawc\"}]},[_vm._v(\" \"+_vm._s(_vm.currencies[currency])+\" \")])])])}),_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.donate_dust),expression:\"donate_dust\"}],attrs:{\"type\":\"checkbox\",\"id\":\"donate_dust\",\"name\":\"donate_dust\"},domProps:{\"checked\":Array.isArray(_vm.donate_dust)?_vm._i(_vm.donate_dust,null)>-1:(_vm.donate_dust)},on:{\"change\":function($event){var $$a=_vm.donate_dust,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.donate_dust=$$a.concat([$$v]))}else{$$i>-1&&(_vm.donate_dust=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.donate_dust=$$c}}}}),_c('label',{directives:[{name:\"show\",rawName:\"v-show\",value:(!['tbtc', 'ren', 'sbtc'].includes(_vm.currentPool)),expression:\"!['tbtc', 'ren', 'sbtc'].includes(currentPool)\"}],attrs:{\"for\":\"donate_dust\"}},[_vm._v(\"Donate dust \"),_vm._m(1)])])],2)]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showWithdrawSlippage),expression:\"showWithdrawSlippage\"}],staticClass:\"max-slippage-section\"},[_c('div',{staticClass:\"max-slippage\"},[_c('h2',[_vm._v(\"Max slippage:\")]),_c('ul',[_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage02\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"0.2\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"0.2\")},on:{\"change\":function($event){_vm.maxSlippage=\"0.2\"}}}),_c('label',{attrs:{\"for\":\"slippage02\"}},[_vm._v(\"0.2%\")])]),_c('li',[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxSlippage),expression:\"maxSlippage\"}],attrs:{\"id\":\"slippage1\",\"type\":\"radio\",\"name\":\"slippage\",\"checked\":\"\",\"value\":\"3\"},domProps:{\"checked\":_vm._q(_vm.maxSlippage,\"3\")},on:{\"change\":function($event){_vm.maxSlippage=\"3\"}}}),_c('label',{attrs:{\"for\":\"slippage1\"}},[_vm._v(\"3%\")])]),_c('li',[_c('input',{attrs:{\"id\":\"custom_slippage\",\"type\":\"radio\",\"name\":\"slippage\",\"value\":\"-\"},on:{\"click\":function($event){_vm.customippageDisabled = false}}}),_c('label',{attrs:{\"for\":\"custom_slippage\"},on:{\"click\":function($event){_vm.customSlippageDisabled = false}}},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.maxInputSlippage),expression:\"maxInputSlippage\"}],attrs:{\"type\":\"text\",\"id\":\"custom_slippage_input\",\"disabled\":_vm.customSlippageDisabled,\"name\":\"custom_slippage_input\"},domProps:{\"value\":(_vm.maxInputSlippage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.maxInputSlippage=$event.target.value}}}),_vm._v(\" % \")])])])])]),_c('div',{staticClass:\"gas-price-section\"},[_c('gas-price')],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showModal),expression:\"showModal\"}],staticClass:\"modal\",attrs:{\"id\":\"modal\"},on:{\"click\":function($event){if($event.target !== $event.currentTarget){ return null; }_vm.showModal = false}}},[_c('div',{staticClass:\"modal-content window white\"},[_c('fieldset',[_c('div',{staticClass:\"legend2 hoverpointer\",on:{\"click\":function($event){_vm.showModal = false}}},[_vm._v(\" [\"),_c('span',{staticClass:\"greentext\"},[_vm._v(\"■\")]),_vm._v(\"] \")]),_c('legend',[_vm._v(\"CONFIRM\")]),_c('div',{staticClass:\"modaltext\"},[_vm._v(\" Confirm \"),_c('span',{staticClass:\"warningtext\"},[_vm._v(\"burning\")]),_vm._v(\" \"+_vm._s((_vm.pendingSNXRewards / 1e18).toFixed(2))+\" YFI for \"+_vm._s((_vm.withdrawADAI / 1e18).toFixed(2))+\" aDAI \")]),_c('button',{on:{\"click\":function($event){_vm.showModal = false; _vm.claimYFIaDAI()}}},[_vm._v(\" Confirm \")]),_c('button',{staticClass:\"buttoncancel\",on:{\"click\":function($event){_vm.showModal = false}}},[_vm._v(\"Cancel\")])])])]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showInfApprovalZap),expression:\"showInfApprovalZap\"}]},[_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.inf_approval),expression:\"inf_approval\"}],attrs:{\"id\":\"inf_approval\",\"type\":\"checkbox\"},domProps:{\"checked\":Array.isArray(_vm.inf_approval)?_vm._i(_vm.inf_approval,null)>-1:(_vm.inf_approval)},on:{\"change\":function($event){var $$a=_vm.inf_approval,$$el=$event.target,$$c=$$el.checked?(true):(false);if(Array.isArray($$a)){var $$v=null,$$i=_vm._i($$a,$$v);if($$el.checked){$$i<0&&(_vm.inf_approval=$$a.concat([$$v]))}else{$$i>-1&&(_vm.inf_approval=$$a.slice(0,$$i).concat($$a.slice($$i+1)))}}else{_vm.inf_approval=$$c}}}}),_c('label',{attrs:{\"for\":\"inf_approval\"}},[_vm._v(\"Infinite approval - trust zap contract forever\")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.nobalance),expression:\"nobalance\"}],staticClass:\"info-message gentle-message amount-warning\"},[_vm._v(\" You don't have any available amount to withdraw \")]),_c('div',{staticClass:\"trade-buttons\",attrs:{\"id\":\"withdraw_buttons\"}},[_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool != 'susd'),expression:\"currentPool != 'susd'\"}],attrs:{\"id\":\"remove-liquidity\",\"disabled\":['susdv2', 'sbtc'].includes(_vm.currentPool) && _vm.slippage < -0.03 && !_vm.warninglow || _vm.show_nobalance == true},on:{\"click\":function($event){return _vm.handle_remove_liquidity()}}},[_vm._v(\" Withdraw \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.loadingAction == 1),expression:\"loadingAction == 1\"}],staticClass:\"loading line\"})]),_c('router-link',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2'].includes(_vm.currentPool) && _vm.oldBalance > 0),expression:\"['susdv2'].includes(currentPool) && oldBalance > 0\"}],staticClass:\"button\",attrs:{\"to\":\"/susd/withdraw\",\"id\":\"withdrawold\"}},[_vm._v(\"Withdraw old\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'usdt'),expression:\"currentPool == 'usdt'\"}],on:{\"click\":_vm.migrateUSDT}},[_vm._v(\"Migrate to PAX\")]),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.currentPool == 'susd'),expression:\"currentPool == 'susd'\"}],attrs:{\"id\":\"remove-liquidity\"},on:{\"click\":_vm.handle_remove_liquidity}},[_vm._v(\"Withdraw old\")]),_c('p',{directives:[{name:\"show\",rawName:\"v-show\",value:(['ren', 'sbtc'].includes(_vm.currentPool)),expression:\"['ren', 'sbtc'].includes(currentPool)\"}]},[_c('a',{attrs:{\"href\":\"https://bridge.renproject.io/\"}},[_vm._v(\" Mint/redeem renBTC \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool)),expression:\"['susdv2', 'sbtc'].includes(currentPool)\"}],attrs:{\"id\":\"mintr\"}},[_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(['susdv2', 'sbtc'].includes(_vm.currentPool)),expression:\"['susdv2', 'sbtc'].includes(currentPool)\"}],attrs:{\"href\":\"https://mintr.synthetix.io/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\"Manage staking in Mintr\")]),_c('a',{directives:[{name:\"show\",rawName:\"v-show\",value:(['y', 'iearn'].includes(_vm.currentPool)),expression:\"['y', 'iearn'].includes(currentPool)\"}],attrs:{\"href\":\"https://ygov.finance/\",\"target\":\"_blank\",\"rel\":\"noopener noreferrer\"}},[_vm._v(\" yGov. \")])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.show_loading),expression:\"show_loading\"}],staticClass:\"info-message gentle-message\"},[_c('span',{domProps:{\"innerHTML\":_vm._s(_vm.waitingMessage)}}),_vm._v(\" \"),_c('span',{staticClass:\"loading line\"})]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.estimateGas),expression:\"estimateGas\"}],staticClass:\"info-message gentle-message\"},[_vm._v(\" Estimated tx cost: \"+_vm._s((_vm.estimateGas * _vm.gasPrice / 1e9 * _vm.ethPrice).toFixed(2))+\"$ \")]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.warninglow),expression:\"warninglow\"}],staticClass:\"simple-error\"},[_vm._v(\" You're withdrawing too little amount in one coin \")]),_c('Slippage',_vm._b({},'Slippage',{show_nobalance: _vm.show_nobalance, show_nobalance_i: _vm.show_nobalance_i},false))],1),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(_vm.currentPool)),expression:\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\"}]},[_c('button',{staticClass:\"advanced-options-toggle\",on:{\"click\":function($event){_vm.showadvancedoptions = !_vm.showadvancedoptions}}},[_vm._v(\" Advanced unstaking options \"),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(!_vm.showadvancedoptions),expression:\"!showadvancedoptions\"}]},[_c('img',{attrs:{\"src\":\"/img/sdw/arrow-up@2x.png\"}})]),_c('span',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showadvancedoptions),expression:\"showadvancedoptions\"}]},[_c('img',{attrs:{\"src\":\"/img/sdw/arrow-down@2x.png\"}})])]),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.showadvancedoptions),expression:\"showadvancedoptions\"}]},[_c('div',{staticClass:\"unstaking-options\"},[_c('h2',[_vm._v(\"Advanced unstaking options:\")]),_c('ul',[_c('li',{attrs:{\"id\":\"stakedbalance\"}},[_vm._v(\" Staked tokens: \"),_c('span',{on:{\"click\":function($event){_vm.unstakepercentage = _vm.staked_balance / 1e18}}},[_vm._v(_vm._s((_vm.staked_balance / 1e18).toFixed(2)))])]),_c('li',[_c('label',{attrs:{\"for\":\"unstakepercentage\"}},[_vm._v(\"Unstake:\")]),_c('input',{directives:[{name:\"model\",rawName:\"v-model\",value:(_vm.unstakepercentage),expression:\"unstakepercentage\"}],class:{'invalid': _vm.unstakePercentageInvalid},attrs:{\"id\":\"unstakepercentage\"},domProps:{\"value\":(_vm.unstakepercentage)},on:{\"input\":function($event){if($event.target.composing){ return; }_vm.unstakepercentage=$event.target.value}}}),_c('button',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(_vm.currentPool)),expression:\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\"}],staticClass:\"unstake-btn\",attrs:{\"id\":\"unstakestaked\",\"disabled\":_vm.unstakePercentageInvalid},on:{\"click\":function($event){return _vm.unstakeStaked()}}},[_vm._v(\" Unstake staked \")])])])])])])])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('h2',[_vm._v(\" Withdraw % in: \"),_c('span',{staticClass:\"tooltip\"},[_vm._v(\" [?] \"),_c('span',{staticClass:\"tooltiptext long\"},[_vm._v(\" You can also withdraw in one coin by typing in a currency field \")])])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"tooltip\"},[_vm._v(\"[?]\"),_c('span',{staticClass:\"tooltiptext\"},[_vm._v(\"(may use less gas)\")])])}]\n\nexport { render, staticRenderFns }","<template>\n\t<div class=\"add-liquidity\">\n        <div class=\"percentage-section\">\n            <div class=\"title\">\n            \tShare of liquidity (%)\n        \t\t<span>\n                    <input id='showstaked' type='checkbox' name='showstaked' v-model = 'showstaked'>\n        \t\t    <label for='showstaked' v-show=\"['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\"> Show staked </label>\n                </span>\n            </div>\n            <ul>\n                <li>\n                    <input type=\"text\" \n                    id=\"liquidity-share\" \n                    name=\"liquidity-share\" \n                    v-model='share'\n                    @input='handle_change_share'\n                    @focus='handle_change_share'\n                    :style='shareStyles'>\n                </li>\n            </ul>\n        </div>\n        <div class=\"currencies-section\">\n            <label>Currencies:</label>\n            <ul>\n                <li v-for='(currency, i) in Object.keys(currencies)'>\n                    <label :for=\"'currency_'+i\" class='currency_label'>\n                        <img \n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\" \n                            :src='getTokenIcon(currency)'>\n                        <span class=\"token-name\" v-show='withdrawc'>{{currencies[currency]}}\n\t                    \t<span v-show=\"!(currency == 'usdt' && currentPool == 'usdt') && !['susdv2', 'ren', 'sbtc'].includes(currentPool)\">(in {{currency | capitalize}})</span>\n                    \t</span>\n                    \t<span v-show=\"!withdrawc && !['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\">{{currency | capitalize}}</span>\n                        <span v-show=\"!withdrawc && ['susdv2', 'tbtc', 'ren', 'sbtc'].includes(currentPool)\">{{currencies[currency]}}</span>\n                    </label>\n                    <input type=\"text\" \n                    :id=\"'currency_'+i\" \n                    name=\"from_cur\" \n                    v-model = 'inputs[i]'\n                    :style = \"inputStyles[i]\"\n                    :disabled = \"currentPool == 'susd'\"\n                    :ref=\"`inputs${i}`\"\n                    @input='handle_change_amounts(i)'\n                    @focus='handle_change_amounts(i)'>\n                </li>\n                <li v-show = \"!['susd','susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\">\n                    <input id=\"withdrawc\" type=\"checkbox\" name=\"withdrawc\" v-model='withdrawc'>\n                    <label for=\"withdrawc\">Withdraw wrapped</label>\n                </li>\n            </ul>\n        </div>\n        <div class=\"withdraw-coins-section\" v-show = \"currentPool != 'susd'\">\n        \t<h2>\n                Withdraw % in:\n                <span class='tooltip'> [?]\n                    <span class='tooltiptext long'>\n                        You can also withdraw in one coin by typing in a currency field\n                    </span>\n                </span>\n            </h2>\n        \t<ul class=\"withdraw-coins\">\n        \t\t<li v-show = \"!['susdv2','tbtc','ren', 'sbtc'].includes(currentPool)\">\n        \t\t\t<input type='radio' id='to_cur_comb' name=\"to_cur\" :value='10' :checked='to_currency === 10' @click='handleCheck(10)'>\n        \t\t\t<label for='to_cur_comb'>\n                        Combination of all coins\n                        <span v-for='(currency, i) in Object.keys(currencies)'>\n                            <span v-show='i > 0'>+</span>\n                            <img \n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\" \n                            :src='getTokenIcon(currency)'>\n                        </span>\n                    </label>\n        \t\t</li>\n\t\t\t\t<li v-for='(currency, i) in Object.keys(currencies)' class='withdrawin'>\n\t                <input type=\"radio\" :id=\"'to_cur_'+i\" name=\"to_cur\" :value='i' :checked='to_currency === i' @click='handleCheck(i)'>\n\t                <label :for=\"'to_cur_'+i\">\n                        <img \n                            :class=\"{'token-icon': true, [currency+'-icon']: true, 'y': withdrawc, [currentPool]: true}\" \n                            :src='getTokenIcon(currency)'> \n                            <span v-show='!withdrawc'> {{ currency | capitalize }} </span>\n                            <span v-show='withdrawc'> {{ currencies[currency] }} </span>\n                    </label>\n\t            </li>\n\t            <li>\n\t            \t<input type='checkbox' id='donate_dust' name='donate_dust' v-model='donate_dust'>\n\t            \t<label \n                        for='donate_dust' \n                        v-show=\"!['tbtc', 'ren', 'sbtc'].includes(currentPool)\">Donate dust\n                            <span class='tooltip'>[?]<span class='tooltiptext'>(may use less gas)</span>\n                        </span>\n\t            \t</label>\n\t            </li>\n        \t</ul>\n        </div>\n        <div class=\"max-slippage-section\" v-show='showWithdrawSlippage'>\n            <div class='max-slippage' ><h2>Max slippage:</h2>\n                <ul>\n                    <li>\n                        <input id=\"slippage02\" type=\"radio\" name=\"slippage\" value='0.2' v-model='maxSlippage'>\n                        <label for=\"slippage02\">0.2%</label>\n                    </li>\n                    <li>\n\n                <input id=\"slippage1\" type=\"radio\" name=\"slippage\" checked value='3' v-model='maxSlippage'>\n                <label for=\"slippage1\">3%</label>\n                    </li>\n                    <li>\n\n                <input id=\"custom_slippage\" type=\"radio\" name=\"slippage\" value='-' @click='customippageDisabled = false'>\n                <label for=\"custom_slippage\" @click='customSlippageDisabled = false'>\n                    <input type=\"text\" id=\"custom_slippage_input\" :disabled='customSlippageDisabled' name=\"custom_slippage_input\" v-model='maxInputSlippage'> %\n                </label>\n                    </li>\n                </ul>\n\n            </div>\n        </div>\n        <div class=\"gas-price-section\">\n            <gas-price></gas-price>\n        </div>\n\n        <div id='modal' class='modal' v-show='showModal' @click.self='showModal = false'>\n            <div class='modal-content window white'>\n                <fieldset>\n                    <div class='legend2 hoverpointer' @click='showModal = false'>\n                        [<span class='greentext'>■</span>]\n                    </div>\n                    <legend>CONFIRM</legend>\n                    <div class='modaltext'>\n                        Confirm <span class='warningtext'>burning</span> {{(pendingSNXRewards / 1e18).toFixed(2)}} YFI for {{(withdrawADAI / 1e18).toFixed(2)}} aDAI\n                    </div>\n                    <button @click='showModal = false; claimYFIaDAI()'> Confirm </button>\n                    <button @click='showModal = false' class='buttoncancel'>Cancel</button>\n                </fieldset>\n            </div>\n        </div>\n\n        <p v-show='showInfApprovalZap'>\n            <input id='inf_approval' type='checkbox' v-model='inf_approval'>\n            <label for='inf_approval'>Infinite approval - trust zap contract forever</label>\n        </p>\n          <div class='info-message gentle-message amount-warning' v-show = 'nobalance'>\n\t        \tYou don't have any available amount to withdraw\n\t        \t<!-- <div v-show=\"currentPool == 'susdv2'\">\n\t        \t\t(You have {{(staked_balance / 1e18) | toFixed2}} staked)\n\t        \t</div> -->\n\t      \t</div>\n        <div id='withdraw_buttons' class='trade-buttons'>\n          \n            <button id=\"remove-liquidity\"\n                :disabled=\"['susdv2', 'sbtc'].includes(currentPool) && slippage < -0.03 && !warninglow || show_nobalance == true\"\n                @click='handle_remove_liquidity()' v-show=\"currentPool != 'susd'\">\n                Withdraw <span class='loading line' v-show='loadingAction == 1'></span>\n            </button>\n            <!-- <button \n                id='remove-liquidity-unstake'\n                v-show = \"['susdv2', 'sbtc','y','iearn'].includes(currentPool) && staked_balance > 0 \"\n                :disabled = 'slippage < -0.03'\n                @click='handle_remove_liquidity(true, false, true)'>\n                Withdraw & claim <span class='loading line' v-show='loadingAction == 2'></span>\n            </button>\n            <button id='claim-snx'\n                @click='claim_SNX(false)'\n                v-show=\"['susdv2', 'sbtc','y','iearn'].includes(currentPool) && pendingSNXRewards > 0\"\n            >\n                Claim {{(pendingSNXRewards / 1e18).toFixed(2)}} {{ ['y','iearn'].includes(currentPool) ? 'YFI' : 'SNX' }}\n                <span v-show=\"currentPool == 'sbtc'\"> + {{(pendingRENRewards / 1e18).toFixed(2)}} REN</span>\n            </button> -->\n            <!-- <button id='claim-bpt'\n                @click='claim_SNX(true)'\n                v-show=\"['sbtc'].includes(currentPool) && pendingBALRewards > 0\"\n            >\n                Claim {{(pendingBALRewards / 1e18).toFixed(6)}} BPT\n            </button> -->\n            <!-- <button id='claim-snxbpt' \n                @click='claim_SNX(true, false)'\n                v-show=\"['sbtc'].includes(currentPool) && withdrawBALPool > 0\"\n            >\n                Withdraw {{(withdrawSNXPool / 1e18).toFixed(0)}} SNX + {{(withdrawRENPool / 1e18).toFixed(0)}} REN\n            </button> -->\n            <!-- <button id='claim-adai' \n                @click='showModal = true'\n                v-show=\"['y', 'iearn'].includes(currentPool) && withdrawADAI > 0\"\n            >\n                {{(pendingSNXRewards / 1e18).toFixed(2)}} YFI -> {{(withdrawADAI / 1e18).toFixed(2)}} aDAI\n                <span class='tooltip'> [?]\n                    <span class='tooltiptext long'>\n                        Burn your YFI tokens to receive aDAI tokens\n                    </span>\n                </span>\n            </button> -->\n            <!-- <button id='unstake-snx'\n                @click='handle_remove_liquidity(true, true)'\n                v-show=\"['susdv2', 'sbtc','y','iearn'].includes(currentPool) && staked_balance > 0\"\n            >\n                Unstake\n            </button> -->\n            <router-link v-show=\"['susdv2'].includes(currentPool) && oldBalance > 0\" class='button' to='/susd/withdraw' id='withdrawold'>Withdraw old</router-link>\n            <button @click='migrateUSDT' v-show=\"currentPool == 'usdt'\">Migrate to PAX</button>\n            <button id=\"remove-liquidity\" @click='handle_remove_liquidity' v-show=\"currentPool == 'susd'\">Withdraw old</button>\n            <p v-show=\"['ren', 'sbtc'].includes(currentPool)\">\n                <a href='https://bridge.renproject.io/'> Mint/redeem renBTC </a>\n            </p>\n            <div id='mintr' v-show=\"['susdv2', 'sbtc'].includes(currentPool)\">\n                <a href = 'https://mintr.synthetix.io/' v-show=\"['susdv2', 'sbtc'].includes(currentPool)\" target='_blank' rel=\"noopener noreferrer\">Manage staking in Mintr</a>\n                <a href = 'https://ygov.finance/' v-show=\"['y', 'iearn'].includes(currentPool)\" target='_blank' rel=\"noopener noreferrer\"> yGov. </a>\n            </div>\n            <div class='info-message gentle-message' v-show='show_loading'>\n                <span v-html='waitingMessage'></span> <span class='loading line'></span>\n            </div>\n            <div class='info-message gentle-message' v-show='estimateGas'>\n                Estimated tx cost: {{ (estimateGas * gasPrice / 1e9 * ethPrice).toFixed(2) }}$\n            </div>\n            <div class='simple-error' v-show='warninglow'>\n                You're withdrawing too little amount in one coin\n            </div>\n            <Slippage v-bind=\"{show_nobalance, show_nobalance_i}\"/>\n        </div>\n\n        <div v-show=\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\">\n            <!-- <button class='simplebutton advancedoptions' @click='showadvancedoptions = !showadvancedoptions'>\n                Advanced unstaking options\n                <span v-show='!showadvancedoptions'>▼</span>\n                <span v-show='showadvancedoptions'>▲</span>\n            </button> -->\n\n            <button class='advanced-options-toggle' @click='showadvancedoptions = !showadvancedoptions'>\n             Advanced unstaking options\n            <span v-show='!showadvancedoptions'>\n                <img src=\"/img/sdw/arrow-up@2x.png\">\n            </span>\n            <span v-show='showadvancedoptions'>\n                <img src=\"/img/sdw/arrow-down@2x.png\">\n            </span>\n        </button>\n            <div v-show='showadvancedoptions'>\n                <div class=\"unstaking-options\">\n                    <h2>Advanced unstaking options:</h2>\n                    <ul>\n                        <li id='stakedbalance'>\n                            Staked tokens: \n                            <span @click='unstakepercentage = staked_balance / 1e18'>{{ (staked_balance / 1e18).toFixed(2) }}</span>\n                        </li>\n                        <li>\n                            <label for='unstakepercentage'>Unstake:</label>\n                            <input id='unstakepercentage' v-model='unstakepercentage' :class=\"{'invalid': unstakePercentageInvalid}\">\n\n                            <button id='unstakestaked' \n                                class=\"unstake-btn\"\n                                v-show=\"staked_balance > 0 && ['susdv2', 'sbtc', 'y', 'iearn'].includes(currentPool)\"\n                                :disabled='unstakePercentageInvalid' \n                                @click='unstakeStaked()'\n                            >\n                                Unstake staked\n                            </button>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        </div>\n\n    </div>\n</template>\n\n<script>\n\timport Vue from 'vue'\n    import { notify, notifyHandler, notifyNotification } from '../../init'\n    import * as common from '../../utils/common.js'\n    import { getters, contract as currentContract, gas as contractGas, init } from '../../contract'\n    import allabis, { balancer_ABI, balancer_address, ERC20_abi } from '../../allabis'\n    const compound = allabis.compound\n    import * as helpers from '../../utils/helpers'\n\n    import * as gasPriceStore from '../common/gasPriceStore'\n    import GasPrice from '../common/GasPrice.vue'\n\n    import * as errorStore from '../common/errorStore'\n\n    import BN from 'bignumber.js'\n\n    import Slippage from '../common/Slippage.vue'\n\n    export default {\n    \tcomponents: {\n    \t\tSlippage, GasPrice,\n    \t},\n    \tdata: () => ({\n    \t\tshare: '100.00',\n    \t\tshareStyles: {\n    \t\t\t// backgroundColor: '#393B41',\n    \t\t\t// color: '#BABABA',\n    \t\t},\n    \t\tinputs: [],\n    \t\tinputStyles: [],\n    \t\twallet_balances: [],\n    \t\tcalc_balances: [],\n    \t\tbalances: [],\n    \t\tstaked_balance: null,\n    \t\ttoken_balance: null,\n    \t\ttoken_supply: 0,\n    \t\tshow_nobalance: false,\n    \t\tshow_nobalance_i: 0,\n    \t\tbgColor: [],\n    \t\tamounts: [],\n    \t\tto_currency: 10,\n    \t\ttest: null,\n    \t\twithdrawc: false,\n    \t\tdonate_dust: true,\n    \t\tshowstaked: false,\n            pendingSNXRewards: 0,\n            pendingRENRewards: 0,\n            pendingBALRewards: 0,\n            balancerPool: null,\n            withdrawBALPool: 0,\n            withdrawSNXPool: 0,\n            withdrawRENPool: 0,\n            withdrawADAI: 0,\n            show_loading: false,\n            waitingMessage: '',\n            showWithdrawSlippage: false,\n            maxSlippage: 0.2,\n            setSlippage: false,\n            maxInputSlippage: '',\n            customSlippageDisabled: true,\n            estimateGas: 0,\n            ethPrice: 0,\n            unstakepercentage: 0,\n            get showadvancedoptions() {\n                return localStorage.getItem('advancedoptions') === 'true' \n            },\n            set showadvancedoptions(val) {\n                localStorage.setItem('advancedoptions', val)\n            },\n            loadingAction: false,\n            warninglow: false,\n            showModal: false,\n    \t\tslippagePromise: helpers.makeCancelable(Promise.resolve()),\n            inf_approval: true,\n    \t}),\n        async created() {\n\n            this.$watch(()=>currentContract.default_account, (val, oldval) => {\n                if(!val || !oldval) return;\n                if(val.toLowerCase() == oldval.toLowerCase()) return;\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.initializedContracts, val => {\n                if(val) this.mounted();\n            })\n            this.$watch(()=>currentContract.currentContract, (val, oldval) => {\n                this.setInputStyles(false, val, oldval)\n                if(currentContract.initializedContracts) this.mounted();\n            })\n\n        },\n        watch: {\n        \tto_currency(val) {\n        \t\tif(this.share == 0 || this.share == '---') this.share = 100\n\t        \tthis.setInputStyles()\n\t        \tif(val !== null) this.handle_change_share();\n        \t},\n        \twithdrawc(val) {\n        \t\tif(this.share == '---' ) return;\n        \t\tif(!val && this.to_currency === null) this.to_currency = 10\n        \t\tif(val && this.to_currency !== null) this.to_currency = null\n        \t},\n            maxSlippage() {\n                this.setSlippage = true\n            },\n            maxInputSlippage(val) {\n                if(val) this.setSlippage = true\n            },\n        },\n        computed: {\n\t\t\t...getters,\n        \tshowMigrateNew() {\n        \t\treturn (this.currentPool == 'compound' && this.oldBalance > 0) || this.currentPool == 'susd'\n         \t},\n         \tnobalance() {\n         \t\treturn this.staked_balance && this.token_balance.plus(this.staked_balance).eq(BN(0))\n         \t},\n            getMaxSlippage() {\n                let maxSlippage = +this.maxSlippage;\n                if(this.maxInputSlippage) maxSlippage = +this.maxInputSlippage;\n                return (100 + maxSlippage)/100\n            },\n            minAmount() {\n            if(['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) return 1e-8\n                return 0.01\n            },\n            calcFee() {\n                let N_COINS = allabis[currentContract.currentContract].N_COINS\n                return this.fee / 100 * N_COINS / (4 * (N_COINS -1))\n            },\n            gasPrice() {\n                return gasPriceStore.state.gasPrice\n            },\n            gasPriceWei() {\n                return gasPriceStore.state.gasPriceWei\n            },\n            unstakePercentageInvalid() {\n                return BN(this.unstakepercentage).times(1e18).gt(BN(this.staked_balance).times(1.01))\n            },\n            unstakeAmount() {\n                return this.toFixed(BN(this.unstakepercentage / 100).times(this.staked_balance / 1e18))\n            },\n            showInfApprovalZap() {\n                if(!this.withdrawc && this.currentPool != 'susdv2')\n                    return true\n                if(this.share != '---' && ((this.to_currency !== null && this.to_currency < 10) || this.to_currency == 10)) {\n                    return true\n                }\n            },\n        },\n        mounted() {\n        \tif(['susdv2', 'sbtc', 'y', 'iearn'].includes(this.currentPool)) {\n        \t\tthis.showstaked = true\n        \t}\n        \tthis.$watch(() => this.showstaked, this.handle_change_share)\n        \tif(currentContract.currentContract == 'susd') this.withdrawc = true;\n        \tthis.setInputStyles(true)\n            if(currentContract.initializedContracts) this.mounted();\n        },\n        methods: {\n            async mounted() {\n            \tif(['susdv2', 'tbtc', 'ren', 'sbtc'].includes(this.currentPool)) {\n            \t\tthis.withdrawc = true;\n            \t\tthis.to_currency = null\n            \t}\n                else\n                    this.withdrawc = false\n            \tcurrentContract.showSlippage = false;\n        \t\tcurrentContract.slippage = 0;\n                // let curveRewards = currentContract.curveRewards\n                let allowance = BN(await currentContract.swap_token.methods.allowance(currentContract.default_account || '0x0000000000000000000000000000000000000000', currentContract.deposit_zap._address).call())\n                if(allowance.lte(currentContract.max_allowance.div(BN(2))))\n                    this.inf_approval = false\n                // if(['susdv2', 'y', 'iearn'].includes(this.currentPool)) {\n                //     this.pendingSNXRewards = await curveRewards.methods.earned(this.default_account).call()\n                //     console.log(this.pendingSNXRewards, \"PENDING SNX REWARDS\")\n                // }\n                if(['sbtc'].includes(this.currentPool)) {\n                    this.balancerPool = new currentContract.web3.eth.Contract(balancer_ABI, balancer_address)\n                    window.balancerPool = this.balancerPool\n                    let calls = [\n                        // [curveRewards._address, curveRewards.methods.earned(this.default_account).encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.totalSupply().encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0xc011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f').encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.getBalance('0x408e41876cccdc0f92210600ef50372656052a38').encodeABI()],\n                        [this.balancerPool._address, this.balancerPool.methods.balanceOf(currentContract.default_account).encodeABI()],\n                    ]\n                    let aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\n                    this.pendingBALRewards = decoded[0]\n                    this.pendingSNXRewards = decoded[0] * decoded[2] / decoded[1]\n                    this.pendingRENRewards = decoded[0] * decoded[3] / decoded[1]\n\n                    this.withdrawBALPool = decoded[4]\n                    this.withdrawSNXPool = decoded[4] * decoded[2] / decoded[1]\n                    this.withdrawRENPool = decoded[4] * decoded[3] / decoded[1]\n\n                }\n                if(['y','iearn'].includes(this.currentPool)) {\n                    this.withdrawADAI = await currentContract.aRewards.methods.claimable(currentContract.default_account).call()\n                }\n\n                await common.update_fee_info();\n                await this.update_balances();\n                this.setCalcBalances()\n            \tthis.handle_change_share();\n            },\n            getTokenIcon(token) {\n                return helpers.getTokenIcon(token, this.withdrawc, this.currentPool)\n            },\n            toFixed(num, precisions = 2, round = 4) {\n                if(num == '' || num == undefined || +num == 0) return '0.00'\n                if(precisions == 2 && ['tbtc', 'ren', 'sbtc'].includes(currentContract.currentContract)) precisions = 8\n                let rounded = num.toFixed(precisions)\n                return isNaN(rounded) ? '0.00' : rounded\n            },\n            inputsFormat(i) {\n        \t\tif(this.inputs[i]) {\n        \t\t\treturn this.toFixed(+this.inputs[i])\n        \t\t}\n        \t\treturn '0.00'\n        \t},\n            setInputStyles(newInputs = false, newContract, oldContract) {\n\t        \tif(oldContract) {\n                    for(let i = 0; i < allabis[newContract].N_COINS - allabis[oldContract].N_COINS; i++) {\n                        this.inputs.push('0.00')\n                    }\n                    if(allabis[oldContract].N_COINS - allabis[newContract].N_COINS > 0) {\n                        this.inputs = this.inputs.filter((_, i) => i < allabis[newContract].N_COINS)\n                    }\n                }\n                else if(newInputs) {\n                    this.inputs = new Array(Object.keys(this.currencies).length).fill('0.00')\n                }\n\t        \t// this.inputStyles = Array(Object.keys(this.currencies).length).fill({\n\t        \t// \tbackgroundColor: '#F9F9F9',\n\t        \t// \tcolor: '#BABABA',\n\t        \t// })\n            },\n            async calcSlippage(...args) {\n            \tthis.slippagePromise.cancel();\n        \t\tthis.slippagePromise = helpers.makeCancelable(common.calc_slippage(...args))\n        \t\tawait this.slippagePromise;\n            },\n            handleCheck(val) {\n            \tif(val === this.to_currency) {\n            \t\tif(this.withdrawc == false) this.withdrawc = true\n            \t\tthis.to_currency = null\n\n            \t\tcurrentContract.slippage = 0\n            \t\tcurrentContract.showSlippage = false\n            \t}\n            \telse {\n            \t\tthis.withdrawc = false\n            \t\tthis.to_currency = val\n            \t}\n            },\n            setCalcBalances() {\n                for (let i = 0; i < currentContract.N_COINS; i++) {\n                    let token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n                    let value = BN(100 / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n                    Vue.set(this.calc_balances, i, value)\n                }\n            },\n            async update_balances() {\n            \tlet calls = []\n\t\t\t    if (currentContract.default_account) {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t        \tcalls.push([currentContract.underlying_coins[i]._address ,currentContract.underlying_coins[i].methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t        }\n\t\t\t        calls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t    }\n\t\t\t    else {\n\t\t\t        this.token_balance = BN(0);\n\t\t\t    }\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tcalls.push([currentContract.swap._address ,currentContract.swap.methods.balances(i).encodeABI()])\n\t\t\t    }\n\t\t    \t// if(['susdv2', 'sbtc','y','iearn'].includes(this.currentPool)) calls.push([currentContract.curveRewards._address, currentContract.curveRewards.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t\t\tcalls.push([currentContract.swap_token._address ,currentContract.swap_token.methods.totalSupply().encodeABI()])\n\t\t\t\tlet aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n\t\t\t\tlet decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n\t\t\t\tif(currentContract.default_account) {\n\t\t\t\t\tdecoded.slice(0, currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\t\tVue.set(this.wallet_balances, i, +v / allabis[this.currentPool].coin_precisions[i])\n\t\t\t\t\t})\n\t\t\t\t\tthis.token_balance = BN(decoded[currentContract.N_COINS])\n\t\t\t\t\tdecoded = decoded.slice(currentContract.N_COINS+1)\t\t\t\n\t\t\t\t}\n\t\t\t\tdecoded.slice(0, currentContract.N_COINS+1 + currentContract.N_COINS).map((v, i) => {\n\t\t\t\t\tVue.set(this.balances, i, +v)\n\t\t\t        if(!currentContract.default_account) Vue.set(this.balances, i, 0)\n\t\t\t\t})\n                console.log(decoded[decoded.length-2])\n                if(['susdv2', 'sbtc','y','iearn'].includes(this.currentPool)) this.staked_balance = BN(decoded[decoded.length-2])\n                else this.staked_balance = BN(0)\n                this.unstakepercentage = this.toFixed(this.staked_balance.div(1e18))\n\t\t\t\tthis.token_supply = +decoded[decoded.length-1]\n\t\t\t},\n\t\t\tasync handle_change_amounts(i, event) {\n                this.showWithdrawSlippage = true;\n                this.show_nobalance = false\n\t\t\t\tif(event) {\n\t\t\t\t\tthis.inputs[i] = event.target.value\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif(this.currentPool == 'susd') return;\n\t\t\t\tthis.to_currency = null\n\t\t        var values = this.inputs.map((x,i) => x / currentContract.c_rates[i])\n\t\t        values = values.map(v=>BN(Math.floor(v).toString()).toFixed(0))\n\t\t        this.show_nobalance = false;\n\t\t        this.show_nobalance_i = 0;\n\t\t        let calls = [...Array(currentContract.N_COINS).keys()].map(i=>[currentContract.swap._address, currentContract.swap.methods.balances(i).encodeABI()])\n\t\t        calls.push([currentContract.swap._address ,currentContract.swap.methods.calc_token_amount(values, false).encodeABI()])\n\t\t        calls.push([currentContract.swap_token._address, currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').encodeABI()])\n\t\t        try {\n                    let aggcalls = await currentContract.multicall.methods.aggregate(calls).call()\n                    let decoded = aggcalls[1].map(hex => currentContract.web3.eth.abi.decodeParameter('uint256', hex))\n                    decoded.slice(0, currentContract.N_COINS).forEach((v, i) => {\n                        let coin_balance = +v * currentContract.c_rates[i]\n                        if(coin_balance < this.inputs[i]) {\n                            this.show_nobalance |= true;\n                            this.show_nobalance_i = i;\n                        }\n                        else\n                            this.show_nobalance |= false;\n                    })\n\t\t            var availableAmount = BN(decoded[decoded.length-2])\n\t\t            availableAmount = availableAmount.div(BN(1 - currentContract.fee * currentContract.N_COINS / (4 * (currentContract.N_COINS - 1))))\n\t\t            var maxAvailableAmount = BN(decoded[decoded.length-1]);\n\t\t            if(availableAmount.gt(maxAvailableAmount.plus(BN(this.staked_balance)))) {\n\t\t                this.setAllInputBackground('red')\n\t\t            }\n\t\t            else {\n\t\t                this.setAllInputBackground('blue')\n\t\t            }\n\t\t            this.calcSlippage(this.inputs, false);\n\n\t\t            this.share = '---';\n\t\t            // this.shareStyles = {\n\t\t            // \tbackgroundColor: '#F9F9F9',\n\t\t            // \tcolor: '#BABABA'\n\t\t            // }\n\t\t        }\n\t\t        catch(err) {\n\t\t            console.error(err)\n                    this.show_nobalance = true;\n                    this.show_nobalance_i = currentContract.bal_info.findIndex((balance, i) => {\n                        return +this.inputs[i] > +balance\n                    });\n\t\t            this.setAllInputBackground('red')\n\t\t        }\n\t\t\t},\n\t\t\tasync getMinAmounts() {\n\t\t\t\t//use update rates instead\n\t\t\t\tawait common.update_fee_info();\n\t\t\t\tlet min_amounts = []\n\t\t\t\tfor(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t    \tmin_amounts[i] = BN(0.98).times(this.share/100).times(BN(this.balances[i]))\n\t\t\t\t\tif(!this.withdrawc) {\n\t\t\t\t\t\tmin_amounts[i] = min_amounts[i]\n\t\t\t\t\t\t\t\t\t\t.times(allabis[currentContract.currentContract].coin_precisions[i])\n\t\t\t\t\t\t\t\t\t\t.times(currentContract.c_rates[i])\n\t\t\t\t\t}\n\t\t\t\t\tmin_amounts[i] = min_amounts[i].times(BN(this.token_balance))\n\t\t\t\t\t\t            .div(BN(this.token_supply))\n\t\t\t\t\t\t            .toFixed(0,1)\n\t\t\t\t}\n\t\t\t\treturn min_amounts;\n\t\t\t},\n            async claim_SNX(claim_bpt_only = false, unstake = true) {\n                this.show_loading = true\n                this.waitingMessage = `Please confirm claiming ${(this.pendingSNXRewards / 1e18).toFixed(2)} \n                    ${['y', 'iearn'].includes(this.currentPool) ? 'YFI' : 'SNX'}`\n                if(this.currentPool == 'sbtc')\n                    this.waitingMessage += ` and ${(this.pendingRENRewards / 1e18).toFixed(2)} REN`\n                \n                var { dismiss } = notifyNotification(this.waitingMessage)\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n                this.estimateGas = 200000\n\n                let earned = await currentContract.curveRewards.methods.earned(currentContract.default_account).call()\n\n                if(earned > 0 && unstake) {\n                    await new Promise((resolve, reject) => {\n                        currentContract.curveRewards.methods.getReward()\n                            .send({\n                                from: currentContract.default_account,\n                                gasPrice: this.gasPriceWei,\n                                gas: 400000,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                            })\n                            .on('receipt', () => {\n                                this.pendingSNXRewards = 0\n                                resolve()\n                            })\n                            .catch(err => {\n                                errorStore.handleError(err)\n                                dismiss()\n                                reject(err)\n                            })\n                    })\n                }\n\n                if(this.currentPool == 'sbtc' && (!claim_bpt_only || !unstake)) {\n                    this.estimateGas = 300000\n\n                    try {\n                        let balancerBalance = BN(await this.balancerPool.methods.balanceOf(currentContract.default_account).call())\n                        await this.balancerPool.methods.exitPool(balancerBalance.toFixed(0,1), ['0', '0'])\n                        .send({\n                            from: currentContract.default_account,\n                            gasPrice: this.gasPriceWei,\n                            gas: 600000,\n                        })\n                        .once('transactionHash', hash => {\n                            dismiss()\n                            notifyHandler(hash)\n                        })\n                    }\n                    catch(err) {\n                        console.log(err)\n                        dismiss()\n                        errorStore.handleError(err)\n                    }\n                }\n\n                this.show_loading = false\n\n            },\n            // async claimYFIaDAI() {\n            //     this.estimateGas = 50000\n\n            //     var { dismiss } = notifyNotification('Please confirm approval to burn YFI for aDAI')\n\n            //     try {\n\n            //         let balance = BN(await currentContract.aRewards.methods.claimable(currentContract.default_account).call())\n            //         let yFI = new currentContract.web3.eth.Contract(ERC20_abi, '0x0bc529c00C6401aEF6D220BE8C6Ea1667F6Ad93e')\n            //         await common.approveAmount(yFI, balance, currentContract.default_account, currentContract.aRewards._address)\n            //         dismiss()\n\n            //         var { dismiss1 } = notifyNotification('Please confirm burning YFI to aDAI transaction')\n\n            //         await currentContract.aRewards.methods.claim(balance.toFixed(0,1))\n            //         .send({\n            //             from: currentContract.default_account,\n            //             gasPrice: this.gasPriceWei,\n            //             gas: 125000,\n            //         })\n            //         .once('transactionHash', hash => {\n            //             dismiss1()\n            //             notifyHandler(hash)\n            //         })\n            //         .on('error', err => {\n            //             dismiss1()\n            //             throw err\n            //         })\n            //     }\n            //     catch(err) {\n            //         console.log(err)\n            //         dismiss()\n            //         errorStore.handleError(err)\n            //     }\n            // },\n            async unstakeStaked() {\n                let amount = BN(this.unstakepercentage).times(1e18)\n                this.unstake(amount, false, true)\n            },\n\t\t\tasync unstake(amount, exit = false, unstake_only = false) {\n                if(unstake_only)\n                    this.waitingMessage = `\n                        Please confirm unstaking ${this.toFixed(amount.div(BN(1e18)))} tokens\n                    `\n                else \n                    this.waitingMessage = `\n                    Unstaking ${this.toFixed(amount.div(BN(1e18)))} tokens for withdrawal.\n                    <br>\n                    A bit more tokens are needed to unstake to ensure that withdrawal is successful.\n                    You'll see them in your unstaked balance afterwards.\n                        \n                `;\n                \n                var { dismiss } = notifyNotification(this.waitingMessage)\n\n                let stakedAmount = BN(await currentContract.curveRewards.methods.balanceOf(currentContract.default_account).call())\n\n                if(stakedAmount.lt(amount))\n                    amount = stakedAmount\n\n                try {\n    \t\t\t\tawait new Promise((resolve, reject) => {\n    \t\t\t\t\tcurrentContract.curveRewards.methods.withdraw(amount.toFixed(0,1))\n    \t\t\t\t\t\t.send({\n    \t\t\t\t\t\t\tfrom: currentContract.default_account,\n    \t\t\t\t\t\t\tgasPrice: this.gasPriceWei,\n                                gas: 125000,\n    \t\t\t\t\t\t})\n    \t\t\t\t\t\t.once('transactionHash', hash => {\n                                this.waitingMessage = 'Waiting for unstake transaction to confirm'\n                                dismiss()\n                                notifyHandler(hash)\n                                resolve()\n                            })\n                            .on('receipt', receipt => {\n                                this.staked_balance = this.staked_balance.minus(amount)\n                                currentContract.curveStakedBalance -= amount\n                                common.update_fee_info()\n                            })\n                            .catch(err => {\n                                dismiss()\n                                reject(err)\n                            })\n    \t\t\t\t})\n                    if(exit) {\n        \t\t\t\tthis.claim_SNX()\n                        //if(['y', 'iearn'].includes(this.currentPool))\n                            //this.showModal = true\n                    }\n                }\n                catch(err) {\n                    console.log(err)\n                    errorStore.handleError(err)\n                    this.waitingMessage = ''\n                    this.show_loading = false;\n                    throw err\n                }\n                this.waitingMessage = ''\n                this.show_loading = false\n\t\t\t},\n            setLoadingAction(val) {\n                this.loadingAction = val;\n                setTimeout(() => this.loadingAction = false, 500)\n            },\n\t\t\tasync handle_remove_liquidity(unstake = false, unstake_only = false, exit = false) {\n                await common.update_fee_info();\n                await this.update_balances();\n\n                let actionType = unstake == false ? 1 : 2\n                if(this.loadingAction == actionType) return;\n                this.setLoadingAction(actionType)\n                let promises = await Promise.all([helpers.getETHPrice()])\n                this.ethPrice = promises[0]\n                this.estimateGas = 0;\n                if(['susdv2', 'sbtc','y','earn'].includes(this.currentPool)) {\n                    if(unstake_only) {\n                        this.estimateGas = 125000\n                        if(this.currentPool == 'sbtc') this.estimateGas += 300000\n                    }\n                    else {\n                        let nonZeroInputs = this.inputs.filter(Number).length\n                        if(this.share == '---') {\n                            this.estimateGas = contractGas.withdraw[this.currentPool].imbalance(nonZeroInputs) | 0\n                        }\n                        else if(this.to_currency !== null && this.to_currency < 10) {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdraw / 2\n                        }\n                        else {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdrawShare / 2\n                        }\n                    }\n                }\n                this.show_loading = true;\n                let inOneCoin = currentContract.deposit_zap\n                if(['tbtc','ren', 'sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n\t\t\t\tlet min_amounts = []\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n                    if(!this.inputs[i]) {\n                        Vue.set(this.amounts, i, 0)\n                        continue\n                    }\n                    let maxDiff = BN(this.calc_balances[i]).minus(BN(this.inputs[i]))\n                    let useMax = this.calc_balances[i] > 0 && maxDiff.lte(BN(this.minAmount)) && maxDiff > 0\n                    if(useMax) {\n\t\t\t    \t\tVue.set(this.amounts, i, BN(this.calc_balances[i]).div(currentContract.c_rates[i]).toFixed(0,1))\n\t\t\t    \t}\n\t\t\t    \telse {\n\t\t\t        \tVue.set(this.amounts, i, BN(Math.floor(this.inputs[i] / currentContract.c_rates[i]).toString()).toFixed(0,1)); // -> c-tokens\n\t\t\t    \t}\n\t\t\t    }\n\t\t\t    var txhash;\n                this.amounts = this.amounts.map(amount => amount || 0)\n\t\t\t    if (this.share == '---') {\n\t\t\t    \tvar token_amount;\n\t\t\t        try {\n\t\t\t        \ttoken_amount = await currentContract.swap.methods.calc_token_amount(this.amounts, false).call();\n\t\t\t        }\n\t\t\t        catch(err) {\n\t\t\t        \tconsole.error(err)\n\t\t\t\t\t\tthis.show_nobalance = true;\n\t\t\t\t\t\tthis.show_nobalance_i = this.to_currency;\n\t\t\t        }\n                    token_amount = BN(token_amount).times(BN(1).plus(this.calcFee))\n\t\t\t        token_amount = BN(Math.floor(token_amount * this.getMaxSlippage).toString()).toFixed(0,1)\n                    if((this.token_balance.lt(BN(token_amount)) || unstake) && ['susdv2', 'sbtc','y','iearn'].includes(this.currentPool)) {\n                        let unstakeAmount = BN(token_amount).minus(BN(this.token_balance))\n                        if(unstake) unstakeAmount = BN(token_amount) \n                        await this.unstake(unstakeAmount, unstake && !unstake_only, unstake_only)\n                    }\n                    if(unstake_only) return;\n\t\t\t        let nonZeroInputs = this.inputs.filter(Number).length\n\t\t\t        if(this.withdrawc || ['susdv2', 'sbtc'].includes(this.currentPool)) {\n\t\t\t        \tlet gas = contractGas.withdraw[this.currentPool].imbalance(nonZeroInputs) | 0\n                        try {\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n\n                            try {\n                                this.estimateGas = await currentContract.swap.methods.remove_liquidity_imbalance(this.amounts, token_amount)\n                                                    .estimateGas({\n                                                        from: currentContract.default_account,\n                                                        gasPrice: this.gasPriceWei,\n                                                        gas: gas,\n                                                    })\n                            }\n                            catch(err) {\n                                this.estimateGas = gas / 2;\n                            }\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait currentContract.swap.methods.remove_liquidity_imbalance(this.amounts, token_amount).send({\n    \t\t\t\t        \tfrom: currentContract.default_account, \n                                gasPrice: this.gasPriceWei,\n                                gas: gas,\n    \t\t\t\t        }).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = 'Waiting for withdrawal to confirm: no further action needed'\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t    \t}\n\t\t\t        else {\n\t\t\t        \tlet inputs = this.inputs;\n                        inputs = inputs.map(v => v || 0)\n\t\t\t        \tlet amounts = this.inputs.map((v, i) => {\n                            if(!v) v = 0\n                            let maxDiff = BN(this.calc_balances[i]).minus(BN(v))\n                            return this.calc_balances[i] > 0 && maxDiff.lte(BN(this.minAmount)) && maxDiff > 0 ? this.calc_balances[i].times(currentContract.coin_precisions[i]).toFixed(0, 1) : BN(v).times(currentContract.coin_precisions[i]).toFixed(0, 1)\n                        })\n                        amounts = amounts.map(amount => amount || 0)\n                        let gas = contractGas.depositzap[this.currentPool].withdrawImbalance(nonZeroInputs) | 0\n                        this.waitingMessage = `Please approve ${this.toFixed(token_amount / 1e18)} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        try {\n                            this.estimateGas = gas / (['compound', 'usdt'].includes(currentContract.currentContract) ? 1.5 : 2.5)\n                            if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(token_amount, undefined, undefined, this.inf_approvalamount)\n                            dismiss()\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait inOneCoin.methods.remove_liquidity_imbalance(amounts, token_amount).send({\n    \t\t\t\t        \tfrom: currentContract.default_account, \n                                gasPrice: this.gasPriceWei,\n                                gas: gas,\n    \t\t\t\t        }).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = 'Waiting for withdrawal to confirm: no further action needed'\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false;\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    else {\n                    let balance = BN(this.token_balance)\n                    if(this.share == 100) balance = BN(await currentContract.swap_token.methods.balanceOf(currentContract.default_account).call());\n                    if(this.showstaked) balance = balance.plus(this.staked_balance)\n                    var amount = BN(this.share).div(BN(100)).times(balance)\n\n                    if((this.token_balance.lt(amount) || unstake) && ['susdv2', 'sbtc', 'y', 'iearn'].includes(this.currentPool)) {\n                        let unstakeAmount = BN(amount).minus(BN(this.token_balance))\n                        if(unstake) unstakeAmount = BN(amount)\n                        await this.unstake(unstakeAmount, unstake && !unstake_only, unstake_only)\n                    }\n                    if(unstake_only) return;\n                    amount = amount.toFixed(0,1)\n                    if(this.to_currency !== null && this.to_currency < 10) {\n                        this.waitingMessage = `Please approve ${this.toFixed((amount / 1e18))} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        this.estimateGas = contractGas.depositzap[this.currentPool].withdraw / 2\n                        if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(amount, undefined, undefined, this.inf_approval)\n                        dismiss()\n                        let min_amount;\n                        try {\n                            min_amount = await inOneCoin.methods.calc_withdraw_one_coin(amount, this.to_currency).call();\n                            min_amount = BN(min_amount).times(BN(1).minus(this.calcFee))\n                        }\n                        catch(err) {\n                            console.error(err)\n                            this.show_nobalance = true;\n                            this.show_nobalance_i = this.to_currency;\n                        }\n                        this.waitingMessage = 'Please confirm withdrawal transaction'\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        let args = [BN(amount).toFixed(0,1), this.to_currency, BN(min_amount).times(BN(1).div(BN(this.getMaxSlippage))).toFixed(0, 1)]\n                        if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) args.push(this.donate_dust)\n                        await helpers.setTimeoutPromise(100)\n\t\t\t        \ttry {\n                            await inOneCoin.methods\n\t\t\t        \t\t.remove_liquidity_one_coin(...args)\n\t\t\t        \t\t.send({\n\t\t\t        \t\t\tfrom: currentContract.default_account,\n\t\t\t        \t\t\tgasPrice: this.gasPriceWei,\n                                gas: contractGas.depositzap[this.currentPool].withdraw | 0,\n\t\t\t        \t\t}).once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal \n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            })\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                        }\n\t\t\t        }\n\t\t\t        else if(this.to_currency == 10) {\n                        this.waitingMessage = `Please approve ${this.toFixed(amount / 1e18)} Curve LP tokens for withdrawal`\n                        var { dismiss } = notifyNotification(this.waitingMessage)\n                        try {\n                            this.estimateGas = contractGas.depositzap[this.currentPool].withdrawShare / 2\n                            if(!['tbtc','ren','sbtc'].includes(currentContract.currentContract)) await common.ensure_allowance_zap_out(amount, undefined, undefined, this.inf_approval)\n                            dismiss()\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            let min_amounts = await this.getMinAmounts();\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait inOneCoin.methods.remove_liquidity(amount, min_amounts)\n    \t\t\t        \t.send({\n                                from: currentContract.default_account, \n                                gasPrice: this.gasPriceWei,\n                                gas: contractGas.depositzap[this.currentPool].withdrawShare,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal \n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            });\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t        else {\n                        try {\n    \t\t\t        \tlet min_amounts = await this.getMinAmounts();\n                            this.waitingMessage = 'Please confirm withdrawal transaction'\n                            var { dismiss } = notifyNotification(this.waitingMessage)\n                            try {\n                                this.estimateGas = await currentContract.swap.methods.remove_liquidity(amount, min_amounts)\n                                                    .estimateGas({\n                                                        from: currentContract.default_account,\n                                                        gasPrice: this.gasPriceWei,\n                                                        gas: 600000,\n                                                    })\n                            }\n                            catch(err) {\n                                this.estimateGas = 600000\n                            }\n                            await helpers.setTimeoutPromise(100)\n    \t\t\t        \tawait currentContract.swap.methods.remove_liquidity(amount, min_amounts).send({\n                                from: currentContract.default_account, \n                                gasPrice: this.gasPriceWei,\n                                gas: 600000,\n                            })\n                            .once('transactionHash', hash => {\n                                dismiss()\n                                notifyHandler(hash)\n                                this.waitingMessage = `Waiting for withdrawal \n                                <a href='https://etherscan.io/tx/${hash}'>transaction</a>\n                                to confirm: no further action needed`\n                            });\n                        }\n                        catch(err) {\n                            console.error(err)\n                            dismiss()\n                            errorStore.handleError(err)\n                            this.waitingMessage = ''\n                            this.show_loading = false\n                            throw err;\n                        }\n\t\t\t        }\n\t\t\t    }\n\t\t\t    if(this.share == '---') {\n\t\t\t        for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t            this.handle_change_amounts(i);\n\t\t\t        }\n\t\t\t    }\n                this.show_loading = false;\n                this.waitingMessage = ''\n                this.estimateGas = 0\n\n\t\t\t    await this.update_balances();\n\t\t\t    await common.update_fee_info();\n\t\t\t},\n\t\t\tasync handle_change_share() {\n                let inOneCoin = currentContract.deposit_zap\n                if(['tbtc','ren','sbtc'].includes(currentContract.currentContract)) inOneCoin = currentContract.swap\n\n                this.warninglow = false;\n                this.showWithdrawSlippage = false\n                this.show_nobalance = false\n                if(this.to_currency == null && this.withdrawc == false && this.share == '---') this.to_currency = 10\n                if(this.share != '---' && this.to_currency != null && this.to_currency != 10) this.showWithdrawSlippage = true\n\t\t\t\tlet token_balance = this.showstaked ? this.token_balance.plus(this.staked_balance) : this.token_balance\n\t        \tcurrentContract.showSlippage = false;\n        \t\tcurrentContract.slippage = 0;\n        \t\tif(this.to_currency !== null && this.to_currency < 10) {\n                    var amount = BN(this.share).div(BN(100)).times(token_balance).toFixed(0,1);\n                    if (this.share == 100) {\n                        amount = await currentContract.swap_token.methods.balanceOf(currentContract.default_account || '0x0000000000000000000000000000000000000000').call();\n                        if(this.showstaked) amount = BN(amount).plus(BN(this.staked_balance)).toFixed(0,1)\n                    }\n/*\t\t\t\t        this.inputs = this.inputs.map(v=>0)\n\t\t\t\t        Vue.set(this.inputs, this.to_currency, amount / 1e18)\n\t\t\t\t        let ref = 'inputs'+this.to_currency\n\t\t\t\t        this.handle_change_amounts(this.to_currency);*/\n\t\t\t\t        //this.$refs[ref][0].focus();\n\t                let precision = allabis[currentContract.currentContract].coin_precisions[this.to_currency]\n\t\t\t\t\tlet zap_values = Array(currentContract.N_COINS).fill(0)\n\t\t\t\t\ttry {\n                        this.warninglow = false\n\t\t\t\t\t\tzap_values[this.to_currency] = BN(await inOneCoin.methods.calc_withdraw_one_coin(amount, this.to_currency).call())\n                        if(zap_values[this.to_currency].eq(BN(0))) this.warninglow = true\n\t\t\t\t\t}\n\t\t\t\t\tcatch(err) {\n\t\t\t\t\t\tconsole.error(err)\n                        if(this.share != '') {\n    \t\t\t\t\t\tthis.show_nobalance = true;\n    \t\t\t\t\t\tthis.show_nobalance_i = this.to_currency;\n                        }\n\t\t\t\t\t}\n\t\t\t        let real_values = Array(currentContract.N_COINS).fill(0)\n\t\t\t        real_values[this.to_currency] = zap_values[this.to_currency].div(precision)\n\t\t\t        this.inputs = this.inputs.map(v=>0)\n\t\t\t        this.inputs[this.to_currency] = this.toFixed(BN(real_values[this.to_currency]), 2,1)\n\t\t\t\t    await this.calcSlippage([], false, zap_values, this.to_currency)\n        \t\t}\n\n\t\t\t\t// this.shareStyles.backgroundColor = 'blue'\n\t\t\t\t// this.shareStyles.color = 'aqua'\n\t\t\t    if (this.share == '---') {\n\t\t\t        this.share = 0;\n\t\t\t    }\n\t\t\t    else if ((this.share > 100) | (this.share < 0))\n\t\t\t        // this.shareStyles.backgroundColor = 'red'\n\t\t\t    if(this.to_currency !== null && this.to_currency < 10) return;\n\t\t\t    for (let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t        if ((this.share >=0) & (this.share <= 100)) {\n\t\t\t        \tlet value = BN(this.share / 100 * this.balances[i] * currentContract.c_rates[i] * token_balance / this.token_supply)\n\t\t\t            Vue.set(this.inputs, i, this.toFixed(value, 2, 1))\n\t\t\t        }\n\t\t\t        else {\n\t\t\t            Vue.set(this.inputs, i, 0)\n\t\t\t        }\n\t\t\t        Vue.set(this.inputStyles, i, {\n\t\t\t        \tbackgroundColor: '#393B41',\n\t\t\t        \tcolor: '#BABABA'\n\t\t\t        })\n\t\t\t    }\n\t\t\t},\n\t\t\tsetAllInputBackground(bgcolor) {\n\t\t\t\t// for(let i = 0; i < currentContract.N_COINS; i++) {\n\t\t\t\t// \tVue.set(this.inputStyles, i, Object.assign(this.inputStyles[i] || {}, {backgroundColor: bgcolor}))\n\t\t\t\t// }\n\t\t\t},\n\t        async handle_migrate_new() {\n\t        \tif(this.currentPool == 'compound')\n\t        \t\treturn common.handle_migrate_new('new')\n\t        \tthis.share = 100\n\t        \tawait this.handle_remove_liquidity();\n\t        },\n            async migrateUSDT() {\n                this.withdrawc = false;\n                let amounts = this.inputs;\n                amounts.push(0);\n                this.handle_remove_liquidity()\n                await init(currentContract.contracts.pax)\n\n                amounts = amounts.map((v, i)=>BN(v).times(allabis.pax.coin_precisions[i]).toFixed(0))\n                this.waitingMessage = 'Please approve spending your coins'\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                await common.ensure_allowance(amounts, true, 'pax', 3)\n                dismiss()\n                let pax_deposit_zap = new currentContract.web3.eth.Contract(allabis.pax.deposit_abi, allabis.pax.deposit_address)\n                let token_amount = await currentContract.contracts.pax.swap.methods.calc_token_amount(amounts, true).call();\n                token_amount = BN(Math.floor(token_amount * 0.99).toString()).toFixed(0,1);\n                this.waitingMessage = 'Please confirm deposit to PAX pool transaction'\n                var { dismiss } = notifyNotification(this.waitingMessage)\n                let nonZeroInputs = amounts.filter(Number).length\n                let gas = contractGas.depositzap.pax.deposit(nonZeroInputs) | 0\n                await helpers.setTimeoutPromise(100)\n                try {\n                    let add_liquidity = pax_deposit_zap.methods.add_liquidity(amounts, token_amount).send({\n                        from: currentContract.default_account,\n                        gas: gas,\n                    })\n                    .once('transactionHash', hash => {\n                        dismiss()\n                        notifyHandler(hash)\n                        this.waitingMessage = `Waiting for deposit to PAX transaction to confirm no further action required`\n                    })\n                }\n                catch(err) {\n                    console.error(err)\n                    errorStore.handleError(err)\n                }\n            }\n        },\n\n    }\n</script>\n\n<style lang=\"less\" scoped>\n.add-liquidity {\n    background: #0B0D13;\n    padding: 20px;\n    overflow: hidden;\n}\n\n.percentage-section {\n    .title {\n        display: flex;\n        justify-content: space-between;\n        margin-bottom: 20px;\n        font-size: 18px;\n        color: #fff;\n    }\n}\n\n.currencies-section {\n    margin-top: 34px;\n    label {\n        // height: 21px;\n        font-size: 18px;\n        color: #fff;\n        line-height: 22px;\n       \n    }\n    .token-icon {\n        vertical-align: middle;\n    }\n    .token-name {\n        vertical-align: middle;\n    }\n    li {\n        margin-top: 20px;\n        font-size: 18px;\n        color: #fff;\n        & .currency_label {\n            margin-bottom: 10px;\n            display: inline-block;\n        }\n    }\n}\n\n.withdraw-coins-section {\n    h2 {\n        height: 21px;\n        font-size: 18px;\n        color: #fff;\n        line-height: 22px;\n        font-weight: normal;\n    }\n\n    .withdraw-coins {\n        padding: 0 15px;\n        height: 236px;\n        box-sizing: border-box;\n        background: #0B0D13;\n        border-radius: 4px;\n        border: 1px solid #393B41;\n\n        li {\n            margin: 16px 0;\n            font-size: 18px;\n            color: #fff;\n        }\n    }\n}\n\n.max-slippage-section,\n.gas-price-section {\n    margin-top: 30px;\n    // height: 256px;\n    background: #0B0D13;\n    border-radius: 4px;\n    border: 1px solid #393B41;\n    padding: 15px 15px 0;\n}\n\n.amount-warning {\n    margin-top: 40px;\n}\n.trade-buttons {\n    margin-top: 20px;\n}\n#mintr {\n        margin-top: 30px;\n    a {\n    font-size: 18px;\n    color: #fff;\n    line-height: 22px;\n    text-decoration: none;\n    }\n}\n\n.simple-error {\n    margin: 20px 0;\n}\n\n.unstaking-options {\n        border-radius: 4px;\n    border: 1px solid #3a3c41;\n    padding: 15px;\n    margin-top: 14px;\n\n    & h2 {\n        margin: 0;\n        font-size: 18px;\n        font-weight: 500;\n    }\n    ul {\n        margin-top: 12px;\n\n    }\n    li {\n        display: flex;\n        height: 48px;\n        line-height: 48px;\n        & span {\n            margin-left: 8px;\n        }\n        & input {\n            width: 240px;\n            margin-left: 8px;\n        }\n        & button {\n            margin-left: 24px;\n        }\n    }\n    .unstake-btn {\n        padding-left: 30px;\n        padding-right: 30px;\n        height: 50px;\n        background: #E91C41;\n        border-radius: 5px;\n        border: 0;\n        color: #fff;\n        font-size: 20px;\n        cursor: pointer;\n        outline: none;\n    }\n}\n\n\t/* #remove-liquidity, #remove-liquidity-unstake, #claim-snx, #claim-bpt, #claim-snxbpt, #claim-adai {\n\t\tmargin-right: 1em;\n\t}\n\t#withdrawold {\n\t\tmargin-left: 3px;\n\t\tcolor: white;\n\t}\n\t#amount-warning {\n\t\tmargin-bottom: 1em;\n\t}\n\t#mintr {\n        margin-top: 1em;\n\t\tmargin-left: 1em;\n\t}\n\t#withdraw_buttons {\n\t\ttext-align: center;\n\t\tmargin-top: 3px;\n\t}\n    .currency_label {\n        display: block;\n        margin-bottom: 0.3em;\n    }\n    .currency_label .token-icon {\n        margin-right: 0.6em;\n    }\n    .withdrawin {\n        margin-bottom: 0.3em;\n    }\n    #withdraw_buttons button:nth-child(n+3) {\n        margin-top: 0.6em;\n    }\n    .hoverpointer {\n        cursor: pointer;\n    }\n    .modal-content {\n        text-align: center;\n        padding: 0;\n        border: none;\n        width: 280px;\n    }\n    .modal-content fieldset {\n        color: white;\n        font-weight: bolder;\n        border: 6px double white;\n        padding-block-start: 1em;\n        padding-block-end: 1em;\n    }\n    .modal-content button {\n        margin-top: 0.6em;\n        padding: 0 2em;\n    }\n    .legend2 {\n      position: absolute;\n      top: 0;\n      left: 2em;\n      background: #c0c0c0;\n      line-height:1.2em;\n    }\n    .greentext {\n        color: green;\n    }\n    .legend2 .greentext {\n        display: inline-block;\n        transform: translate3d(0,-0.1em,10em);\n    }\n    .legend2 .greentext:hover {\n        transform: none;\n    }\n    .warningtext {\n        color: darkred;\n    }\n    .buttoncancel {\n        margin-left: 1em;\n        background: gray;\n        box-shadow: none;\n        border: none;\n    }\n    .modaltext {\n        color: black;\n    }\n    .advancedoptions {\n        margin-top: 1em;\n    }\n    .advancedoptions + div fieldset {\n        margin-top: 1em;\n    }\n    .advancedoptions + div legend {\n        text-align: center;\n    }\n    #unstakestaked {\n        margin-left: 1em;\n    }\n    #unstakepercentage {\n        width: 5.1em;\n    }\n    #stakedbalance span {\n        cursor: pointer;\n        border-bottom: 1px solid black;\n        border-bottom-style: dashed;\n    }\n    label[for='unstakepercentage'] {\n        margin-right: 1em;\n    }\n    #unstakepercentage.invalid {\n        background-color: red;\n    }\n    #stakedbalance + div {\n        margin-top: 1em;\n    } */\n</style>\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Withdraw.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Withdraw.vue?vue&type=template&id=31e64fd1&scoped=true&\"\nimport script from \"./Withdraw.vue?vue&type=script&lang=js&\"\nexport * from \"./Withdraw.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Withdraw.vue?vue&type=style&index=0&id=31e64fd1&lang=less&scoped=true&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"31e64fd1\",\n  null\n  \n)\n\nexport default component.exports","<template>\n\t<div class='window white'>\n\t\t<div class='info-message gentle-message betaversion' v-show='swapbtc'>\n\t\t\tThis is a beta version. Please test with small amounts and use with caution.\n\t\t</div>\n\t\t<div v-show=\"['ren', 'sbtc'].includes(currentPool)\" class='swapBTC-container info-message gentle-message'>\n\t        <input id='swapbtc' type='checkbox' value='swapbtc' v-model='swapbtc'/>\n\t        <label for='swapbtc'>Withdraw\n\t        \t<img :src=\"publicPath + 'tokens/btc.svg'\" class='token-icon vamiddle'>\n\t        \t<a href='https://guides.curve.fi/how-to-swap-bitcoin-for-wbtc-or-renbtc/' rel='noopener norefferer'>[?]</a>\n\t        \t<span v-show='hasIncomplete > 0 && swapbtc == false'>\n\t        \t\t({{hasIncomplete}} incomplete tx)\n\t        \t</span>\n\t        </label>\n\t    \t<span v-show='loading' class='loading line'></span>\n\t    </div>\n\t    <withdraw-native v-if='swapbtc' @loaded='loaded'></withdraw-native>\n\t    <withdraw v-if='!swapbtc || (swapbtc && !loaded)'></withdraw>\n    </div>\n</template>\n\n<script>\n    import { getters, contract as currentContract, gas as contractGas} from '../../contract'\n    import * as shiftState from '../ren/shiftState'\n\timport Withdraw from './Withdraw.vue'\n\n\timport LoadingComponent from '../ren/LoadingComponent.vue'\n    const WithdrawNative = () => ({\n        component: import('../ren/Withdraw.vue'),\n\n        loading: Withdraw,\n\n        delay: 0,\n    })\n\n\texport default {\n\t\tcomponents: {\n\t\t\tWithdraw,\n\t\t\tWithdrawNative,\n\t\t},\n\n\t\tcreated() {\n\t\t\tif(this.$route.path.includes('native')) this.swapbtc = true\n\t\t\tthis.$watch(() => currentContract.currentContract, (val, oldval) => {\n\t\t\t\tif(['ren', 'sbtc'].includes(oldval) && !['ren', 'sbtc'].includes(val)) this.swapbtc = false\n\t\t\t})\n\t\t},\n\n\t\tdata: () => ({\n\t\t\tloading: false,\n\t\t}),\n\n\t\twatch: {\n\t\t\tswapbtc(val) {\n\t\t\t\tif(val) this.loading = true\n\t\t\t\telse this.loading = false\n\t\t\t}\n\t\t},\n\n\t\tcomputed: {\n\t\t\tswapComponent() {\n\t\t\t\tif(this.swapbtc && ['ren', 'sbtc'].includes(currentContract.currentContract)) return 'WithdrawNative'\n\t\t\t\treturn 'Withdraw'\n\t\t\t},\n\t\t\tcurrentPool() {\n\t\t\t\treturn getters.currentPool()\n\t\t\t},\n\t\t\thasIncomplete() {\n\t\t\t\treturn shiftState.hasIncomplete()\n\t\t\t},\n\t\t\tswapbtc: {\n\t\t\t\tget() {\n\t\t\t\t\treturn currentContract.swapbtc && ['ren', 'sbtc'].includes(currentContract.currentContract)\n\t\t\t\t},\n\t\t\t\tset(val) {\n\t\t\t\t\tcurrentContract.swapbtc = val\n\t\t\t\t},\n\t\t\t},\n\t\t\tpublicPath() {\n                return process.env.BASE_URL\n            },\n\t\t},\n\n\t\tmethods: {\n\t\t\tloaded() {\n\t\t\t\tif(this.swapComponent == 'WithdrawNative') this.loading = false;\n\t\t\t}\n\t\t},\n\n\t}\n</script>\n\n<style scoped>\n\t.swapBTC-container {\n\t\tmargin-top: 1em;\n\t\tmargin-bottom: 1em;\n\t\tpadding-top: 0.4em;\n\t\tpadding-bottom: 0.4em;\n\t\tcursor: pointer;\n\t}\n\t.swapBTC-container label {\n\t\tcursor: pointer;\n\t}\n\t.loading.line {\n\t\tmargin-left: 1em;\n\t}\n</style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawRouter.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./WithdrawRouter.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./WithdrawRouter.vue?vue&type=template&id=269c65bd&scoped=true&\"\nimport script from \"./WithdrawRouter.vue?vue&type=script&lang=js&\"\nexport * from \"./WithdrawRouter.vue?vue&type=script&lang=js&\"\nimport style0 from \"./WithdrawRouter.vue?vue&type=style&index=0&id=269c65bd&scoped=true&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"269c65bd\",\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('span',{staticClass:\"loading line\"})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n\t<span class='loading line'></span>\n</template>\n\n<script>\n\texport default {\n\t\t\n\t}\n</script>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingComponent.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./LoadingComponent.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./LoadingComponent.vue?vue&type=template&id=4178df66&\"\nimport script from \"./LoadingComponent.vue?vue&type=script&lang=js&\"\nexport * from \"./LoadingComponent.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}